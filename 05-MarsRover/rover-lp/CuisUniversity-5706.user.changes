

----QUIT----(20 March 2023 11:15:29) CuisUniversity-5706.image priorSource: 4313282!

----STARTUP---- (20 March 2023 11:15:29) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5706.image!


----QUIT----(20 March 2023 11:15:30) CuisUniversity-5706.image priorSource: 8712809!

----STARTUP---- (12 May 2023 12:40:15) as C:\Users\RYZEN\Desktop\windows64\CuisUniversity-5706.image!


TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!

!classDefinition: #MarsRoverTest category: 'exercise-MarsRover' stamp: 'Lp 5/12/2023 12:43:00'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!
!MarsRoverTest methodsFor: 'no messages' stamp: 'Lp 5/12/2023 12:44:13'!
test01AlIniciarTieneUnaPosicionYDireccionCorrecta
	
	! !

!classDefinition: #MarsRover category: 'exercise-MarsRover' stamp: 'Lp 5/12/2023 12:46:52'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 12:47:54' prior: 50603951!
test01AlIniciarTieneUnaPosicionYDireccionCorrecta
	
	|marsRover|
	
	marsRover := MarsRover new inPosition: 0@0 facing: #Norte.
	
	self assert:(marsRover isInPosition: 0@0 andFacing:#Norte).! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 12:47:55'!
ERROR!
!MarsRover methodsFor: 'initialize' stamp: 'Lp 5/12/2023 12:48:21'!
inPosition: aRenameMe1 facing: aRenameMe2 
	self shouldBeImplemented.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 12:48:49' prior: 50603963!
test01AlIniciarTieneUnaPosicionYDireccionCorrecta
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	self assert:(marsRover isInPosition: 0@0 andFacing:#Norte).! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 12:48:51'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'Lp 5/12/2023 12:48:58'!
inPosition: aPoint facing: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeInPosition: aPoint facing: aSymbol ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'Lp 5/12/2023 12:49:17' prior: 50603994!
inPosition: aPoint facing: aSymbol 
	^self new initializeIn: aPoint facing: aSymbol ! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 12:49:22'!
ERROR!

!classDefinition: #MarsRover category: 'exercise-MarsRover' stamp: 'Lp 5/12/2023 12:49:29'!
Object subclass: #MarsRover
	instanceVariableNames: 'point'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!

!classDefinition: #MarsRover category: 'exercise-MarsRover' stamp: 'Lp 5/12/2023 12:49:29'!
Object subclass: #MarsRover
	instanceVariableNames: 'point symbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!
!MarsRover methodsFor: 'initialize' stamp: 'Lp 5/12/2023 12:49:29'!
initializeIn: aPoint facing: aSymbol 
	self shouldBeImplemented.
	point := aPoint.
	symbol := aSymbol.! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 12:49:50'!
ERROR!
!MarsRover methodsFor: 'initialize' stamp: 'Lp 5/12/2023 12:50:00' prior: 50604028!
initializeIn: aPoint facing: aSymbol 
	point := aPoint.
	symbol := aSymbol.! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 12:50:03'!
ERROR!

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 12:50:03'!
ERROR!

!methodRemoval: MarsRover #inPosition:facing: stamp: 'Lp 5/12/2023 12:50:32'!
inPosition: aRenameMe1 facing: aRenameMe2 
	self shouldBeImplemented.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 12:50:54' prior: 50603981!
test01AlIniciarTieneUnaPosicionYDireccionCorrecta
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Norte).! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 12:51:19'!
ERROR!

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 12:51:19'!
ERROR!
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 12:51:25'!
hasPosition: aRenameMe1 andFacing: aRenameMe2 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 12:51:34' prior: 50604072!
hasPosition: aRenameMe1 andFacing: aRenameMe2 
	^true! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 12:51:36'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 12:54:28'!
test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Norte).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 12:54:59' prior: 50604085!
test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: ''.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Norte).! !

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 12:55:09'!
ERROR!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 12:55:28'!
receiveCommands: aRenameMe1 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 12:55:36' prior: 50604109!
receiveCommands: aRenameMe1 
	self! !
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 12:55:43' prior: 50604114!
receiveCommands: aRenameMe1 
	^self! !

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 12:55:46'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 12:55:46'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 12:55:46'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 12:56:47'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 12:56:47'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 12:56:47'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 12:58:16'!
test03AlRecivirUnComandoFDeveriaDeCambiarSuPosicionHaciaAdelanteRespectoASuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: ''.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Norte).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 12:58:27' prior: 50604145!
test03AlRecivirUnComandoFDeveriaDeCambiarSuPosicionHaciaAdelanteRespectoASuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'f'.
	
	self assert:(marsRover hasPosition: 1@0 andFacing:#Norte).! !

!testRun: #MarsRoverTest #test03AlRecivirUnComandoFDeveriaDeCambiarSuPosicionHaciaAdelanteRespectoASuDireccion stamp: 'Lp 5/12/2023 12:58:34'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 12:58:34'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 12:58:34'!
PASSED!

!testRun: #MarsRoverTest #test03AlRecivirUnComandoFDeveriaDeCambiarSuPosicionHaciaAdelanteRespectoASuDireccion stamp: 'Lp 5/12/2023 12:58:34'!
PASSED!

!testRun: #MarsRoverTest #test03AlRecivirUnComandoFDeveriaDeCambiarSuPosicionHaciaAdelanteRespectoASuDireccion stamp: 'Lp 5/12/2023 12:59:10'!
PASSED!

!methodRemoval: MarsRoverTest #test03AlRecivirUnComandoFDeveriaDeCambiarSuPosicionHaciaAdelanteRespectoASuDireccion stamp: 'Lp 5/12/2023 12:59:14'!
test03AlRecivirUnComandoFDeveriaDeCambiarSuPosicionHaciaAdelanteRespectoASuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'f'.
	
	self assert:(marsRover hasPosition: 1@0 andFacing:#Norte).!
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 13:00:34' prior: 50604077!
hasPosition: aPosition andFacing: aDirection 
	^true! !
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 13:01:29' prior: 50604203!
hasPosition: aPosition andFacing: aDirection 
	aPosition = 0@0 ifTrue:[ aDirection = #Norte ifTrue:[^true]]! !
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 13:01:34' prior: 50604208!
hasPosition: aPosition andFacing: aDirection 
	aPosition = 0@0 ifTrue:[ aDirection = #Norte ifTrue:[^true]]
	^false! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:01:38'!
ERROR!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:01:38'!
ERROR!

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:01:48'!
ERROR!

aPosition = 0@0!
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 13:02:48' prior: 50604214!
hasPosition: aPosition andFacing: aDirection 
	aPosition = (0@0) ifTrue:[ aDirection = #Norte ifTrue:[^true]]
	^false! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:02:50'!
ERROR!
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 13:03:08' prior: 50604232!
hasPosition: aPosition andFacing: aDirection 
	aPosition = (0@0) ifTrue:[ aDirection = #Norte ifTrue:[^true]].
	^false! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:03:09'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:03:09'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:04:50'!
test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: ''.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Norte).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:04:57' prior: 50604256!
test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'f'.
	
	self assert:(marsRover hasPosition: 1@0 andFacing:#Norte).! !

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:04:58'!
FAILURE!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:06:49' prior: 50604118!
receiveCommands: aListOfCommands 
	aListOfCommands ='f' ifTrue:[self]! !

!classDefinition: #MarsRover category: 'exercise-MarsRover' stamp: 'Lp 5/12/2023 13:07:11'!
Object subclass: #MarsRover
	instanceVariableNames: 'position symbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:07:11' prior: 50604038!
initializeIn: aPoint facing: aSymbol 
	position := aPoint.
	symbol := aSymbol.! !

!classDefinition: #MarsRover category: 'exercise-MarsRover' stamp: 'Lp 5/12/2023 13:07:18'!
Object subclass: #MarsRover
	instanceVariableNames: 'position direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:07:18' prior: 50604296!
initializeIn: aPoint facing: aSymbol 
	position := aPoint.
	direction := aSymbol.! !
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:07:52' prior: 50604283!
receiveCommands: aListOfCommands 
	aListOfCommands ='f' ifTrue:[position :=1@0].! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:07:54'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:07:54'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:07:54'!
FAILURE!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:07:54'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 13:09:08' prior: 50604242!
hasPosition: aPosition andFacing: aDirection 
	aPosition = (0@0) ifTrue:[ aDirection = #Norte ifTrue:[^true]] ifFalse:[ aPosition = position]
	^false! !
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 13:09:12' prior: 50604338!
hasPosition: aPosition andFacing: aDirection 
	aPosition = position ifTrue:[ aDirection = #Norte ifTrue:[^true]] ifFalse:[ aPosition = position]
	^false! !
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 13:09:44' prior: 50604346!
hasPosition: aPosition andFacing: aDirection 
	aPosition = position ifTrue:[ aDirection = #Norte ifTrue:[^true]] 
	ifFalse:[ aPosition = position ifTrue:[aDirection = #Norte ifTrue:[^true]]]
	^false! !
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 13:09:46' prior: 50604354!
hasPosition: aPosition andFacing: aDirection 
	aPosition = position ifTrue:[ aDirection = #Norte ifTrue:[^true]] 
	ifFalse:[ aPosition = position ifTrue:[aDirection = #Norte ifTrue:[^true]]].
	^false! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:09:48'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:09:48'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:09:48'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:10:16'!
test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'f'.
	
	self assert:(marsRover hasPosition: 1@0 andFacing:#Norte).! !

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:10:18'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:10:18'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:10:18'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:10:18'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:10:18'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:10:23' prior: 50604384!
test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'f'.
	
	self assert:(marsRover hasPosition: 2@0 andFacing:#Norte).! !

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:10:23'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:10:41' prior: 50604417!
test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'ff'.
	
	self assert:(marsRover hasPosition: 2@0 andFacing:#Norte).! !

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:10:42'!
FAILURE!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:11:30' prior: 50604316!
receiveCommands: aListOfCommands 
	aListOfCommands ='f' ifTrue:[position :=1@0]
	ifFalse: [aListOfCommands ='ff' ifTrue:[position:=2@0]].! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:11:33'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:11:33'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:11:33'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:11:33'!
PASSED!
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 13:12:18' prior: 50604363!
hasPosition: aPosition andFacing: aDirection 
	aPosition = position ifTrue:[ aDirection = #Norte ifTrue:[^true]] 
	"ifFalse:[ aPosition = position ifTrue:[aDirection = #Norte ifTrue:[^true]]]".
	^false! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:12:19'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:12:19'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:12:19'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:12:19'!
PASSED!
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 13:12:24' prior: 50604473!
hasPosition: aPosition andFacing: aDirection 
	aPosition = position ifTrue:[ aDirection = #Norte ifTrue:[^true]] 
	.
	^false! !
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 13:12:48' prior: 50604499!
hasPosition: aPosition andFacing: aDirection 
	aPosition = position ifTrue:[ aDirection = #Norte ifTrue:[^true]] 
	"ifFalse:[ aPosition = position ifTrue:[aDirection = #Norte ifTrue:[^true]]]".
	^false! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:12:48'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:12:48'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:12:48'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:12:48'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:14:18' prior: 50604433!
test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'fff'.
	
	self assert:(marsRover hasPosition: 3@0 andFacing:#Norte).! !

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:14:19'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:14:30' prior: 50604533!
test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'ff'.
	
	self assert:(marsRover hasPosition: 2@0 andFacing:#Norte).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:14:45'!
test04AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'ff'.
	
	self assert:(marsRover hasPosition: 2@0 andFacing:#Norte).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:14:52' prior: 50604560!
test04AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'fff'.
	
	self assert:(marsRover hasPosition: 3@0 andFacing:#Norte).! !

!testRun: #MarsRoverTest #test04AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:14:54'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:15:07'!
test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'fff'.
	
	self assert:(marsRover hasPosition: 3@0 andFacing:#Norte).! !

!methodRemoval: MarsRoverTest #test04AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:15:07'!
test04AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'fff'.
	
	self assert:(marsRover hasPosition: 3@0 andFacing:#Norte).!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:15:10'!
FAILURE!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:16:17' prior: 50604449!
receiveCommands: aListOfCommands 
	aListOfCommands ='f' ifTrue:[position :=1@0]
	ifFalse: [aListOfCommands ='ff' ifTrue:[position:=2@0]
		ifFalse:[ aListOfCommands ='fff' ifTrue: [position:=3@0]]].! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:16:19'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:16:19'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:16:19'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:16:19'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:16:19'!
PASSED!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:17:40' prior: 50604617!
receiveCommands: aListOfCommands 
	aListOfCommands ='f' ifTrue:[position :=1@0]
	ifFalse: [aListOfCommands ='ff' ifTrue:[position:=2@0]
		ifFalse:[ aListOfCommands ='fff' ifTrue: [position:=3@0]]].
	
	1 to: aListOfCommands do:[
		position:= position + 1@0.
		]! !
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:17:45' prior: 50604648!
receiveCommands: aListOfCommands 
	"aListOfCommands ='f' ifTrue:[position :=1@0]
	ifFalse: [aListOfCommands ='ff' ifTrue:[position:=2@0]
		ifFalse:[ aListOfCommands ='fff' ifTrue: [position:=3@0]]]."
	
	1 to: aListOfCommands do:[
		position:= position + 1@0.
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:17:45'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:17:45'!
ERROR!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:17:46'!
ERROR!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:17:46'!
ERROR!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:17:46'!
ERROR!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:17:50'!
ERROR!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:17:57' prior: 50604659!
receiveCommands: aListOfCommands 
	"aListOfCommands ='f' ifTrue:[position :=1@0]
	ifFalse: [aListOfCommands ='ff' ifTrue:[position:=2@0]
		ifFalse:[ aListOfCommands ='fff' ifTrue: [position:=3@0]]]."
	
	1 to: aListOfCommands size do:[
		position:= position + 1@0.
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:17:58'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:17:58'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:17:58'!
ERROR!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:17:58'!
ERROR!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:17:58'!
ERROR!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:18:07' prior: 50604696!
receiveCommands: aListOfCommands 
	"aListOfCommands ='f' ifTrue:[position :=1@0]
	ifFalse: [aListOfCommands ='ff' ifTrue:[position:=2@0]
		ifFalse:[ aListOfCommands ='fff' ifTrue: [position:=3@0]]]."
	
01 to: aListOfCommands size do:[
		position:= position + 1@0.
		]! !
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:18:10' prior: 50604729!
receiveCommands: aListOfCommands 
	"aListOfCommands ='f' ifTrue:[position :=1@0]
	ifFalse: [aListOfCommands ='ff' ifTrue:[position:=2@0]
		ifFalse:[ aListOfCommands ='fff' ifTrue: [position:=3@0]]]."
	
	0 to: aListOfCommands size do:[
		position:= position + 1@0.
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:18:11'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:18:11'!
ERROR!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:18:11'!
ERROR!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:18:11'!
ERROR!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:18:11'!
ERROR!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:18:16' prior: 50604741!
receiveCommands: aListOfCommands 
	"aListOfCommands ='f' ifTrue:[position :=1@0]
	ifFalse: [aListOfCommands ='ff' ifTrue:[position:=2@0]
		ifFalse:[ aListOfCommands ='fff' ifTrue: [position:=3@0]]]."
	
	1 to: aListOfCommands size do:[
		position:= position + 1@0.
		]! !

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:18:19'!
ERROR!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:19:26' prior: 50604774!
receiveCommands: aListOfCommands 
	"aListOfCommands ='f' ifTrue:[position :=1@0]
	ifFalse: [aListOfCommands ='ff' ifTrue:[position:=2@0]
		ifFalse:[ aListOfCommands ='fff' ifTrue: [position:=3@0]]]."
	
	1 to: (aListOfCommands size) do:[
		position:= position + 1@0.
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:19:27'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:19:27'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:19:27'!
ERROR!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:19:27'!
ERROR!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:19:27'!
ERROR!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:20:44' prior: 50604790!
receiveCommands: aListOfCommands 
	"aListOfCommands ='f' ifTrue:[position :=1@0]
	ifFalse: [aListOfCommands ='ff' ifTrue:[position:=2@0]
		ifFalse:[ aListOfCommands ='fff' ifTrue: [position:=3@0]]]."
	
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + 1@0.
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:20:45'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:20:45'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:20:45'!
ERROR!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:20:45'!
ERROR!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:20:45'!
ERROR!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:20:48'!
ERROR!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:21:21' prior: 50604823!
receiveCommands: aListOfCommands 
	"aListOfCommands ='f' ifTrue:[position :=1@0]
	ifFalse: [aListOfCommands ='ff' ifTrue:[position:=2@0]
		ifFalse:[ aListOfCommands ='fff' ifTrue: [position:=3@0]]]."
	
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:21:27'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:21:27'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:21:27'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:21:27'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:21:27'!
PASSED!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:21:32' prior: 50604861!
receiveCommands: aListOfCommands 
	
	
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:21:34'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:21:34'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:21:34'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:21:34'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:21:34'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:23:29'!
test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'fff'.
	
	self assert:(marsRover hasPosition: 3@0 andFacing:#Norte).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:23:41' prior: 50604923!
test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'b'.
	
	self assert:(marsRover hasPosition: -1@0 andFacing:#Norte).! !

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:23:42'!
FAILURE!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:23:53' prior: 50604895!
receiveCommands: aListOfCommands 
	
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]! !
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:24:57' prior: 50604949!
receiveCommands: aListOfCommands 
	
	(aListOfCommands at: 1 = 'f') ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]]! !
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:25:37' prior: 50604956!
receiveCommands: aListOfCommands 
	
	(aListOfCommands at: 1 = 'f') ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	(aListOfCommands at:1 = 'b')ifTrue: [
		position :=-1
		]! !
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:25:45' prior: 50604964!
receiveCommands: aListOfCommands 
	
	(aListOfCommands at: 1 = 'f') ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	(aListOfCommands at:1 = 'b')ifTrue: [
		position := -1@0
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:25:46'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:25:46'!
ERROR!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:25:46'!
ERROR!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:25:46'!
ERROR!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:25:46'!
ERROR!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:25:46'!
ERROR!

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:25:53'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:25:53'!
ERROR!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:25:54'!
ERROR!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:25:54'!
ERROR!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:25:54'!
ERROR!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:25:54'!
ERROR!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:25:56'!
ERROR!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:26:26' prior: 50604974!
receiveCommands: aListOfCommands 
	
	((aListOfCommands at: 1) = 'f') ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	((aListOfCommands at:1) = 'b')ifTrue: [
		position := -1@0
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:26:27'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:26:27'!
ERROR!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:26:27'!
FAILURE!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:26:27'!
FAILURE!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:26:27'!
FAILURE!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:26:27'!
FAILURE!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:26:30'!
ERROR!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:26:46' prior: 50605040!
receiveCommands: aListOfCommands 
	
	((aListOfCommands at:0) = 'f') ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	((aListOfCommands at:0) = 'b')ifTrue: [
		position := -1@0
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:26:47'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:26:47'!
ERROR!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:26:47'!
ERROR!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:26:47'!
ERROR!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:26:47'!
ERROR!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:26:47'!
ERROR!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:26:50'!
ERROR!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:27:25' prior: 50605080!
receiveCommands: aListOfCommands 
	
	((aListOfCommands at:1) = 'f') ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	((aListOfCommands at:1) = 'b')ifTrue: [
		position := -1@0
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:27:26'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:27:26'!
ERROR!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:27:26'!
FAILURE!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:27:26'!
FAILURE!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:27:26'!
FAILURE!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:27:26'!
FAILURE!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:27:29'!
ERROR!

'hola' at:1!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:28:10'!
FAILURE!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:29:31' prior: 50605120!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = 'f') ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	((aListOfCommands at:1) = 'b')ifTrue: [
		position := -1@0
		]]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:29:34'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:29:34'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:29:34'!
FAILURE!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:29:34'!
FAILURE!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:29:34'!
FAILURE!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:29:34'!
FAILURE!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:29:37'!
FAILURE!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:29:55' prior: 50605165!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	((aListOfCommands at:1) = $f)ifTrue: [
		position := -1@0
		]]! !
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:29:57' prior: 50605207!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	((aListOfCommands at:1) = $b)ifTrue: [
		position := -1@0
		]]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:29:58'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:29:58'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:29:58'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:29:58'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:29:58'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:29:58'!
PASSED!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:31:16' prior: 50605218!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	(aListOfCommands = 'b')ifTrue: [
		position := -1@0
		]]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:31:18'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:31:18'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:31:18'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:31:18'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:31:18'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:31:18'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:31:38'!
test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'b'.
	
	self assert:(marsRover hasPosition: -1@0 andFacing:#Norte).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:32:17' prior: 50605292!
test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bb'.
	
	self assert:(marsRover hasPosition: -2@0 andFacing:#Norte).! !

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:32:17'!
FAILURE!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:33:10' prior: 50605255!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	(aListOfCommands = 'b')ifTrue: [
		position := -1@0
		] ifFalse:[aListOfCommands ='bb' ifTrue:[position := -2@0]]]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:33:11'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:33:11'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:33:11'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:33:11'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:33:11'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:33:11'!
PASSED!

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:33:11'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:33:42'!
test07AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bb'.
	
	self assert:(marsRover hasPosition: -2@0 andFacing:#Norte).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:33:59' prior: 50605363!
test07AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bbbbbbbbbbb'.
	
	self assert:(marsRover hasPosition: -11@0 andFacing:#Norte).! !

!testRun: #MarsRoverTest #test07AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:34:00'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:34:15'!
test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bbbbbbbbbbb'.
	
	self assert:(marsRover hasPosition: -11@0 andFacing:#Norte).! !

!methodRemoval: MarsRoverTest #test07AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:34:15'!
test07AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bbbbbbbbbbb'.
	
	self assert:(marsRover hasPosition: -11@0 andFacing:#Norte).!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:35:50' prior: 50605319!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	(aListOfCommands = 'b')ifTrue: [
		position := -1@0
		] ifFalse:[aListOfCommands ='bb' 
			ifTrue:[position := -2@0]
			ifFalse:[(aListOfCommands = 'bbbbbbbbbbb') ifTrue:[position:=-11@0]]]]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:35:55'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:35:55'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:35:55'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:35:55'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:35:55'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:35:55'!
PASSED!

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:35:55'!
PASSED!

!testRun: #MarsRoverTest #test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:35:55'!
PASSED!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:36:29' prior: 50605416!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	(aListOfCommands = $b)ifTrue: [
		1 to: (aListOfCommands size) do:[:iter |
		position:= position - (1@0).
		]].
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:36:30'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:36:30'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:36:30'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:36:30'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:36:30'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:36:30'!
FAILURE!

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:36:30'!
FAILURE!

!testRun: #MarsRoverTest #test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:36:30'!
FAILURE!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:36:43' prior: 50605467!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	(aListOfCommands = $b) ifTrue: [
		1 to: (aListOfCommands size) do:[:iter |
		position:= position - (1@0).
		]].
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:36:58'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:36:58'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:36:58'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:36:58'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:36:58'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:36:58'!
FAILURE!

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:36:58'!
FAILURE!

!testRun: #MarsRoverTest #test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:36:58'!
FAILURE!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:37:00'!
FAILURE!

marsRover hasPosition: -1@0 andFacing:#Norte!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:38:05' prior: 50605516!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	(aListOfCommands at:1= $b) ifTrue: [
		1 to: (aListOfCommands size) do:[:iter |
		position:= position - (1@0).
		]].
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:38:06'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:38:06'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:38:06'!
ERROR!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:38:06'!
ERROR!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:38:06'!
ERROR!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:38:06'!
ERROR!

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:38:06'!
ERROR!

!testRun: #MarsRoverTest #test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:38:06'!
ERROR!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:38:17' prior: 50605571!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	((aListOfCommands at:1)= $b) ifTrue: [
		1 to: (aListOfCommands size) do:[:iter |
		position:= position - (1@0).
		]].
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:38:20'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:38:20'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:38:20'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:38:20'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:38:20'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:38:20'!
PASSED!

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:38:20'!
PASSED!

!testRun: #MarsRoverTest #test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:38:20'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:40:06'!
test09AlLlegarleUnComandrCambiaSuDireccionUnaVezALaDerecha
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bbbbbbbbbbb'.
	
	self assert:(marsRover hasPosition: -11@0 andFacing:#Norte).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:40:22' prior: 50605668!
test09AlLlegarleUnComandrCambiaSuDireccionUnaVezALaDerecha
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'r'.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Oeste).! !

!testRun: #MarsRoverTest #test09AlLlegarleUnComandrCambiaSuDireccionUnaVezALaDerecha stamp: 'Lp 5/12/2023 13:40:23'!
FAILURE!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:41:48' prior: 50605619!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	((aListOfCommands at:1)= $b) ifTrue: [
		1 to: (aListOfCommands size) do:[:iter |
		position:= position - (1@0).
		]].
	((aListOfCommands = 'r')ifTrue: [direction:=#Oeste])
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:41:52'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:41:52'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:41:52'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:41:52'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:41:52'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:41:52'!
PASSED!

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:41:52'!
PASSED!

!testRun: #MarsRoverTest #test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:41:52'!
PASSED!

!testRun: #MarsRoverTest #test09AlLlegarleUnComandrCambiaSuDireccionUnaVezALaDerecha stamp: 'Lp 5/12/2023 13:41:52'!
FAILURE!

!testRun: #MarsRoverTest #test09AlLlegarleUnComandrCambiaSuDireccionUnaVezALaDerecha stamp: 'Lp 5/12/2023 13:41:52'!
FAILURE!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:42:01' prior: 50605693!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	((aListOfCommands at:1)= $b) ifTrue: [
		1 to: (aListOfCommands size) do:[:iter |
		position:= position - (1@0).
		]].
	((aListOfCommands = 'r') ifTrue: [direction:=#Oeste])
		]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:42:02'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:42:02'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:42:02'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:42:02'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:42:02'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:42:02'!
PASSED!

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:42:02'!
PASSED!

!testRun: #MarsRoverTest #test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:42:02'!
PASSED!

!testRun: #MarsRoverTest #test09AlLlegarleUnComandrCambiaSuDireccionUnaVezALaDerecha stamp: 'Lp 5/12/2023 13:42:02'!
FAILURE!

!testRun: #MarsRoverTest #test09AlLlegarleUnComandrCambiaSuDireccionUnaVezALaDerecha stamp: 'Lp 5/12/2023 13:42:02'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 13:42:29' prior: 50604506!
hasPosition: aPosition andFacing: aDirection 
	aPosition = position ifTrue:[ aDirection = #Norte ifTrue:[^true]] 
	
	^false! !
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 13:43:51' prior: 50605809!
hasPosition: aPosition andFacing: aDirection 
	(aPosition = position and: aDirection = direction) ifTrue: [^true]. 
	
	^false! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:43:53'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:43:53'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:43:53'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:43:53'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:43:53'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:43:53'!
PASSED!

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:43:53'!
PASSED!

!testRun: #MarsRoverTest #test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:43:53'!
PASSED!

!testRun: #MarsRoverTest #test09AlLlegarleUnComandrCambiaSuDireccionUnaVezALaDerecha stamp: 'Lp 5/12/2023 13:43:53'!
PASSED!
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/12/2023 13:43:56' prior: 50605816!
hasPosition: aPosition andFacing: aDirection 
	(aPosition = position and: aDirection = direction) ifTrue: [^true]. 
	^false! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:43:58'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:43:58'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:43:58'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:43:58'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:43:58'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:43:58'!
PASSED!

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:43:58'!
PASSED!

!testRun: #MarsRoverTest #test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:43:58'!
PASSED!

!testRun: #MarsRoverTest #test09AlLlegarleUnComandrCambiaSuDireccionUnaVezALaDerecha stamp: 'Lp 5/12/2023 13:43:58'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:44:52'!
test09AlLlegarleUnComandRCambiaSuDireccionUnaVezALaDerecha
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'r'.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Oeste).! !

!methodRemoval: MarsRoverTest #test09AlLlegarleUnComandrCambiaSuDireccionUnaVezALaDerecha stamp: 'Lp 5/12/2023 13:44:53'!
test09AlLlegarleUnComandrCambiaSuDireccionUnaVezALaDerecha
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'r'.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Oeste).!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:45:14'!
test09AlLlegarleDosComandosRCambiaSuDireccionDosVecesALaDerecha
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'r'.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Oeste).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:45:22'!
test10AlLlegarleDosComandosRCambiaSuDireccionDosVecesALaDerecha
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'r'.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Oeste).! !

!methodRemoval: MarsRoverTest #test09AlLlegarleDosComandosRCambiaSuDireccionDosVecesALaDerecha stamp: 'Lp 5/12/2023 13:45:23'!
test09AlLlegarleDosComandosRCambiaSuDireccionDosVecesALaDerecha
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'r'.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Oeste).!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:45:26' prior: 50605941!
test10AlLlegarleDosComandosRCambiaSuDireccionDosVecesALaDerecha
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'rr'.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Oeste).! !

!testRun: #MarsRoverTest #test10AlLlegarleDosComandosRCambiaSuDireccionDosVecesALaDerecha stamp: 'Lp 5/12/2023 13:45:27'!
FAILURE!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 13:46:35' prior: 50605751!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	((aListOfCommands at:1)= $b) ifTrue: [
		1 to: (aListOfCommands size) do:[:iter |
		position:= position - (1@0).
		]].
	((aListOfCommands = 'r') ifTrue: [direction:=#Oeste]
		ifFalse:[(aListOfCommands ='rr' ifTrue:[direction :=#Sur] )])
		]! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 13:46:43' prior: 50605963!
test10AlLlegarleDosComandosRCambiaSuDireccionDosVecesALaDerecha
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'rr'.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Sur).! !

!testRun: #MarsRoverTest #test10AlLlegarleDosComandosRCambiaSuDireccionDosVecesALaDerecha stamp: 'Lp 5/12/2023 13:46:45'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 13:46:45'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 13:46:45'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:46:45'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:46:45'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 13:46:45'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:46:45'!
PASSED!

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:46:45'!
PASSED!

!testRun: #MarsRoverTest #test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 13:46:45'!
PASSED!

!testRun: #MarsRoverTest #test09AlLlegarleUnComandRCambiaSuDireccionUnaVezALaDerecha stamp: 'Lp 5/12/2023 13:46:45'!
PASSED!

!testRun: #MarsRoverTest #test10AlLlegarleDosComandosRCambiaSuDireccionDosVecesALaDerecha stamp: 'Lp 5/12/2023 13:46:45'!
PASSED!

----SNAPSHOT----(12 May 2023 14:19:20) CuisUniversity-5706.image priorSource: 8713034!

!testRun: #MarsRoverTest #test10AlLlegarleDosComandosRCambiaSuDireccionDosVecesALaDerecha stamp: 'Lp 5/12/2023 14:53:20'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 14:53:20'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 14:53:20'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 14:53:20'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 14:53:20'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 14:53:20'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 14:53:20'!
PASSED!

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 14:53:20'!
PASSED!

!testRun: #MarsRoverTest #test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 14:53:20'!
PASSED!

!testRun: #MarsRoverTest #test09AlLlegarleUnComandRCambiaSuDireccionUnaVezALaDerecha stamp: 'Lp 5/12/2023 14:53:20'!
PASSED!

!testRun: #MarsRoverTest #test10AlLlegarleDosComandosRCambiaSuDireccionDosVecesALaDerecha stamp: 'Lp 5/12/2023 14:53:20'!
PASSED!

!methodRemoval: MarsRoverTest #test09AlLlegarleUnComandRCambiaSuDireccionUnaVezALaDerecha stamp: 'Lp 5/12/2023 15:15:36'!
test09AlLlegarleUnComandRCambiaSuDireccionUnaVezALaDerecha
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'r'.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Oeste).!

!methodRemoval: MarsRoverTest #test10AlLlegarleDosComandosRCambiaSuDireccionDosVecesALaDerecha stamp: 'Lp 5/12/2023 15:15:38'!
test10AlLlegarleDosComandosRCambiaSuDireccionDosVecesALaDerecha
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'rr'.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Sur).!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 15:15:57' prior: 50605978!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		position:= position + (1@0).
		]].
	((aListOfCommands at:1)= $b) ifTrue: [
		1 to: (aListOfCommands size) do:[:iter |
		position:= position - (1@0).
		]]
]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 15:15:57'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 15:15:57'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:15:57'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:15:57'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:15:57'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:15:57'!
PASSED!

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:15:57'!
PASSED!

!testRun: #MarsRoverTest #test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:15:58'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:16:21'!
test08SabeAvanzaAlNorte
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bbbbbbbbbbb'.
	
	self assert:(marsRover hasPosition: -11@0 andFacing:#Norte).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:16:30' prior: 50606175!
test08SabeAvanzaAlNorte
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: -11@0 andFacing:#Norte).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:16:34' prior: 50606185!
test08SabeAvanzaAlNorte
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 5@0 andFacing:#Norte).! !

!testRun: #MarsRoverTest #test08SabeAvanzaAlNorte stamp: 'Lp 5/12/2023 15:16:36'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 15:16:36'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 15:16:36'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:16:36'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:16:36'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:16:36'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:16:36'!
PASSED!

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:16:36'!
PASSED!

!testRun: #MarsRoverTest #test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:16:36'!
PASSED!

!testRun: #MarsRoverTest #test08SabeAvanzaAlNorte stamp: 'Lp 5/12/2023 15:16:36'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:16:47'!
test09SabeAvanzaAlEste
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 5@0 andFacing:#Norte).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:16:50' prior: 50606246!
test09SabeAvanzaAlEste
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 5@0 andFacing:#Este).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:17:01' prior: 50606256!
test09SabeAvanzaAlEste
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 0@5 andFacing:#Este).! !

!testRun: #MarsRoverTest #test09SabeAvanzaAlEste stamp: 'Lp 5/12/2023 15:17:03'!
FAILURE!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 15:19:19' prior: 50606126!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		direction = #Norte ifTrue: [
			position:= position + (1@0).
		] ifFalse: [position:= position +(0@1)]
	]].
	((aListOfCommands at:1)= $b) ifTrue: [
		1 to: (aListOfCommands size) do:[:iter |
		position:= position - (1@0).
		]]
]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 15:19:22'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 15:19:22'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:19:22'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:19:22'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:19:22'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:19:22'!
PASSED!

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:19:22'!
PASSED!

!testRun: #MarsRoverTest #test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:19:22'!
PASSED!

!testRun: #MarsRoverTest #test08SabeAvanzaAlNorte stamp: 'Lp 5/12/2023 15:19:22'!
PASSED!

!testRun: #MarsRoverTest #test09SabeAvanzaAlEste stamp: 'Lp 5/12/2023 15:19:22'!
FAILURE!

!testRun: #MarsRoverTest #test09SabeAvanzaAlEste stamp: 'Lp 5/12/2023 15:19:22'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:19:39' prior: 50606266!
test09SabeAvanzaAlEste
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Este.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 0@5 andFacing:#Este).! !

!testRun: #MarsRoverTest #test09SabeAvanzaAlEste stamp: 'Lp 5/12/2023 15:19:40'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 15:19:42'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 15:19:42'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:19:42'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:19:42'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:19:42'!
PASSED!

!testRun: #MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:19:42'!
PASSED!

!testRun: #MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:19:42'!
PASSED!

!testRun: #MarsRoverTest #test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:19:42'!
PASSED!

!testRun: #MarsRoverTest #test08SabeAvanzaAlNorte stamp: 'Lp 5/12/2023 15:19:42'!
PASSED!

!testRun: #MarsRoverTest #test09SabeAvanzaAlEste stamp: 'Lp 5/12/2023 15:19:42'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:20:02'!
test06SabeAvanzaAlNorte
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 5@0 andFacing:#Norte).! !

!methodRemoval: MarsRoverTest #test08SabeAvanzaAlNorte stamp: 'Lp 5/12/2023 15:20:03'!
test08SabeAvanzaAlNorte
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 5@0 andFacing:#Norte).!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:20:08'!
test07SabeAvanzaAlEste
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Este.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 0@5 andFacing:#Este).! !

!methodRemoval: MarsRoverTest #test09SabeAvanzaAlEste stamp: 'Lp 5/12/2023 15:20:09'!
test09SabeAvanzaAlEste
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Este.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 0@5 andFacing:#Este).!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:20:30'!
test08AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'b'.
	
	self assert:(marsRover hasPosition: -1@0 andFacing:#Norte).! !

!methodRemoval: MarsRoverTest #test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:20:30'!
test06AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'b'.
	
	self assert:(marsRover hasPosition: -1@0 andFacing:#Norte).!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:20:38'!
test09AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bb'.
	
	self assert:(marsRover hasPosition: -2@0 andFacing:#Norte).! !

!methodRemoval: MarsRoverTest #test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:20:38'!
test07AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bb'.
	
	self assert:(marsRover hasPosition: -2@0 andFacing:#Norte).!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:20:51'!
test10AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bbbbbbbbbbb'.
	
	self assert:(marsRover hasPosition: -11@0 andFacing:#Norte).! !

!methodRemoval: MarsRoverTest #test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:20:51'!
test08AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bbbbbbbbbbb'.
	
	self assert:(marsRover hasPosition: -11@0 andFacing:#Norte).!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:21:03'!
test07SabeAvanzaAlSur
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Este.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 0@5 andFacing:#Este).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:21:15'!
test08SabeAvanzaAlSur
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Este.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 0@5 andFacing:#Este).! !

!methodRemoval: MarsRoverTest #test07SabeAvanzaAlSur stamp: 'Lp 5/12/2023 15:21:15'!
test07SabeAvanzaAlSur
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Este.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 0@5 andFacing:#Este).!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:21:24'!
test10AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'b'.
	
	self assert:(marsRover hasPosition: -1@0 andFacing:#Norte).! !

!methodRemoval: MarsRoverTest #test08AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:21:24'!
test08AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'b'.
	
	self assert:(marsRover hasPosition: -1@0 andFacing:#Norte).!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:21:30'!
test1AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bb'.
	
	self assert:(marsRover hasPosition: -2@0 andFacing:#Norte).! !

!methodRemoval: MarsRoverTest #test09AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:21:30'!
test09AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bb'.
	
	self assert:(marsRover hasPosition: -2@0 andFacing:#Norte).!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:21:37'!
test11AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bb'.
	
	self assert:(marsRover hasPosition: -2@0 andFacing:#Norte).! !

!methodRemoval: MarsRoverTest #test1AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:21:37'!
test1AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bb'.
	
	self assert:(marsRover hasPosition: -2@0 andFacing:#Norte).!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:21:45'!
test12AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bbbbbbbbbbb'.
	
	self assert:(marsRover hasPosition: -11@0 andFacing:#Norte).! !

!methodRemoval: MarsRoverTest #test10AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:21:45'!
test10AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bbbbbbbbbbb'.
	
	self assert:(marsRover hasPosition: -11@0 andFacing:#Norte).!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:22:10' prior: 50606507!
test08SabeAvanzaAlSur
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #sur.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 0@5 andFacing:#Este).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:22:17' prior: 50606619!
test08SabeAvanzaAlSur
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #sur.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: -5@0 andFacing:#Este).! !

!testRun: #MarsRoverTest #test08SabeAvanzaAlSur stamp: 'Lp 5/12/2023 15:22:19'!
FAILURE!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 15:23:57' prior: 50606278!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		direction = #Norte ifTrue: [
			position:= position + (1@0).
		] ifFalse: [ direction = #Este ifTrue:[position:= position +(0@1)]
			ifFalse: [position := position -(1@0)]
		]
	]].
	((aListOfCommands at:1)= $b) ifTrue: [
		1 to: (aListOfCommands size) do:[:iter |
		position:= position - (1@0).
		]]
]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 15:24:01'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 15:24:01'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:24:01'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:24:01'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:24:01'!
PASSED!

!testRun: #MarsRoverTest #test06SabeAvanzaAlNorte stamp: 'Lp 5/12/2023 15:24:02'!
PASSED!

!testRun: #MarsRoverTest #test07SabeAvanzaAlEste stamp: 'Lp 5/12/2023 15:24:02'!
PASSED!

!testRun: #MarsRoverTest #test08SabeAvanzaAlSur stamp: 'Lp 5/12/2023 15:24:02'!
FAILURE!

!testRun: #MarsRoverTest #test10AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:24:02'!
PASSED!

!testRun: #MarsRoverTest #test11AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:24:02'!
PASSED!

!testRun: #MarsRoverTest #test12AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:24:02'!
PASSED!

!testRun: #MarsRoverTest #test08SabeAvanzaAlSur stamp: 'Lp 5/12/2023 15:24:02'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:24:21' prior: 50606629!
test08SabeAvanzaAlSur
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #sur.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: -5@0 andFacing:#Sur).! !

!testRun: #MarsRoverTest #test08SabeAvanzaAlSur stamp: 'Lp 5/12/2023 15:24:22'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:25:13' prior: 50606706!
test08SabeAvanzaAlSur
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Sur.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: -5@0 andFacing:#Sur).! !

!testRun: #MarsRoverTest #test08SabeAvanzaAlSur stamp: 'Lp 5/12/2023 15:25:13'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 15:25:13'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 15:25:13'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:25:13'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:25:13'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:25:13'!
PASSED!

!testRun: #MarsRoverTest #test06SabeAvanzaAlNorte stamp: 'Lp 5/12/2023 15:25:13'!
PASSED!

!testRun: #MarsRoverTest #test07SabeAvanzaAlEste stamp: 'Lp 5/12/2023 15:25:13'!
PASSED!

!testRun: #MarsRoverTest #test08SabeAvanzaAlSur stamp: 'Lp 5/12/2023 15:25:13'!
PASSED!

!testRun: #MarsRoverTest #test10AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:25:13'!
PASSED!

!testRun: #MarsRoverTest #test11AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:25:13'!
PASSED!

!testRun: #MarsRoverTest #test12AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:25:13'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:25:19'!
test08SabeAvanzaAlOeste
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Sur.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: -5@0 andFacing:#Sur).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:25:28' prior: 50606774!
test08SabeAvanzaAlOeste
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Oeste.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: -5@0 andFacing:#Oeste).! !

!testRun: #MarsRoverTest #test08SabeAvanzaAlOeste stamp: 'Lp 5/12/2023 15:25:29'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 15:25:29'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 15:25:29'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:25:29'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:25:29'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:25:30'!
PASSED!

!testRun: #MarsRoverTest #test06SabeAvanzaAlNorte stamp: 'Lp 5/12/2023 15:25:30'!
PASSED!

!testRun: #MarsRoverTest #test07SabeAvanzaAlEste stamp: 'Lp 5/12/2023 15:25:30'!
PASSED!

!testRun: #MarsRoverTest #test08SabeAvanzaAlOeste stamp: 'Lp 5/12/2023 15:25:30'!
PASSED!

!testRun: #MarsRoverTest #test08SabeAvanzaAlSur stamp: 'Lp 5/12/2023 15:25:30'!
PASSED!

!testRun: #MarsRoverTest #test10AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:25:30'!
PASSED!

!testRun: #MarsRoverTest #test11AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:25:30'!
PASSED!

!testRun: #MarsRoverTest #test12AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:25:30'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:25:38' prior: 50606784!
test08SabeAvanzaAlOeste
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Oeste.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 0@-5 andFacing:#Oeste).! !

!testRun: #MarsRoverTest #test08SabeAvanzaAlOeste stamp: 'Lp 5/12/2023 15:25:42'!
FAILURE!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 15:26:54' prior: 50606641!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		direction = #Norte ifTrue: [
			position:= position + (1@0).
		] ifFalse: [ direction = #Este ifTrue:[position:= position +(0@1)]
			ifFalse: [ direction =#Sur ifTrue:[position := position -(1@0)]
				ifFalse:[position := position -(0@1)]
				]
		]
	]].
	((aListOfCommands at:1)= $b) ifTrue: [
		1 to: (aListOfCommands size) do:[:iter |
		position:= position - (1@0).
		]]
]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 15:26:55'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 15:26:55'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:26:55'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:26:56'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:26:56'!
PASSED!

!testRun: #MarsRoverTest #test06SabeAvanzaAlNorte stamp: 'Lp 5/12/2023 15:26:56'!
PASSED!

!testRun: #MarsRoverTest #test07SabeAvanzaAlEste stamp: 'Lp 5/12/2023 15:26:56'!
PASSED!

!testRun: #MarsRoverTest #test08SabeAvanzaAlOeste stamp: 'Lp 5/12/2023 15:26:56'!
PASSED!

!testRun: #MarsRoverTest #test08SabeAvanzaAlSur stamp: 'Lp 5/12/2023 15:26:56'!
PASSED!

!testRun: #MarsRoverTest #test10AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:26:56'!
PASSED!

!testRun: #MarsRoverTest #test11AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:26:56'!
PASSED!

!testRun: #MarsRoverTest #test12AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:26:56'!
PASSED!
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 15:27:29'!
executeFoward

	^ direction = #Norte ifTrue: [
			position:= position + (1@0).
		] ifFalse: [ direction = #Este ifTrue:[position:= position +(0@1)]
			ifFalse: [ direction =#Sur ifTrue:[position := position -(1@0)]
				ifFalse:[position := position -(0@1)]
				]
		]! !
!MarsRover methodsFor: 'Commands' stamp: 'Lp 5/12/2023 15:27:29' prior: 50606856!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		self executeFoward
	]].
	((aListOfCommands at:1)= $b) ifTrue: [
		1 to: (aListOfCommands size) do:[:iter |
		position:= position - (1@0).
		]]
]! !

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 15:27:35'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 15:27:35'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:27:35'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:27:35'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:27:35'!
PASSED!

!testRun: #MarsRoverTest #test06SabeAvanzaAlNorte stamp: 'Lp 5/12/2023 15:27:35'!
PASSED!

!testRun: #MarsRoverTest #test07SabeAvanzaAlEste stamp: 'Lp 5/12/2023 15:27:35'!
PASSED!

!testRun: #MarsRoverTest #test08SabeAvanzaAlOeste stamp: 'Lp 5/12/2023 15:27:35'!
PASSED!

!testRun: #MarsRoverTest #test08SabeAvanzaAlSur stamp: 'Lp 5/12/2023 15:27:35'!
PASSED!

!testRun: #MarsRoverTest #test10AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:27:35'!
PASSED!

!testRun: #MarsRoverTest #test11AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:27:35'!
PASSED!

!testRun: #MarsRoverTest #test12AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:27:35'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:27:49'!
test09SabeAvanzaAlSur
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Sur.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: -5@0 andFacing:#Sur).! !

!methodRemoval: MarsRoverTest #test08SabeAvanzaAlSur stamp: 'Lp 5/12/2023 15:27:50'!
test08SabeAvanzaAlSur
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Sur.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: -5@0 andFacing:#Sur).!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:28:34'!
test12sabeRetrocederDelNorte
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bbbbbbbbbbb'.
	
	self assert:(marsRover hasPosition: -11@0 andFacing:#Norte).! !

!testRun: #MarsRoverTest #test12sabeRetrocederDelNorte stamp: 'Lp 5/12/2023 15:28:40'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 15:28:40'!
PASSED!

!testRun: #MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 15:28:40'!
PASSED!

!testRun: #MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:28:40'!
PASSED!

!testRun: #MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:28:40'!
PASSED!

!testRun: #MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:28:40'!
PASSED!

!testRun: #MarsRoverTest #test06SabeAvanzaAlNorte stamp: 'Lp 5/12/2023 15:28:40'!
PASSED!

!testRun: #MarsRoverTest #test07SabeAvanzaAlEste stamp: 'Lp 5/12/2023 15:28:40'!
PASSED!

!testRun: #MarsRoverTest #test08SabeAvanzaAlOeste stamp: 'Lp 5/12/2023 15:28:40'!
PASSED!

!testRun: #MarsRoverTest #test09SabeAvanzaAlSur stamp: 'Lp 5/12/2023 15:28:40'!
PASSED!

!testRun: #MarsRoverTest #test10AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:28:40'!
PASSED!

!testRun: #MarsRoverTest #test11AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:28:40'!
PASSED!

!testRun: #MarsRoverTest #test12AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:28:40'!
PASSED!

!testRun: #MarsRoverTest #test12sabeRetrocederDelNorte stamp: 'Lp 5/12/2023 15:28:40'!
PASSED!

!methodRemoval: MarsRoverTest #test12sabeRetrocederDelNorte stamp: 'Lp 5/12/2023 15:32:01'!
test12sabeRetrocederDelNorte
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bbbbbbbbbbb'.
	
	self assert:(marsRover hasPosition: -11@0 andFacing:#Norte).!

!methodRemoval: MarsRoverTest #test12AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:32:03'!
test12AlLlegarleVariosComandosBCambiaSuPosicionTantasUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bbbbbbbbbbb'.
	
	self assert:(marsRover hasPosition: -11@0 andFacing:#Norte).!

!methodRemoval: MarsRoverTest #test01AlIniciarTieneUnaPosicionYDireccionCorrecta stamp: 'Lp 5/12/2023 15:32:07'!
test01AlIniciarTieneUnaPosicionYDireccionCorrecta
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Norte).!

!methodRemoval: MarsRoverTest #test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion stamp: 'Lp 5/12/2023 15:32:07'!
test02AlLlegarleElComandoVacioNoProcedeACambiarSuPosicion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: ''.
	
	self assert:(marsRover hasPosition: 0@0 andFacing:#Norte).!

!methodRemoval: MarsRoverTest #test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:32:07'!
test03AlLlegarleUnComandoFCambiaSuPosicionUnaUnidadMasAdelanteSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'f'.
	
	self assert:(marsRover hasPosition: 1@0 andFacing:#Norte).!

!methodRemoval: MarsRoverTest #test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:32:07'!
test04AlLlegarleDosComandosFCambiaSuPosicionDosUnidadesMasAdelanteSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'ff'.
	
	self assert:(marsRover hasPosition: 2@0 andFacing:#Norte).!

!methodRemoval: MarsRoverTest #test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion stamp: 'Lp 5/12/2023 15:32:07'!
test05AlLlegarleVariosComandosFCambiaSuPosicionTantasUnidadesMasAdelanteSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'fff'.
	
	self assert:(marsRover hasPosition: 3@0 andFacing:#Norte).!

!methodRemoval: MarsRoverTest #test06SabeAvanzaAlNorte stamp: 'Lp 5/12/2023 15:32:07'!
test06SabeAvanzaAlNorte
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 5@0 andFacing:#Norte).!

!methodRemoval: MarsRoverTest #test07SabeAvanzaAlEste stamp: 'Lp 5/12/2023 15:32:07'!
test07SabeAvanzaAlEste
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Este.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 0@5 andFacing:#Este).!

!methodRemoval: MarsRoverTest #test08SabeAvanzaAlOeste stamp: 'Lp 5/12/2023 15:32:07'!
test08SabeAvanzaAlOeste
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Oeste.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: 0@-5 andFacing:#Oeste).!

!methodRemoval: MarsRoverTest #test09SabeAvanzaAlSur stamp: 'Lp 5/12/2023 15:32:07'!
test09SabeAvanzaAlSur
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Sur.
	
	marsRover receiveCommands: 'fffff'.
	
	self assert:(marsRover hasPosition: -5@0 andFacing:#Sur).!

!methodRemoval: MarsRoverTest #test10AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:32:07'!
test10AlLlegarleUnComandBCambiaSuPosicionUnaUnidadMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'b'.
	
	self assert:(marsRover hasPosition: -1@0 andFacing:#Norte).!

!methodRemoval: MarsRoverTest #test11AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion stamp: 'Lp 5/12/2023 15:32:07'!
test11AlLlegarleDosComandosBCambiaSuPosicionDosUnidadesMasAAtrasSegunSuDireccion
	
	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing: #Norte.
	
	marsRover receiveCommands: 'bb'.
	
	self assert:(marsRover hasPosition: -2@0 andFacing:#Norte).!

!methodRemoval: MarsRover #executeFoward stamp: 'Lp 5/12/2023 15:32:11'!
executeFoward

	^ direction = #Norte ifTrue: [
			position:= position + (1@0).
		] ifFalse: [ direction = #Este ifTrue:[position:= position +(0@1)]
			ifFalse: [ direction =#Sur ifTrue:[position := position -(1@0)]
				ifFalse:[position := position -(0@1)]
				]
		]!

!methodRemoval: MarsRover #receiveCommands: stamp: 'Lp 5/12/2023 15:32:11'!
receiveCommands: aListOfCommands 
	
	(aListOfCommands size = 0) ifFalse: [
	((aListOfCommands at:1) = $f) ifTrue: [
	1 to: (aListOfCommands size) do:[:iter |
		self executeFoward
	]].
	((aListOfCommands at:1)= $b) ifTrue: [
		1 to: (aListOfCommands size) do:[:iter |
		position:= position - (1@0).
		]]
]!
!MarsRoverTest methodsFor: 'no messages' stamp: 'Lp 5/12/2023 15:34:02'!
test01AlIniciarElRobotSabeDondeEsta

	| marsRover |
	marsRover := MarsRover new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:34:20' prior: 50607237!
test01AlIniciarElRobotSabeDondeEsta

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:34:55' prior: 50607243!
test01AlIniciarElRobotSabeDondeEsta

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Norte )! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:34:55'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:34:55'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:36:09'!
test02SabeRecivirUnComandoFAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Norte )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:36:16' prior: 50607265!
test02SabeRecivirUnComandoFAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Norte )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:36:45' prior: 50607274!
test02SabeRecivirUnComandoFAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Norte )! !

!testRun: #MarsRoverTest #test02SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:36:47'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:36:58'!
test03SabeRecivirUnComandoFAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Norte )! !

!methodRemoval: MarsRoverTest #test02SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:36:58'!
test02SabeRecivirUnComandoFAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Norte )!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:37:27'!
test02SabeRecivirInstruccionVacia

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Norte )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:37:30' prior: 50607316!
test02SabeRecivirInstruccionVacia

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .
	
	marsRover receiveCommand:''.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Norte )! !

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:37:32'!
ERROR!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:37:49'!
receiveCommand: aRenameMe1 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:37:58' prior: 50607338!
receiveCommand: aRenameMe1 
	^ self! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:37:59'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:37:59'!
FAILURE!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:37:59'!
FAILURE!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:38:03'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:38:10' prior: 50607326!
test02SabeRecivirInstruccionVacia

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .
	
	marsRover receiveCommand:''.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Norte )! !

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:38:12'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:38:12'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:38:12'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:38:12'!
FAILURE!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:38:12'!
FAILURE!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:38:18'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:38:20'!
FAILURE!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:38:20'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:38:51' prior: 50607343!
receiveCommand: aRenameMe1 
	^ 1@0! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:38:52'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:38:52'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:38:52'!
FAILURE!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:38:52'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:39:10' prior: 50607397!
receiveCommand: aRenameMe1 
	^ position := 1@0! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:39:10'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:39:10'!
FAILURE!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:39:10'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:39:10'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:39:25' prior: 50607415!
receiveCommand: aRenameMe1 
	 position := 1@0! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:39:26'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:39:26'!
FAILURE!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:39:26'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:39:26'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:40:10' prior: 50607433!
receiveCommand: aListOfCommands
	 
	position := 1@0! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:41:12' prior: 50607451!
receiveCommand: aListOfCommands
	 aListOfCommands isNotEmpty: [position := 1@0]
	! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:41:13'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:41:13'!
ERROR!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:41:13'!
ERROR!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:41:16'!
ERROR!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:42:29' prior: 50607456!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [position := 1@0]
	! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:42:30'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:42:30'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:42:30'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:42:40'!
test03SabeRecivirUnComandoFAvanzandoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Norte )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:42:45' prior: 50607491!
test03SabeRecivirUnComandoFAvanzandoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Norte )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:42:49' prior: 50607501!
test03SabeRecivirUnComandoFAvanzandoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Este )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:42:55' prior: 50607511!
test03SabeRecivirUnComandoFAvanzandoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@1 andFacing:#Este )! !

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 15:42:57'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:44:04' prior: 50607475!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		direction =#Norte ifTrue:[ position := 1@0]
		]
	! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:44:05'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:44:05'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 15:44:05'!
FAILURE!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:44:05'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 15:44:05'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:44:24' prior: 50607534!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		direction =#Norte ifTrue:[ position := 1@0] 
			ifFalse:[position := 0@1]
		]
	! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:44:28'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:44:28'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 15:44:28'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:44:28'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:44:36'!
test03SabeRecivirUnComandoFAvanzandoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Norte )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:44:40' prior: 50607579!
test03SabeRecivirUnComandoFAvanzandoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Norte )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:44:44' prior: 50607589!
test03SabeRecivirUnComandoFAvanzandoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Sur)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:44:53' prior: 50607599!
test03SabeRecivirUnComandoFAvanzandoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:#Sur)! !

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 15:44:55'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:45:05'!
test04SabeRecivirUnComandoFAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Norte )! !

!methodRemoval: MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:45:05'!
test03SabeRecivirUnComandoFAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Norte )!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:45:15'!
test05SabeRecivirUnComandoFAvanzandoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:#Sur)! !

!methodRemoval: MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 15:45:15'!
test03SabeRecivirUnComandoFAvanzandoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:#Sur)!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:46:10' prior: 50607558!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		direction =#Norte ifTrue:[ position := 1@0] 
			ifFalse:[ direction =#Este ifTrue:[
				position := 0@1	]
				ifFalse:[position:=-1@0]
				]
		]
	! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:46:11'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:46:11'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 15:46:11'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:46:11'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 15:46:11'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:46:34'!
test06SabeRecivirUnComandoFAvanzandoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:#Oeste)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:46:42' prior: 50607689!
test06SabeRecivirUnComandoFAvanzandoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Oeste)! !

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:46:43'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:47:57' prior: 50607662!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		direction =#Norte ifTrue:[ position := 1@0] 
			ifFalse:[ direction =#Este ifTrue:[
				position := 0@1	]
				ifFalse:[ direction=#Sur ifTrue:[position:=-1@0]
					ifFalse:[position := 0@-1]]
				]
		]
	! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:47:58'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:47:58'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 15:47:58'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:47:58'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 15:47:58'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:47:58'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:53:20'!
test07SabeRecivirDosComandosFAvanzandoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Oeste)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:53:26' prior: 50607744!
test07SabeRecivirDosComandosFAvanzandoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'ff'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Oeste)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:53:32' prior: 50607754!
test07SabeRecivirDosComandosFAvanzandoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'ff'.
	
	self assert: ( marsRover hasPosition: 0@-2 andFacing:#Oeste)! !

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:53:33'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:55:02' prior: 50607712!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		direction =#Norte ifTrue:[ position := 1@0] 
			ifFalse:[ direction =#Este ifTrue:[
				position := 0@1	]
				ifFalse:[ direction=#Sur ifTrue:[position:=-1@0]
					ifFalse:[ aListOfCommands size = 1 ifTrue:[position := 0@-1].
						position:=2@0]]
				]
		]
	! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:55:03'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:55:03'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 15:55:03'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:55:03'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 15:55:04'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:55:04'!
FAILURE!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:55:04'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:55:43' prior: 50607779!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		direction =#Norte ifTrue:[ position := 1@0] 
			ifFalse:[ direction =#Este ifTrue:[
				position := 0@1	]
				ifFalse:[ direction=#Sur ifTrue:[position:=-1@0]
					ifFalse:[ aListOfCommands size = 1 ifTrue:[position := 0@-1]
						ifFalse:[position:=2@0]].
				]
		]
]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:55:44'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:55:44'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 15:55:44'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:55:44'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 15:55:44'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:55:44'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:55:44'!
FAILURE!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:55:44'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:55:49' prior: 50607816!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		direction =#Norte ifTrue:[ position := 1@0] 
			ifFalse:[ direction =#Este ifTrue:[
				position := 0@1	]
				ifFalse:[ direction=#Sur ifTrue:[position:=-1@0]
					ifFalse:[ aListOfCommands size = 1 ifTrue:[position := 0@-1]
						ifFalse:[position:=2@0]]
				]
		]
]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:55:50'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:55:50'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 15:55:50'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:55:50'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 15:55:50'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:55:50'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:55:50'!
FAILURE!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:55:50'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:55:59' prior: 50607857!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		direction =#Norte ifTrue:[ position := 1@0] 
			ifFalse:[ direction =#Este ifTrue:[
				position := 0@1	]
				ifFalse:[ direction=#Sur ifTrue:[position:=-1@0]
					ifFalse:[ aListOfCommands size = 1 ifTrue:[position := 0@-1]
						ifFalse:[position:=0@-2]]
				]
		]
]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:56:00'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:56:00'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 15:56:00'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:56:00'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 15:56:00'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:56:00'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:56:00'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 15:56:34'!
test07SabeRecivirDosComandosFAvanzandoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este.
	
	marsRover receiveCommand:'ff'.
	
	self assert: ( marsRover hasPosition: 0@2 andFacing:#Oeste)! !

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosFAvanzandoAlEste stamp: 'Lp 5/12/2023 15:56:34'!
FAILURE!

!methodRemoval: MarsRoverTest #test07SabeRecivirDosComandosFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:57:19'!
test07SabeRecivirDosComandosFAvanzandoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'ff'.
	
	self assert: ( marsRover hasPosition: 0@-2 andFacing:#Oeste)!

!methodRemoval: MarsRoverTest #test07SabeRecivirDosComandosFAvanzandoAlEste stamp: 'Lp 5/12/2023 15:57:20'!
test07SabeRecivirDosComandosFAvanzandoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este.
	
	marsRover receiveCommand:'ff'.
	
	self assert: ( marsRover hasPosition: 0@2 andFacing:#Oeste)!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:57:45' prior: 50607898!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		direction =#Norte ifTrue:[ position := 1@0] 
			ifFalse:[ direction =#Este ifTrue:[
				position := 0@1	]
				ifFalse:[ direction=#Sur ifTrue:[position:=-1@0]
					ifFalse:[ position := 0@-1]
				]
		]
]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:57:45'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:57:45'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 15:57:45'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:57:45'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 15:57:45'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:57:45'!
PASSED!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:58:43' prior: 50607969!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		direction =#Norte ifTrue:[ position := 1@0] 
			ifFalse:[ direction =#Este ifTrue:[
				position := 0@1	]
				ifFalse:[ direction=#Sur ifTrue:[position:=-1@0]
					ifFalse:[ position := 0@-1]]
				]
		]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:58:44'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:58:44'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 15:58:44'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:58:44'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 15:58:44'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:58:44'!
PASSED!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:59:00'!
executeFoward

	^ direction =#Norte ifTrue:[ position := 1@0] 
			ifFalse:[ direction =#Este ifTrue:[
				position := 0@1	]
				ifFalse:[ direction=#Sur ifTrue:[position:=-1@0]
					ifFalse:[ position := 0@-1]]
				]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:59:00' prior: 50608001!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		self executeFoward
		]
! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:59:31' prior: 50608032!
executeFoward

	^ direction =#Norte ifTrue:[ position := position + 1@0] 
			ifFalse:[ direction =#Este ifTrue:[
				position := 0@1	]
				ifFalse:[ direction=#Sur ifTrue:[position:=-1@0]
					ifFalse:[ position := 0@-1]]
				]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:59:32'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:59:32'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 15:59:32'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:59:32'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 15:59:32'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:59:32'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:59:33'!
ERROR!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 15:59:55' prior: 50608048!
executeFoward

	^ direction =#Norte ifTrue:[ position := position + (1@0)] 
			ifFalse:[ direction =#Este ifTrue:[
				position := (0@1)	]
				ifFalse:[ direction=#Sur ifTrue:[position:=(-1@0)]
					ifFalse:[ position := (0@-1)]]
				]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 15:59:56'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 15:59:56'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 15:59:56'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 15:59:56'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 15:59:56'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 15:59:56'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:00:14'!
test06SabeRecivirDosComandosFAvanzandoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Oeste)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:00:20' prior: 50608113!
test06SabeRecivirDosComandosFAvanzandoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'ff'.
	
	self assert: ( marsRover hasPosition: 0@-2 andFacing:#Oeste)! !

!testRun: #MarsRoverTest #test06SabeRecivirDosComandosFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:00:21'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:01:40' prior: 50608042!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		self executeFoward.
		aListOfCommands size = 2 ifTrue:[
			self executeFoward .
			]
		]
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:01:48'!
test06SabeRecivirUnComandoF

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Oeste)! !

!methodRemoval: MarsRoverTest #test06SabeRecivirDosComandosFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:01:57'!
test06SabeRecivirDosComandosFAvanzandoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'ff'.
	
	self assert: ( marsRover hasPosition: 0@-2 andFacing:#Oeste)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:02:04'!
test07SabeRecivirUnComandoF

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Oeste)! !

!methodRemoval: MarsRoverTest #test06SabeRecivirUnComandoF stamp: 'Lp 5/12/2023 16:02:04'!
test06SabeRecivirUnComandoF

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Oeste)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:02:19'!
test07SabeRecivirDosComandoF

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Oeste)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:02:24' prior: 50608184!
test07SabeRecivirDosComandoF

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'ff'.
	
	self assert: ( marsRover hasPosition: 0@-2 andFacing:#Oeste)! !

!testRun: #MarsRoverTest #test07SabeRecivirDosComandoF stamp: 'Lp 5/12/2023 16:02:25'!
FAILURE!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandoF stamp: 'Lp 5/12/2023 16:02:29'!
FAILURE!

!methodRemoval: MarsRoverTest #test07SabeRecivirUnComandoF stamp: 'Lp 5/12/2023 16:02:58'!
test07SabeRecivirUnComandoF

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Oeste)!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:03:16' prior: 50608137!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		self executeFoward.
		aListOfCommands size = 2 ifTrue:[
			self executeFoward.
			]
		]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:03:17'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:03:17'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:03:17'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:03:17'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:03:17'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:03:17'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandoF stamp: 'Lp 5/12/2023 16:03:17'!
FAILURE!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandoF stamp: 'Lp 5/12/2023 16:03:17'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:03:55' prior: 50608082!
executeFoward

	^ direction =#Norte ifTrue:[ position := position + (1@0)] 
			ifFalse:[ direction =#Este ifTrue:[
				position := position + (0@1)	]
				ifFalse:[ direction=#Sur ifTrue:[position:=position + (-1@0)]
					ifFalse:[ position := position +(0@-1)]]
				]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:03:58'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:03:58'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:03:58'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:03:58'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:03:58'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:03:58'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandoF stamp: 'Lp 5/12/2023 16:03:58'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:04:10'!
test07SabeRecivirDosComandosF

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'ff'.
	
	self assert: ( marsRover hasPosition: 0@-2 andFacing:#Oeste)! !

!methodRemoval: MarsRoverTest #test07SabeRecivirDosComandoF stamp: 'Lp 5/12/2023 16:04:10'!
test07SabeRecivirDosComandoF

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'ff'.
	
	self assert: ( marsRover hasPosition: 0@-2 andFacing:#Oeste)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:04:19'!
test08SabeRecivirVariosComandosF

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'ff'.
	
	self assert: ( marsRover hasPosition: 0@-2 andFacing:#Oeste)! !

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:04:20'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:04:20'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:04:20'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:04:20'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:04:20'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:04:20'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:04:20'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:04:20'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:04:20'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:04:35' prior: 50608307!
test08SabeRecivirVariosComandosF

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'fffff'.
	
	self assert: ( marsRover hasPosition: 0@-5 andFacing:#Oeste)! !

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:04:36'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:05:37' prior: 50608219!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		1 to: aListOfCommands size do:[:iter| 
			self executeFoward ]
		]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:05:37'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:05:37'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:05:37'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:05:37'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:05:37'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:05:38'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:05:38'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:05:38'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:09:05'!
test09SabeRecivirUnComandoBAvanzandoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Este )! !

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBAvanzandoAlEste stamp: 'Lp 5/12/2023 16:09:07'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:10:01' prior: 50608360!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		(aListOfCommands at:1 =$a) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		
		]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:10:02'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:10:02'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:10:02'!
ERROR!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:10:02'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:10:02'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:10:03'!
ERROR!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:10:03'!
ERROR!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:10:03'!
ERROR!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBAvanzandoAlEste stamp: 'Lp 5/12/2023 16:10:03'!
ERROR!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:10:08' prior: 50608407!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		(aListOfCommands at:1 =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		
		]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:10:09'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:10:09'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:10:09'!
ERROR!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:10:09'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:10:10'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:10:10'!
ERROR!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:10:10'!
ERROR!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:10:10'!
ERROR!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBAvanzandoAlEste stamp: 'Lp 5/12/2023 16:10:10'!
ERROR!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:11:11' prior: 50608445!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		(aListOfCommands at:1 =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[position :=  0@-1]
		 
		]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:11:12'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:11:12'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:11:12'!
ERROR!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:11:12'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:11:12'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:11:12'!
ERROR!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:11:12'!
ERROR!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:11:12'!
ERROR!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBAvanzandoAlEste stamp: 'Lp 5/12/2023 16:11:12'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:12:42'!
ERROR!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:13:02' prior: 50608483!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[position :=  0@-1]
		 
		]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:13:03'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:13:03'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:13:03'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:13:03'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:13:03'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:13:03'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:13:03'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:13:03'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBAvanzandoAlEste stamp: 'Lp 5/12/2023 16:13:03'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:13:23'!
test09SabeRecivirUnComandoBRetrocediendoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Este )! !

!methodRemoval: MarsRoverTest #test09SabeRecivirUnComandoBAvanzandoAlEste stamp: 'Lp 5/12/2023 16:13:23'!
test09SabeRecivirUnComandoBAvanzandoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Este )!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:13:32'!
test10SabeRecivirUnComandoBRetrocediendoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Este )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:13:38' prior: 50608586!
test10SabeRecivirUnComandoBRetrocediendoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 0@1 andFacing:#Este )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:13:44' prior: 50608597!
test10SabeRecivirUnComandoBRetrocediendoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 0@1 andFacing:#Oeste )! !

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:13:45'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:14:26' prior: 50608526!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[position :=  0@-1]
		 
		]

" direction =#Norte ifTrue:[ position := position + (1@0)] 
			ifFalse:[ direction =#Este ifTrue:[
				position := position + (0@1)	]
				ifFalse:[ direction=#Sur ifTrue:[position:=position + (-1@0)]
					ifFalse:[ position := position +(0@-1)]]"! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:14:54' prior: 50608622!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[position :=  0@-1]
		 
		]
! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:15:39' prior: 50608640!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[ direction = #Este ifTrue:[ position :=  0@-1]
			ifFalse: [position := 0@-1]]
		 
		]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:15:42'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:15:42'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:15:42'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:15:42'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:15:42'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:15:42'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:15:42'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:15:42'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:15:42'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:15:42'!
FAILURE!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:15:42'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:16:34' prior: 50608650!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[ direction = #Este ifTrue:[ position :=  0@-1]
			ifFalse: [position := 0@1]]
		 
		]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:16:35'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:16:35'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:16:35'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:16:35'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:16:35'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:16:35'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:16:35'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:16:35'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:16:35'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:16:35'!
PASSED!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:16:57' prior: 50608699!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[ direction = #Este ifTrue:[ position := position +( 0@-1)]
			ifFalse: [position := position + (0@1)]]
		 
		]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:17:11'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:17:11'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:17:11'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:17:11'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:17:11'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:17:11'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:17:11'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:17:11'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:17:11'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:17:11'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:17:59'!
test11SabeRecivirUnComandoBRetrocediendoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte.
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:#Norte )! !

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:18:00'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:19:12' prior: 50608744!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[ direction = #Este ifTrue:[ position := position +( 0@-1)]
			ifFalse: [ direction =#Oeste ifTrue:[ position := position + (0@1)]
				ifFalse: [position := position + (-1@0)]]]
		 
		]
! !

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:19:22'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:19:34'!
test12SabeRecivirUnComandoBRetrocediendoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte.
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:#Norte )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:19:40' prior: 50608823!
test12SabeRecivirUnComandoBRetrocediendoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:#Sur )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:19:43' prior: 50608834!
test12SabeRecivirUnComandoBRetrocediendoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Sur )! !

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:19:45'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:20:25' prior: 50608804!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[ direction = #Este ifTrue:[ position := position +( 0@-1)]
			ifFalse: [ direction =#Oeste ifTrue:[ position := position + (0@1)]
				ifFalse: [ direction =#Sur ifTrue: [position := position + (-1@0)]]]]
		 
		]
! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:20:50' prior: 50608857!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[ direction = #Este ifTrue:[ position := position +( 0@-1)]
			ifFalse: [ direction =#Oeste ifTrue:[ position := position + (0@1)]
				ifFalse: [ direction =#Sur ifTrue: [position := position + (-1@0)]
					ifFalse: [position := position +(1@0)] ]]]
		 
		]
! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:20:54' prior: 50608873!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[ direction = #Este ifTrue:[ position := position +( 0@-1)]
			ifFalse: [ direction =#Oeste ifTrue:[ position := position + (0@1)]
				ifFalse: [ direction =#Norte ifTrue: [position := position + (-1@0)]
					ifFalse: [position := position +(1@0)] ]]]
		 
		]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:20:55'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:20:55'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:20:55'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:20:55'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:20:55'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:20:55'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:20:55'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:20:55'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:20:55'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:20:55'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:20:55'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:20:55'!
PASSED!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:21:21'!
executeBackward

	^ direction = #Este ifTrue:[ position := position +( 0@-1)]
			ifFalse: [ direction =#Oeste ifTrue:[ position := position + (0@1)]
				ifFalse: [ direction =#Norte ifTrue: [position := position + (-1@0)]
					ifFalse: [position := position +(1@0)] ]]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:21:21' prior: 50608890!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[ self executeBackward]
		 
		]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:21:25'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:21:25'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:21:25'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:21:25'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:21:25'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:21:25'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:21:25'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:21:25'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:21:25'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:21:25'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:21:25'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:21:25'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:21:52'!
test13SabeRecivirDosComandosB

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Sur )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:22:01' prior: 50609010!
test13SabeRecivirDosComandosB

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'bb'.
	
	self assert: ( marsRover hasPosition: 2@0 andFacing:#Sur )! !

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:22:02'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:22:50' prior: 50608959!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			self executeBackward .
			aListOfCommands size = 1ifTrue: [
			self executeBackward]]
		 
		]
! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:22:54' prior: 50609032!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			self executeBackward .
			aListOfCommands size = 2ifTrue: [
			self executeBackward]]
		 
		]
! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:22:56' prior: 50609044!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			self executeBackward .
			aListOfCommands size = 2 ifTrue: [
			self executeBackward]]
		 
		]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:22:56'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:22:56'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:22:56'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:22:56'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:22:56'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:22:56'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:22:56'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:22:56'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:22:56'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:22:56'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:22:56'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:22:56'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:22:56'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:23:15'!
test14SabeRecivirDosComandosB

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'bb'.
	
	self assert: ( marsRover hasPosition: 2@0 andFacing:#Sur )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:23:26'!
test14SabeRecivirVariosComandosB

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'bb'.
	
	self assert: ( marsRover hasPosition: 2@0 andFacing:#Sur )! !

!methodRemoval: MarsRoverTest #test14SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:23:26'!
test14SabeRecivirDosComandosB

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'bb'.
	
	self assert: ( marsRover hasPosition: 2@0 andFacing:#Sur )!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:23:31' prior: 50609121!
test14SabeRecivirVariosComandosB

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'bbbbb'.
	
	self assert: ( marsRover hasPosition: 5@0 andFacing:#Sur )! !

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 16:23:32'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:24:04' prior: 50609056!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
		 
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:24:05'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:24:05'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:24:05'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:24:05'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:24:05'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:24:05'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:24:05'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:24:05'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:24:05'!
FAILURE!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:24:05'!
FAILURE!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:24:05'!
FAILURE!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:24:05'!
FAILURE!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:24:05'!
FAILURE!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 16:24:05'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:24:15' prior: 50609153!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			1 to: aListOfCommands size do:[:iter| 
				self executeBackward ]
		 
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:24:16'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:24:16'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:24:16'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:24:16'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:24:16'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:24:16'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:24:16'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:24:16'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:24:16'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:24:16'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:24:16'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:24:16'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:24:16'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 16:24:16'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:25:37'!
test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'bbbbb'.
	
	self assert: ( marsRover hasPosition: 5@0 andFacing:#Sur )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:25:56' prior: 50609270!
test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte.
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este )! !

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 16:25:57'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:27:10' prior: 50609212!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$f) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:27:51'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:27:51'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:27:51'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:27:51'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:27:51'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:27:51'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:27:51'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:27:51'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:27:51'!
FAILURE!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:27:51'!
FAILURE!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:27:51'!
FAILURE!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:27:52'!
FAILURE!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:27:52'!
FAILURE!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 16:27:52'!
FAILURE!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 16:27:52'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:27:57' prior: 50609295!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				
				]
		]
	]
! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:28:10' prior: 50609360!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				direction:=#Este
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:28:11'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:28:11'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:28:11'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:28:11'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:28:11'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:28:11'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:28:11'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:28:11'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:28:11'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:28:12'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:28:12'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:28:12'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:28:12'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 16:28:12'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 16:28:12'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:28:23'!
test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte.
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:28:28' prior: 50609439!
test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este.
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Sur )! !

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 16:28:30'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:29:23' prior: 50609374!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				direction =#Norte ifTrue:[direction:=#Este]
				ifFalse:[direction:=#Este
					]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:29:24'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:29:24'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:29:24'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:29:24'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:29:24'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:29:24'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:29:24'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:29:24'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:29:24'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:29:24'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:29:24'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:29:24'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:29:24'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 16:29:24'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 16:29:24'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 16:29:24'!
FAILURE!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 16:29:24'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:29:30' prior: 50609464!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				direction =#Norte ifTrue:[direction:=#Este]
				ifFalse:[direction:=#Sur
					]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:29:31'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:29:31'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:29:32'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:29:32'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:29:32'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:29:32'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:29:32'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:29:32'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:29:32'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:29:32'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:29:32'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:29:32'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:29:32'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 16:29:32'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 16:29:32'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 16:29:32'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:32:37'!
test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Sur )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:32:40' prior: 50609610!
test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Oeste )! !

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 16:32:41'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:33:30' prior: 50609539!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				direction =#Norte ifTrue:[direction:=#Este]
				ifFalse:[ direction =#Este ifTrue: [ direction:=#Sur]
					ifFalse: [direction :=#Oeste]
					]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 16:33:31'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:33:46' prior: 50609621!
test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Norte)! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:33:49'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:33:49'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:33:49'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:33:49'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:33:49'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:33:49'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:33:49'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:33:49'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:33:49'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:33:49'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:33:49'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:33:49'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:33:49'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 16:33:49'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 16:33:49'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 16:33:50'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 16:33:50'!
FAILURE!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 16:33:50'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:35:01' prior: 50609635!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				direction =#Norte ifTrue:[direction:=#Este]
				ifFalse:[ direction =#Este ifTrue: [ direction:=#Sur]
					ifFalse: [ direction =#Sur ifTrue:[  direction :=#Oeste]
						ifFalse: [direction:=#Norte]]
					]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 16:35:03'!
PASSED!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:35:52'!
executeRight

	^ direction =#Norte ifTrue:[direction:=#Este]
				ifFalse:[ direction =#Este ifTrue: [ direction:=#Sur]
					ifFalse: [ direction =#Sur ifTrue:[  direction :=#Oeste]
						ifFalse: [direction:=#Norte]]
					]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:35:52' prior: 50609784!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				self executeRight
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:35:56'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:35:56'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:35:56'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:35:57'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:35:57'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:35:57'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:35:57'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:35:57'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:35:57'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:35:57'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:35:57'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:35:57'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:35:57'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 16:35:57'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 16:35:57'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 16:35:57'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 16:35:57'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:36:09'!
test17SabeRecivirDosComandoRCuandoEstaEnDireccionAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Norte)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:36:22'!
test18SabeRecivirDosComandosR

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Norte)! !

!methodRemoval: MarsRoverTest #test17SabeRecivirDosComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 16:36:27'!
test17SabeRecivirDosComandoRCuandoEstaEnDireccionAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Norte)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:36:33' prior: 50609955!
test18SabeRecivirDosComandosR

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'rr'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Sur)! !

!testRun: #MarsRoverTest #test18SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 16:36:40'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:36:47' prior: 50609976!
test18SabeRecivirDosComandosR

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'rr'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este)! !

!testRun: #MarsRoverTest #test18SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 16:36:49'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:37:22' prior: 50609872!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				self executeRight.
				
				aListOfCommands size = 2 ifTrue:[
					self executeRight ]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 16:37:26'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:37:33'!
test19SabeRecivirDosComandosR

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'rr'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este)! !

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 16:37:35'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 16:37:44' prior: 50610080!
test19SabeRecivirDosComandosR

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'rrrr'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Oeste)! !

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 16:37:45'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:38:20' prior: 50610002!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				((aListOfCommands  at:1)=$r) ifTrue:[
					self executeRight ]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 16:38:21'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 16:38:21'!
FAILURE!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 16:38:21'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 16:38:45' prior: 50610170!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				((aListOfCommands  at:1)=$r) ifTrue:[
					1 to: aListOfCommands size do:[:iter| 
						self executeRight ]
					]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 16:38:46'!
PASSED!

----SNAPSHOT----(12 May 2023 16:56:42) CuisUniversity-5706.image priorSource: 8780866!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:07:32' prior: 50609712!
test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Oeste)! !

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:07:56'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:07:58'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:08:00'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:08:01'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:08:04'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:08:50'!
test18SabeRecivirUnComandoRCuandoEstaEnDireccionOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Norte)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:09:16'!
test20SabeRecivirVariosComandosR

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'rrrr'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Oeste)! !

!methodRemoval: MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:09:16'!
test19SabeRecivirDosComandosR

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'rrrr'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Oeste)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:09:24'!
test19SabeRecivirDosComandosR

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'rr'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este)! !

!methodRemoval: MarsRoverTest #test18SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:09:24'!
test18SabeRecivirDosComandosR

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'rr'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este)!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:09:29'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 17:09:31'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 17:09:31'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 17:09:31'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 17:09:31'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 17:09:31'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 17:09:32'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 17:09:32'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 17:09:32'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 17:09:32'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 17:09:32'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 17:09:32'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 17:09:32'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 17:09:32'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 17:09:32'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:09:32'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:09:32'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:09:32'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoRCuandoEstaEnDireccionOeste stamp: 'Lp 5/12/2023 17:09:32'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:09:32'!
PASSED!

!testRun: #MarsRoverTest #test20SabeRecivirVariosComandosR stamp: 'Lp 5/12/2023 17:09:32'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:11:10'!
test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte.
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:11:22' prior: 50610541!
test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte.
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Oeste )! !

!testRun: #MarsRoverTest #test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:11:23'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 17:12:47' prior: 50610250!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				((aListOfCommands  at:1)=$r) ifTrue:[
					1 to: aListOfCommands size do:[:iter| 
						self executeRight ]
					]
					ifFalse:[
						direction:=#Oeste]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoRCuandoEstaEnDireccionOeste stamp: 'Lp 5/12/2023 17:12:49'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:12:50'!
PASSED!

!testRun: #MarsRoverTest #test20SabeRecivirVariosComandosR stamp: 'Lp 5/12/2023 17:12:50'!
PASSED!

!testRun: #MarsRoverTest #test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:12:50'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:13:04'!
test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte.
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Oeste )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:13:13' prior: 50610657!
test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este.
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Norte )! !

!testRun: #MarsRoverTest #test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:13:14'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 17:14:12' prior: 50610566!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				((aListOfCommands  at:1)=$r) ifTrue:[
					1 to: aListOfCommands size do:[:iter| 
						self executeRight ]
					]
					ifFalse:[
						direction = #Norte ifTrue:[direction:=#Oeste]
							ifFalse:[direction:=#Oeste]
							]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 17:14:13'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 17:14:13'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 17:14:13'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 17:14:13'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 17:14:13'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 17:14:13'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 17:14:13'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 17:14:14'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 17:14:14'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 17:14:14'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 17:14:14'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 17:14:14'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 17:14:14'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 17:14:14'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:14:14'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:14:14'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:14:14'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoRCuandoEstaEnDireccionOeste stamp: 'Lp 5/12/2023 17:14:14'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:14:14'!
PASSED!

!testRun: #MarsRoverTest #test20SabeRecivirVariosComandosR stamp: 'Lp 5/12/2023 17:14:14'!
PASSED!

!testRun: #MarsRoverTest #test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:14:14'!
PASSED!

!testRun: #MarsRoverTest #test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:14:14'!
FAILURE!

!testRun: #MarsRoverTest #test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:14:14'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 17:14:21' prior: 50610682!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				((aListOfCommands  at:1)=$r) ifTrue:[
					1 to: aListOfCommands size do:[:iter| 
						self executeRight ]
					]
					ifFalse:[
						direction = #Norte ifTrue:[direction:=#Oeste]
							ifFalse:[direction:=#Norte]
							]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:14:22'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:14:23'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoRCuandoEstaEnDireccionOeste stamp: 'Lp 5/12/2023 17:14:23'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:14:23'!
PASSED!

!testRun: #MarsRoverTest #test20SabeRecivirVariosComandosR stamp: 'Lp 5/12/2023 17:14:23'!
PASSED!

!testRun: #MarsRoverTest #test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:14:23'!
PASSED!

!testRun: #MarsRoverTest #test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:14:23'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:14:58'!
test23SabeRecivirUnComandoLCuandoEstaEnDireccionAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este )! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 17:16:33' prior: 50610783!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				((aListOfCommands  at:1)=$r) ifTrue:[
					1 to: aListOfCommands size do:[:iter| 
						self executeRight ]
					]
					ifFalse:[
						direction = #Norte ifTrue:[direction:=#Oeste]
							ifFalse:[ direction = #Oeste ifTrue:[direction:=#Norte]
								ifFalse: [direction=#Este]
								]
							]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoRCuandoEstaEnDireccionOeste stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test20SabeRecivirVariosComandosR stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:16:34'!
PASSED!

!testRun: #MarsRoverTest #test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:16:34'!
FAILURE!

!testRun: #MarsRoverTest #test23SabeRecivirUnComandoLCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:16:34'!
FAILURE!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoRCuandoEstaEnDireccionOeste stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test20SabeRecivirVariosComandosR stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:16:43'!
PASSED!

!testRun: #MarsRoverTest #test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:16:43'!
FAILURE!

!testRun: #MarsRoverTest #test23SabeRecivirUnComandoLCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:16:43'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 17:16:55' prior: 50610890!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				((aListOfCommands  at:1)=$r) ifTrue:[
					1 to: aListOfCommands size do:[:iter| 
						self executeRight ]
					]
					ifFalse:[
						direction = #Norte ifTrue:[direction:=#Oeste]
							ifFalse:[ direction = #Este ifTrue:[direction:=#Norte]
								ifFalse: [direction=#Este]
								]
							]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoRCuandoEstaEnDireccionOeste stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test20SabeRecivirVariosComandosR stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:16:56'!
PASSED!

!testRun: #MarsRoverTest #test23SabeRecivirUnComandoLCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:16:56'!
FAILURE!

!testRun: #MarsRoverTest #test23SabeRecivirUnComandoLCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:16:56'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 17:17:38' prior: 50611072!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				((aListOfCommands  at:1)=$r) ifTrue:[
					1 to: aListOfCommands size do:[:iter| 
						self executeRight ]
					]
					ifFalse:[
						direction = #Norte ifTrue:[direction:=#Oeste]
							ifFalse:[ direction = #Este ifTrue:[direction:=#Norte]
								ifFalse: [direction:=#Este]
								]
							]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:17:38'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoRCuandoEstaEnDireccionOeste stamp: 'Lp 5/12/2023 17:17:39'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:17:39'!
PASSED!

!testRun: #MarsRoverTest #test20SabeRecivirVariosComandosR stamp: 'Lp 5/12/2023 17:17:39'!
PASSED!

!testRun: #MarsRoverTest #test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:17:39'!
PASSED!

!testRun: #MarsRoverTest #test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:17:39'!
PASSED!

!testRun: #MarsRoverTest #test23SabeRecivirUnComandoLCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:17:39'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:17:52'!
test24SabeRecivirUnComandoLCuandoEstaEnDireccionAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:17:56' prior: 50611282!
test24SabeRecivirUnComandoLCuandoEstaEnDireccionAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:17:59' prior: 50611293!
test24SabeRecivirUnComandoLCuandoEstaEnDireccionAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Sur )! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 17:18:38' prior: 50611179!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				((aListOfCommands  at:1)=$r) ifTrue:[
					1 to: aListOfCommands size do:[:iter| 
						self executeRight ]
					]
					ifFalse:[
						direction = #Norte ifTrue:[direction:=#Oeste]
							ifFalse:[ direction = #Este ifTrue:[direction:=#Norte]
								ifFalse: [ direction = #Sur ifTrue:[direction:=#Este]
									ifFalse: [direction := #Sur]]
								]
							]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 17:18:38'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 17:18:38'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoRCuandoEstaEnDireccionOeste stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test20SabeRecivirVariosComandosR stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test23SabeRecivirUnComandoLCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!

!testRun: #MarsRoverTest #test24SabeRecivirUnComandoLCuandoEstaEnDireccionAlOeste stamp: 'Lp 5/12/2023 17:18:39'!
PASSED!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 17:18:58'!
executeLeft

	^ direction = #Norte ifTrue:[direction:=#Oeste]
							ifFalse:[ direction = #Este ifTrue:[direction:=#Norte]
								ifFalse: [ direction = #Sur ifTrue:[direction:=#Este]
									ifFalse: [direction := #Sur]]
								]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 17:18:58' prior: 50611314!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				((aListOfCommands  at:1)=$r) ifTrue:[
					1 to: aListOfCommands size do:[:iter| 
						self executeRight ]
					]
					ifFalse:[
						self executeLeft
							]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 17:19:02'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 17:19:02'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 17:19:02'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 17:19:02'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 17:19:02'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 17:19:02'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 17:19:02'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 17:19:02'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 17:19:02'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 17:19:02'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 17:19:02'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 17:19:02'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 17:19:02'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 17:19:02'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:19:02'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:19:03'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:19:03'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoRCuandoEstaEnDireccionOeste stamp: 'Lp 5/12/2023 17:19:03'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:19:03'!
PASSED!

!testRun: #MarsRoverTest #test20SabeRecivirVariosComandosR stamp: 'Lp 5/12/2023 17:19:03'!
PASSED!

!testRun: #MarsRoverTest #test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:19:03'!
PASSED!

!testRun: #MarsRoverTest #test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:19:03'!
PASSED!

!testRun: #MarsRoverTest #test23SabeRecivirUnComandoLCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:19:03'!
PASSED!

!testRun: #MarsRoverTest #test24SabeRecivirUnComandoLCuandoEstaEnDireccionAlOeste stamp: 'Lp 5/12/2023 17:19:03'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:19:23'!
test25SabeRecivirDosComandosL

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Sur )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:19:30' prior: 50611534!
test25SabeRecivirDosComandosL

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:19:33' prior: 50611544!
test25SabeRecivirDosComandosL

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'ll'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este )! !

!testRun: #MarsRoverTest #test25SabeRecivirDosComandosL stamp: 'Lp 5/12/2023 17:19:33'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 17:20:25' prior: 50611432!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				((aListOfCommands  at:1)=$r) ifTrue:[
					1 to: aListOfCommands size do:[:iter| 
						self executeRight ]
					]
					ifFalse:[
						self executeLeft.
						aListOfCommands size =2 ifTrue:[
							self  executeLeft ]
							]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 17:20:25'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 17:20:25'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoRCuandoEstaEnDireccionOeste stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test20SabeRecivirVariosComandosR stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test23SabeRecivirUnComandoLCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test24SabeRecivirUnComandoLCuandoEstaEnDireccionAlOeste stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!

!testRun: #MarsRoverTest #test25SabeRecivirDosComandosL stamp: 'Lp 5/12/2023 17:20:26'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:20:42'!
test26SabeRecivirVariosComandosL

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'ll'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:20:49' prior: 50611674!
test26SabeRecivirVariosComandosL

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'llll'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Oeste )! !

!testRun: #MarsRoverTest #test26SabeRecivirVariosComandosL stamp: 'Lp 5/12/2023 17:20:50'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/12/2023 17:21:18' prior: 50611567!
receiveCommand: aListOfCommands
	 aListOfCommands isEmpty ifFalse: [
		((aListOfCommands at:1) =$f) ifTrue:[
			1 to: aListOfCommands size do:[:iter| 
				self executeFoward ]
			]
		ifFalse:[
			((aListOfCommands at:1) =$b) ifTrue:[
				1 to: aListOfCommands size do:[:iter| 
					self executeBackward ]
		 	]
			ifFalse:[
				((aListOfCommands  at:1)=$r) ifTrue:[
					1 to: aListOfCommands size do:[:iter| 
						self executeRight ]
					]
					ifFalse:[
						1 to: aListOfCommands size do:[:iter| 
						self executeLeft ]
							]
				]
		]
	]
! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoRCuandoEstaEnDireccionOeste stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test20SabeRecivirVariosComandosR stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test23SabeRecivirUnComandoLCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test24SabeRecivirUnComandoLCuandoEstaEnDireccionAlOeste stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test25SabeRecivirDosComandosL stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test26SabeRecivirVariosComandosL stamp: 'Lp 5/12/2023 17:21:19'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoRCuandoEstaEnDireccionOeste stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test20SabeRecivirVariosComandosR stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test23SabeRecivirUnComandoLCuandoEstaEnDireccionAlSur stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test24SabeRecivirUnComandoLCuandoEstaEnDireccionAlOeste stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test25SabeRecivirDosComandosL stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!

!testRun: #MarsRoverTest #test26SabeRecivirVariosComandosL stamp: 'Lp 5/12/2023 17:21:44'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:22:24'!
test26SabeRecivirDosComandosDistintos

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'llll'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Oeste )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:22:29' prior: 50611896!
test26SabeRecivirDosComandosDistintos

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'fw'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Oeste )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:22:47' prior: 50611906!
test26SabeRecivirDosComandosDistintos

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'fl'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Oeste )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:22:55' prior: 50611916!
test26SabeRecivirDosComandosDistintos

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'fl'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Sur )! !

!testRun: #MarsRoverTest #test26SabeRecivirDosComandosDistintos stamp: 'Lp 5/12/2023 17:22:56'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/12/2023 17:28:17'!
test27SabeRecivirDosComandosDistintos

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'fl'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Sur )! !

!methodRemoval: MarsRoverTest #test26SabeRecivirDosComandosDistintos stamp: 'Lp 5/12/2023 17:28:17'!
test26SabeRecivirDosComandosDistintos

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'fl'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Sur )!

----SNAPSHOT----(12 May 2023 17:40:51) CuisUniversity-5706.image priorSource: 8917779!

----STARTUP---- (13 May 2023 10:22:12) as C:\Users\RYZEN\Desktop\windows64\CuisUniversity-5706.image!


!methodRemoval: MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 10:22:52'!
test04SabeRecivirUnComandoFAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Norte )!

!methodRemoval: MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 10:22:54'!
test05SabeRecivirUnComandoFAvanzandoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:#Sur)!

!methodRemoval: MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:22:55'!
test06SabeRecivirUnComandoFAvanzandoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Oeste)!

!methodRemoval: MarsRoverTest #test07SabeRecivirDosComandosF stamp: 'Lp 5/13/2023 10:22:57'!
test07SabeRecivirDosComandosF

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'ff'.
	
	self assert: ( marsRover hasPosition: 0@-2 andFacing:#Oeste)!

!methodRemoval: MarsRoverTest #test08SabeRecivirVariosComandosF stamp: 'Lp 5/13/2023 10:22:59'!
test08SabeRecivirVariosComandosF

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'fffff'.
	
	self assert: ( marsRover hasPosition: 0@-5 andFacing:#Oeste)!

!methodRemoval: MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 10:23:00'!
test09SabeRecivirUnComandoBRetrocediendoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Este )!

!methodRemoval: MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 10:23:01'!
test10SabeRecivirUnComandoBRetrocediendoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 0@1 andFacing:#Oeste )!

!methodRemoval: MarsRoverTest #test11SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 10:23:04'!
test11SabeRecivirUnComandoBRetrocediendoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte.
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:#Norte )!

!methodRemoval: MarsRoverTest #test12SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 10:23:06'!
test12SabeRecivirUnComandoBRetrocediendoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Sur )!

!methodRemoval: MarsRoverTest #test13SabeRecivirDosComandosB stamp: 'Lp 5/13/2023 10:23:07'!
test13SabeRecivirDosComandosB

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'bb'.
	
	self assert: ( marsRover hasPosition: 2@0 andFacing:#Sur )!

!methodRemoval: MarsRoverTest #test14SabeRecivirVariosComandosB stamp: 'Lp 5/13/2023 10:23:09'!
test14SabeRecivirVariosComandosB

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'bbbbb'.
	
	self assert: ( marsRover hasPosition: 5@0 andFacing:#Sur )!

!methodRemoval: MarsRoverTest #test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/13/2023 10:23:10'!
test15SabeRecivirUnComandoRCuandoEstaEnDireccionAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte.
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este )!

!methodRemoval: MarsRoverTest #test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste stamp: 'Lp 5/13/2023 10:23:12'!
test16SabeRecivirUnComandoRCuandoEstaEnDireccionAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este.
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Sur )!

!methodRemoval: MarsRoverTest #test27SabeRecivirDosComandosDistintos stamp: 'Lp 5/13/2023 10:23:16'!
test27SabeRecivirDosComandosDistintos

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'fl'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Sur )!

!methodRemoval: MarsRoverTest #test26SabeRecivirVariosComandosL stamp: 'Lp 5/13/2023 10:23:17'!
test26SabeRecivirVariosComandosL

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'llll'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Oeste )!

!methodRemoval: MarsRoverTest #test25SabeRecivirDosComandosL stamp: 'Lp 5/13/2023 10:23:18'!
test25SabeRecivirDosComandosL

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'ll'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este )!

!methodRemoval: MarsRoverTest #test24SabeRecivirUnComandoLCuandoEstaEnDireccionAlOeste stamp: 'Lp 5/13/2023 10:23:19'!
test24SabeRecivirUnComandoLCuandoEstaEnDireccionAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Sur )!

!methodRemoval: MarsRoverTest #test23SabeRecivirUnComandoLCuandoEstaEnDireccionAlSur stamp: 'Lp 5/13/2023 10:23:20'!
test23SabeRecivirUnComandoLCuandoEstaEnDireccionAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este )!

!methodRemoval: MarsRoverTest #test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste stamp: 'Lp 5/13/2023 10:23:21'!
test22SabeRecivirUnComandoLCuandoEstaEnDireccionAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este.
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Norte )!

!methodRemoval: MarsRoverTest #test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte stamp: 'Lp 5/13/2023 10:23:22'!
test21SabeRecivirUnComandoLCuandoEstaEnDireccionAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte.
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Oeste )!

!methodRemoval: MarsRoverTest #test20SabeRecivirVariosComandosR stamp: 'Lp 5/13/2023 10:23:23'!
test20SabeRecivirVariosComandosR

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'rrrr'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Oeste)!

!methodRemoval: MarsRoverTest #test19SabeRecivirDosComandosR stamp: 'Lp 5/13/2023 10:23:23'!
test19SabeRecivirDosComandosR

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'rr'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Este)!

!methodRemoval: MarsRoverTest #test18SabeRecivirUnComandoRCuandoEstaEnDireccionOeste stamp: 'Lp 5/13/2023 10:23:24'!
test18SabeRecivirUnComandoRCuandoEstaEnDireccionOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste.
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Norte)!

!methodRemoval: MarsRoverTest #test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur stamp: 'Lp 5/13/2023 10:23:24'!
test17SabeRecivirUnComandoRCuandoEstaEnDireccionAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur.
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:#Oeste)!

!methodRemoval: MarsRover #executeRight stamp: 'Lp 5/13/2023 10:23:32'!
executeRight

	^ direction =#Norte ifTrue:[direction:=#Este]
				ifFalse:[ direction =#Este ifTrue: [ direction:=#Sur]
					ifFalse: [ direction =#Sur ifTrue:[  direction :=#Oeste]
						ifFalse: [direction:=#Norte]]
					]!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 10:23:43' prior: 50611697!
receiveCommand: aListOfCommands
	^self! !

!methodRemoval: MarsRover #executeLeft stamp: 'Lp 5/13/2023 10:23:47'!
executeLeft

	^ direction = #Norte ifTrue:[direction:=#Oeste]
							ifFalse:[ direction = #Este ifTrue:[direction:=#Norte]
								ifFalse: [ direction = #Sur ifTrue:[direction:=#Este]
									ifFalse: [direction := #Sur]]
								]!

!methodRemoval: MarsRover #executeFoward stamp: 'Lp 5/13/2023 10:23:48'!
executeFoward

	^ direction =#Norte ifTrue:[ position := position + (1@0)] 
			ifFalse:[ direction =#Este ifTrue:[
				position := position + (0@1)	]
				ifFalse:[ direction=#Sur ifTrue:[position:=position + (-1@0)]
					ifFalse:[ position := position +(0@-1)]]
				]!

!methodRemoval: MarsRover #executeBackward stamp: 'Lp 5/13/2023 10:23:49'!
executeBackward

	^ direction = #Este ifTrue:[ position := position +( 0@-1)]
			ifFalse: [ direction =#Oeste ifTrue:[ position := position + (0@1)]
				ifFalse: [ direction =#Norte ifTrue: [position := position + (-1@0)]
					ifFalse: [position := position +(1@0)] ]]!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:24:06'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 10:24:48' prior: 50612218!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[position = 1@0]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 10:24:49'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 10:24:49'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:24:49'!
ERROR!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:24:49'!
ERROR!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 10:24:59' prior: 50612257!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[position := 1@0]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 10:24:59'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 10:24:59'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:24:59'!
FAILURE!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:24:59'!
FAILURE!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:25:16'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 10:25:24' prior: 50612276!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[position := 0@1]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 10:25:25'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 10:25:25'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:25:25'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:25:38'!
test04SabeRecivirUnComandoFAvanzandoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@1 andFacing:#Este )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:25:51'!
test04SabeRecivirUnComandoFAvanzandoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@1 andFacing:#Este )! !

!methodRemoval: MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:25:51'!
test04SabeRecivirUnComandoFAvanzandoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Este .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@1 andFacing:#Este )!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:26:03' prior: 50612324!
test04SabeRecivirUnComandoFAvanzandoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Sur .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:#Sur )! !

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 10:26:04'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 10:27:10' prior: 50612298!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		direction = #Este ifTrue: [ position := 0@1] 
			ifFalse:[
				position:= -1@0
			]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 10:27:11'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 10:27:11'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:27:11'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 10:27:11'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:27:34'!
test05SabeRecivirUnComandoFAvanzandoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Oete )! !

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:27:35'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 10:28:33' prior: 50612357!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		direction = #Este ifTrue: [ position := 0@1] 
			ifFalse:[
				direction = #Sur ifTrue: [position:= -1@0] 
				ifFalse:[ position :=0@-1] 
				
			]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 10:28:33'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 10:28:33'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:28:33'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 10:28:33'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:28:33'!
FAILURE!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:28:34'!
FAILURE!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 10:28:49'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 10:28:49'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:28:49'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 10:28:49'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:28:49'!
FAILURE!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:28:49'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:29:00' prior: 50612378!
test05SabeRecivirUnComandoFAvanzandoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Oeste )! !

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:29:00'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 10:29:00'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 10:29:00'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:29:00'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 10:29:00'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:29:01'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:29:16'!
test06SabeRecivirUnComandoFAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Oeste .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:#Oeste )! !

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 10:29:18'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 10:29:18'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 10:29:18'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:29:18'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 10:29:18'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:29:18'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 10:29:18'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:29:31' prior: 50612472!
test06SabeRecivirUnComandoFAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Norte )! !

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 10:29:31'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 10:30:46' prior: 50612391!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		direction = #Este ifTrue: [ position := 0@1] 
			ifFalse:[
				direction = #Sur ifTrue: [position:= -1@0] 
				ifFalse:[
					direction :=#Oeste ifTrue:[position :=0@-1]
					  ifFalse: [position :=1@0]
					] 
				
			]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 10:30:47'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 10:30:47'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:30:47'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 10:30:47'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:30:47'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 10:30:47'!
ERROR!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 10:30:56'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 10:30:56'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:30:56'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 10:30:56'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:30:56'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 10:30:56'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:30:59'!
ERROR!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 10:31:21' prior: 50612519!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		direction = #Este ifTrue: [ position := 0@1] 
			ifFalse:[
				direction = #Sur ifTrue: [position:= -1@0] 
				ifFalse:[
					direction =#Oeste ifTrue:[position :=0@-1]
					  ifFalse: [position :=1@0]
					] 
				
			]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 10:31:22'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 10:31:22'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:31:22'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 10:31:22'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:31:22'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 10:31:22'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:32:16' prior: 50612506!
test06SabeRecivirUnComandoFAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:#Norte .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:#Norte )
	"El test nos dice que tiene que tener un comportamiento distinto segun la direccion, el mensaje puede ser refactorizando con doble dispatch"! !

Object subclass: #MarsRoverDirection
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!

!classDefinition: #MarsRoverDirection category: 'exercise-MarsRover' stamp: 'Lp 5/13/2023 10:33:03'!
Object subclass: #MarsRoverDirection
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!
!MarsRover methodsFor: 'initialize' stamp: 'Lp 5/13/2023 10:34:29' prior: 50604310!
initializeIn: aPoint facing: aDirection
	position := aPoint.
	direction := MarsRoverDirection for:aDirection .! !
!MarsRoverDirection class methodsFor: 'no messages' stamp: 'Lp 5/13/2023 10:35:04'!
for: aDirection
	
	^self new initializeFor:aDirection! !
!MarsRover methodsFor: 'initialize' stamp: 'Lp 5/13/2023 10:38:17' prior: 50612635!
initializeIn: aPoint facing: aDirection
	position := aPoint.
	direction := aDirection initializeWith: self.! !
!MarsRover methodsFor: 'initialize' stamp: 'Lp 5/13/2023 10:38:35' prior: 50612647!
initializeIn: aPoint facing: aDirection
	position := aPoint.
	direction := aDirection new initializeWith: self.! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 10:38:36'!
ERROR!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 10:38:36'!
ERROR!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:38:36'!
ERROR!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 10:38:36'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:38:36'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 10:38:36'!
ERROR!

MarsRoverDirection subclass: #Norte
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!

!classDefinition: #Norte category: 'exercise-MarsRover' stamp: 'Lp 5/13/2023 10:39:07'!
MarsRoverDirection subclass: #Norte
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!

!classDefinition: #Norte category: 'exercise-MarsRover' stamp: 'Lp 5/13/2023 10:40:23'!
MarsRoverDirection subclass: #Norte
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!
!Norte methodsFor: 'no messages' stamp: 'Lp 5/13/2023 10:40:15'!
initializeWith:aMarsRover
	marsRover := aMarsRover! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 10:40:27'!
ERROR!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 10:40:27'!
ERROR!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:40:27'!
ERROR!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 10:40:27'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:40:27'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 10:40:27'!
ERROR!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 10:41:09' prior: 50612575!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		direction = #Este ifTrue: [ position := 0@1] 
			ifFalse:[
				direction = #Sur ifTrue: [position:= -1@0] 
				ifFalse:[
					direction =#Oeste ifTrue:[position :=0@-1]
					  ifFalse: [direction receiveFoward]
					] 
				
			]
		]! !
!MarsRoverDirection methodsFor: 'no messages' stamp: 'Lp 5/13/2023 10:41:35'!
initializeWith: aMarsRover
	self subclassResponsibility ! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:41:45'!
receivefoward
	self subclassResponsibility ! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:41:58'!
receiveFoward
	self subclassResponsibility ! !

!methodRemoval: MarsRoverDirection #receivefoward stamp: 'Lp 5/13/2023 10:41:58'!
receivefoward
	self subclassResponsibility !
!Norte methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:42:08' overrides: 50612746!
receiveFoward
	self subclassResponsibility ! !
!Norte methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:42:28' prior: 50612755 overrides: 50612746!
receiveFoward
	marsRover goFoward.! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 10:42:38'!
goFoward! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 10:42:47' prior: 50612764!
goFoward
	position:=1@0! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 10:42:48'!
ERROR!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 10:42:48'!
ERROR!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:42:48'!
ERROR!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 10:42:48'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:42:48'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 10:42:48'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 10:42:57'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 10:42:57'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:43:14' prior: 50612608!
test06SabeRecivirUnComandoFAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:Norte )
	"El test nos dice que tiene que tener un comportamiento distinto segun la direccion, el mensaje puede ser refactorizando con doble dispatch"! !

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 10:43:15'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:43:46' prior: 50612798!
test06SabeRecivirUnComandoFAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:Norte new )
	"El test nos dice que tiene que tener un comportamiento distinto segun la direccion, el mensaje puede ser refactorizando con doble dispatch"! !

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 10:43:48'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:44:20' prior: 50612816!
test06SabeRecivirUnComandoFAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:'Norte')
	"El test nos dice que tiene que tener un comportamiento distinto segun la direccion, el mensaje puede ser refactorizando con doble dispatch"! !

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 10:44:25'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'Lp 5/13/2023 10:45:42' prior: 50605863!
hasPosition: aPosition andFacing: aDirection 
	(aPosition = position and: (direction is:aDirection)) ifTrue: [^true]. 
	^false! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:46:00' overrides: 16903326!
is: aDirection! !
!Norte methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 10:46:18' overrides: 50612860!
is: aDirection
	^true! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 10:46:19'!
ERROR!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 10:46:19'!
ERROR!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 10:46:19'!
ERROR!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 10:46:19'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 10:46:19'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 10:46:19'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:07:10'!
ERROR!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:07:10'!
ERROR!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:07:10'!
ERROR!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:07:10'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:07:10'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:07:10'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:07:14'!
ERROR!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:07:22'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:10:53' prior: 50607250!
test01AlIniciarElRobotSabeDondeEsta

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Norte )! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:10:53'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:10:53'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:10:53'!
ERROR!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:10:54'!
ERROR!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:10:54'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:10:54'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:10:54'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:11:03' prior: 50607361!
test02SabeRecivirInstruccionVacia

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:''.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Norte )! !

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:11:03'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:11:03'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:11:03'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:11:03'!
ERROR!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:11:03'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:11:03'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:11:03'!
PASSED!
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:11:22' prior: 50612860 overrides: 16903326!
is: aDirection
	self subclassResponsibility ! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:13:35' prior: 50612834!
test06SabeRecivirUnComandoFAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:Norte)
	"El test nos dice que tiene que tener un comportamiento distinto segun la direccion, el mensaje puede ser refactorizando con doble dispatch"! !
!Norte methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:13:55' prior: 50612864 overrides: 50612981!
is: aDirection
	^aDirection isKindOf: self! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:13:56'!
FAILURE!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:13:56'!
FAILURE!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:13:56'!
ERROR!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:13:56'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:13:56'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:13:56'!
FAILURE!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:14:01'!
FAILURE!
!Norte methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:14:47' prior: 50613001 overrides: 50612981!
is: aDirection
	^aDirection isKindOf: self class! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:14:48'!
FAILURE!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:14:48'!
FAILURE!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:14:48'!
ERROR!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:14:48'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:14:48'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:14:48'!
FAILURE!
!Norte methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:15:45' prior: 50613030 overrides: 50612981!
is: aDirection
	^aDirection isKindOf: Norte! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:15:46'!
FAILURE!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:15:46'!
FAILURE!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:15:46'!
ERROR!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:15:46'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:15:46'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:15:46'!
FAILURE!
!Norte methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:15:54' prior: 50613056 overrides: 50612981!
is: aDirection
	^aDirection =Norte! !
!Norte methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:15:56' prior: 50613082 overrides: 50612981!
is: aDirection
	^aDirection = Norte! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:15:56'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:15:56'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:15:56'!
ERROR!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:15:56'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:15:57'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:15:57'!
PASSED!

MarsRoverDirection subclass: #Este
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!

!classDefinition: #Este category: 'exercise-MarsRover' stamp: 'Lp 5/13/2023 11:17:09'!
MarsRoverDirection subclass: #Este
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!

MarsRoverDirection subclass: #Oeste
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!

!classDefinition: #Oeste category: 'exercise-MarsRover' stamp: 'Lp 5/13/2023 11:17:16'!
MarsRoverDirection subclass: #Oeste
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!

MarsRoverDirection subclass: #Sur
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!

!classDefinition: #Sur category: 'exercise-MarsRover' stamp: 'Lp 5/13/2023 11:17:19'!
MarsRoverDirection subclass: #Sur
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'exercise-MarsRover'!
!Este methodsFor: 'no messages' stamp: 'Lp 5/13/2023 11:21:07' overrides: 50612736!
initializeWith:aMarsRover
	marsRover := aMarsRover! !
!Este methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:21:16' overrides: 50612981!
is: aDirection
	^aDirection = Norte! !
!Este methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:21:20' prior: 50613153 overrides: 50612981!
is: aDirection
	^aDirection = Este! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:21:21'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:21:21'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:21:21'!
ERROR!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:21:21'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:21:21'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:21:21'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:21:29' prior: 50607521!
test03SabeRecivirUnComandoFAvanzandoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Este .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@1 andFacing:Este )! !

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:21:32'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:21:40' prior: 50612344!
test04SabeRecivirUnComandoFAvanzandoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Sur .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:Sur )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:21:47' prior: 50612442!
test05SabeRecivirUnComandoFAvanzandoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Oeste .
	
	marsRover receiveCommand:'f'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:Oeste )! !

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:21:48'!
ERROR!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:21:53'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:21:53'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:21:53'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:21:53'!
ERROR!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:21:53'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:21:53'!
ERROR!
!Este methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:22:07' overrides: 50612746!
receiveFoward
	self subclassResponsibility ! !
!Este methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:22:21' prior: 50613241 overrides: 50612746!
receiveFoward
	marsRover goFoward.! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:22:22'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:22:22'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:22:22'!
FAILURE!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:22:22'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:22:22'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:22:22'!
PASSED!
!Norte methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:23:00' prior: 50612760 overrides: 50612746!
receiveFoward
	marsRover goFowardToTheNorth.! !
!Este methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:23:09' prior: 50613246 overrides: 50612746!
receiveFoward
	marsRover goFowardToTheNorth.! !
!Este methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:23:16' prior: 50613276 overrides: 50612746!
receiveFoward
	marsRover goFowardToTheEast.! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:23:39'!
goFowardToTheNorth
	position:=1@0! !

!methodRemoval: MarsRover #goFoward stamp: 'Lp 5/13/2023 11:23:39'!
goFoward
	position:=1@0!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:24:02'!
goFowardToTheEast
	position:=1@0! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:24:08' prior: 50613292!
goFowardToTheEast
	position:=0@1! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:24:09'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:24:09'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:24:09'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:24:09'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:24:09'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:24:09'!
PASSED!
!Oeste methodsFor: 'no messages' stamp: 'Lp 5/13/2023 11:24:23' overrides: 50612736!
initializeWith: aMarsRover
	self subclassResponsibility ! !
!Oeste methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:24:34' overrides: 50612981!
is: aDirection
	^aDirection = Oeste! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:24:35'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:24:35'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:24:35'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:24:35'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:24:35'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:24:35'!
PASSED!
!Oeste methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:24:51' overrides: 50612746!
receiveFoward
	marsRover goFowardToTheWest.! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:25:04'!
goFowardToTheWest! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:25:05'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:25:05'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:25:05'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:25:05'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:25:05'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:25:05'!
PASSED!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:25:16' prior: 50613354!
goFowardToTheWest
	position:=0@-1! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:25:18'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:25:18'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:25:18'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:25:18'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:25:18'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:25:18'!
PASSED!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:25:33' prior: 50612724!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		direction  receiveFoward 
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:25:34'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:25:34'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:25:34'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:25:34'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:25:34'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:25:34'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:25:50'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:25:50'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:25:50'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:25:50'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:25:50'!
ERROR!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:25:50'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:25:53'!
ERROR!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:26:17'!
ERROR!
!Oeste methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:26:36' prior: 50613320 overrides: 50612736!
initializeWith:aMarsRover
	marsRover := aMarsRover! !
!Sur methodsFor: 'no messages' stamp: 'Lp 5/13/2023 11:26:43' overrides: 50612736!
initializeWith:aMarsRover
	marsRover := aMarsRover! !
!Sur methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:27:04' overrides: 50612981!
is: aDirection
	^aDirection = Sur! !
!Sur methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:27:13' overrides: 50612746!
receiveFoward
	marsRover goFowardToTheWest.! !
!Sur methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:27:19' prior: 50613470 overrides: 50612746!
receiveFoward
	marsRover goFowardToTheSouth.! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:27:28'!
goFowardToTheSouth! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:27:35' prior: 50613479!
goFowardToTheSouth
	position:=-1@0! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:27:36'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:27:36'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:27:36'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:27:36'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:27:36'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:27:36'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:28:42'!
test07SabeRecivirUnComandoBAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:Norte)
	"El test nos dice que tiene que tener un comportamiento distinto segun la direccion, el mensaje puede ser refactorizando con doble dispatch"! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:28:48' prior: 50613507!
test07SabeRecivirUnComandoBAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:Norte)
	"El test nos dice que tiene que tener un comportamiento distinto segun la direccion, el mensaje puede ser refactorizando con doble dispatch"! !

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:28:48'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:29:02' prior: 50613522!
test07SabeRecivirUnComandoBAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:Norte)
	! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:30:38' prior: 50613402!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				position:=-1@0
				]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:30:39'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:30:39'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:30:39'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:30:39'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:30:39'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:30:39'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:30:39'!
FAILURE!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:30:39'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:30:59' prior: 50613540!
test07SabeRecivirUnComandoBAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:Norte)
	! !

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:31:01'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:31:01'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:31:01'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:31:01'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:31:01'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:31:01'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:31:01'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:31:01'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:31:11'!
test07SabeRecivirUnComandoBAvanzandoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:Norte)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:31:23' prior: 50613623!
test07SabeRecivirUnComandoBAvanzandoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Este .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:Este)
	! !

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBAvanzandoAlEste stamp: 'Lp 5/13/2023 11:31:23'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:32:34' prior: 50613550!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				(direction is:Norte) ifTrue: [position:=-1@0]				
					ifFalse: [position := 0@-1]
				]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:32:35'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:32:35'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:32:35'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:32:35'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:32:35'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:32:35'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBAvanzandoAlEste stamp: 'Lp 5/13/2023 11:32:35'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:32:35'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:32:46'!
test08SabeRecivirUnComandoBAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:Norte)
	! !

!methodRemoval: MarsRoverTest #test07SabeRecivirUnComandoBAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:32:47'!
test07SabeRecivirUnComandoBAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:Norte)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:33:11'!
test09SabeRecivirUnComandoBAvanzandoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:Norte)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:33:33'!
test07SabeRecivirUnComandoBRetrocediendoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Este .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:Este)
	! !

!methodRemoval: MarsRoverTest #test07SabeRecivirUnComandoBAvanzandoAlEste stamp: 'Lp 5/13/2023 11:33:33'!
test07SabeRecivirUnComandoBAvanzandoAlEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Este .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 0@-1 andFacing:Este)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:33:42'!
test08SabeRecivirUnComandoBRetrocediendoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:Norte)
	! !

!methodRemoval: MarsRoverTest #test08SabeRecivirUnComandoBAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:33:42'!
test08SabeRecivirUnComandoBAvanzandoAlNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:Norte)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:33:50'!
test09SabeRecivirUnComandoBRetrocediendoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:Norte)
	! !

!methodRemoval: MarsRoverTest #test09SabeRecivirUnComandoBAvanzandoAlSur stamp: 'Lp 5/13/2023 11:33:50'!
test09SabeRecivirUnComandoBAvanzandoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:Norte)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:34:05' prior: 50613754!
test09SabeRecivirUnComandoBRetrocediendoAlSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Sur .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:Sur)
	! !

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:34:05'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:35:15' prior: 50613646!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				(direction is:Norte) ifTrue: [position:=-1@0]				
					ifFalse: [ (direction is:Este ) ifTrue:[ position := 0@-1]
						ifFalse:[position :=1@0 ]]
				]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:35:15'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:35:15'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:35:15'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:35:16'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:35:16'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:35:16'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:35:16'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:35:16'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:35:16'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:35:28'!
test10SabeRecivirUnComandoBRetrocediendoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Sur .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 1@0 andFacing:Sur)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:35:38' prior: 50613832!
test10SabeRecivirUnComandoBRetrocediendoAlOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Oeste .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 0@1 andFacing:Oeste)
	! !

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:35:39'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:36:21' prior: 50613788!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				(direction is:Norte) ifTrue: [position:=-1@0]				
					ifFalse: [ (direction is:Este ) ifTrue:[ position := 0@-1]
						ifFalse:[ (direction is:Sur) ifTrue: [position :=1@0] 
							ifFalse: [position := 0@1] ]]
				]
		]! !

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:36:26'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:36:31'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:36:31'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:36:31'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:36:31'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:36:31'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:36:31'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:36:31'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:36:31'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:36:31'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:36:31'!
PASSED!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:36:54' prior: 50613856!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				direction receiveBackward.
				]
		]! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:37:03'!
receiveBackward
	self subclassResponsibility ! !
!Este methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:37:14' overrides: 50613918!
receiveBackward
	marsRover goBackwardToTheEast.! !
!Norte methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:37:30' overrides: 50613918!
receiveBackward
	marsRover goBackwardToTheNorth.! !
!Oeste methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:37:49' overrides: 50613918!
receiveBackward
	marsRover goBackwardToTheWest.! !
!Sur methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:37:58' overrides: 50613918!
receiveBackward
	marsRover goFowardToTheSouth.! !
!Sur methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:38:03' prior: 50613938 overrides: 50613918!
receiveBackward
	marsRover goBackwardToTheSouth.! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:38:11'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:38:11'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:38:12'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:38:12'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:38:12'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:38:12'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:38:12'!
ERROR!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:38:12'!
ERROR!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:38:12'!
ERROR!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:38:12'!
ERROR!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:38:14'!
ERROR!
!MarsRover methodsFor: 'move Backward' stamp: 'Lp 5/13/2023 11:38:30'!
goBackwardToTheEast
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'move Backward' stamp: 'Lp 5/13/2023 11:39:07' prior: 50613985!
goBackwardToTheEast
	position := 0@-1! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:39:09'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:39:09'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:39:09'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:39:10'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:39:10'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:39:10'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:39:10'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:39:10'!
ERROR!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:39:10'!
ERROR!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:39:10'!
ERROR!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:39:18'!
ERROR!
!MarsRover methodsFor: 'move Backward' stamp: 'Lp 5/13/2023 11:39:24'!
goBackwardToTheNorth
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'move Backward' stamp: 'Lp 5/13/2023 11:39:48' prior: 50614032!
goBackwardToTheNorth
	position := -1@0! !

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:39:50'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:39:52'!
ERROR!
!MarsRover methodsFor: 'move Backward' stamp: 'Lp 5/13/2023 11:39:57'!
goBackwardToTheSouth
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'move Backward' stamp: 'Lp 5/13/2023 11:40:07' prior: 50614048!
goBackwardToTheSouth
	position :=1@0! !

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:40:08'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:40:10'!
ERROR!
!MarsRover methodsFor: 'move Backward' stamp: 'Lp 5/13/2023 11:40:17'!
goBackwardToTheWest
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'move Backward' stamp: 'Lp 5/13/2023 11:40:30' prior: 50614064!
goBackwardToTheWest
	position := 0@1! !

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:40:32'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:41:19'!
test10SabeRecivirUnComandoRMirandoHaciaElNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Oeste .
	
	marsRover receiveCommand:'b'.
	
	self assert: ( marsRover hasPosition: 0@1 andFacing:Oeste)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:41:31' prior: 50614077!
test10SabeRecivirUnComandoRMirandoHaciaElNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@1 andFacing:Este)
	! !

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:41:32'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:42:09' prior: 50613909!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
				direction receiveBackward.
				]
		]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:42:29' prior: 50614102!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						
						] 
				]
		]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:42:40' prior: 50614113!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						direction := Este new.
						] 
				]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:42:41'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:42:41'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:42:41'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:42:41'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:42:42'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:42:42'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:42:42'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:42:42'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:42:42'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:42:42'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:42:42'!
FAILURE!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:42:42'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:43:11' prior: 50614124!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						direction := Este new initializeWith: self.
						] 
				]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:43:12'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:43:12'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:43:12'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:43:12'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:43:12'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:43:12'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:43:12'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:43:12'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:43:12'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:43:12'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:43:12'!
FAILURE!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:43:12'!
FAILURE!

	marsRover receiveCommand:'r'.!

marsRover!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:44:10'!
test11SabeRecivirUnComandoRMirandoHaciaElNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@1 andFacing:Este)
	! !

!methodRemoval: MarsRoverTest #test10SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:44:10'!
test10SabeRecivirUnComandoRMirandoHaciaElNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@1 andFacing:Este)
	!

aDirection = Este!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:45:13' prior: 50614234!
test11SabeRecivirUnComandoRMirandoHaciaElNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Este)
	! !

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:45:14'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:45:14'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:45:14'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:45:14'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:45:14'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:45:14'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:45:14'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:45:14'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:45:14'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:45:14'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:45:14'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:45:14'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:45:21'!
test11SabeRecivirUnComandoRMirandoHaciaElEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Este)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:45:27' prior: 50614307!
test11SabeRecivirUnComandoRMirandoHaciaElEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Este .
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Sur)
	! !

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 11:45:28'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:45:42'!
test12SabeRecivirUnComandoRMirandoHaciaElEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Este .
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Sur)
	! !

!methodRemoval: MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 11:45:42'!
test11SabeRecivirUnComandoRMirandoHaciaElEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Este .
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Sur)
	!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:46:43' prior: 50614178!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						(direction is:Norte) ifTrue: [direction := Este new initializeWith: self.]
							ifFalse: [direction := Sur new initializeWith: self.]
						
						] 
				]
		]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:46:49' prior: 50614350!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						(direction is:Norte) ifTrue: [direction := Este new initializeWith: self.]
							ifFalse: [direction := Sur new initializeWith: self.]
						] 
				]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:46:50'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:46:50'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:46:50'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:46:50'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:46:50'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:46:50'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:46:50'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:46:50'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:46:50'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:46:51'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:46:51'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 11:46:51'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:47:02'!
test13SabeRecivirUnComandoRMirandoHaciaElSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Este .
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Sur)
	! !

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 11:47:03'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:47:03'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:47:03'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:47:03'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:47:03'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:47:03'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:47:03'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:47:03'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:47:03'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:47:03'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:47:03'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:47:03'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 11:47:03'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 11:47:03'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:47:13' prior: 50614423!
test13SabeRecivirUnComandoRMirandoHaciaElSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Sur .
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Oeste)
	! !

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 11:47:14'!
FAILURE!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 11:47:36'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:48:19' prior: 50614366!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						(direction is:Norte) ifTrue: [direction := Este new initializeWith: self.]
							ifFalse: [ (direction = Este) ifTrue:[ direction := Sur new initializeWith: self.]
								ifFalse:[direction := Oeste new initializeWith: self]]
						] 
				]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:48:20'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:48:20'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:48:20'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:48:20'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:48:20'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:48:20'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:48:20'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:48:20'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:48:20'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:48:21'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:48:21'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 11:48:21'!
FAILURE!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 11:48:21'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 11:48:21'!
FAILURE!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:48:41'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:48:41'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:48:41'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:48:41'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:48:41'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:48:41'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:48:41'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:48:41'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:48:41'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:48:41'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:48:41'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 11:48:41'!
FAILURE!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 11:48:41'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 11:48:42'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:49:17' prior: 50614499!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						(direction is:Norte) ifTrue: [direction := Este new initializeWith: self.]
							ifFalse: [ (direction is: Este) ifTrue:[ direction := Sur new initializeWith: self.]
								ifFalse:[direction := Oeste new initializeWith: self]]
						] 
				]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:49:18'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:49:18'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:49:18'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:49:18'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:49:18'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:49:18'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:49:18'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:49:18'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:49:18'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:49:18'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:49:18'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 11:49:18'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 11:49:18'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:49:25'!
test14SabeRecivirUnComandoRMirandoHaciaElSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Sur .
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Oeste)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:49:34'!
test14SabeRecivirUnComandoRMirandoHaciaElOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Sur .
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Oeste)
	! !

!methodRemoval: MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 11:49:34'!
test14SabeRecivirUnComandoRMirandoHaciaElSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Sur .
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Oeste)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:49:40' prior: 50614688!
test14SabeRecivirUnComandoRMirandoHaciaElOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Oeste .
	
	marsRover receiveCommand:'r'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Norte)
	! !

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 11:49:41'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:50:23' prior: 50614615!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						(direction is:Norte) ifTrue: [direction := Este new initializeWith: self.]
							ifFalse: [ (direction is: Este) ifTrue:[ direction := Sur new initializeWith: self.]
								ifFalse:[ (direction is:Sur) ifTrue: [direction := Oeste new initializeWith: self] 
									ifFalse:[direction := Norte new initializeWith: self] ]]
						] 
				]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:50:24'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:50:24'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:50:24'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:50:24'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:50:24'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:50:24'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:50:24'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:50:24'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:50:24'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:50:24'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:50:24'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 11:50:24'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 11:50:24'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 11:50:24'!
PASSED!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:51:19'!
rotateRightFromNorth

	^ direction := Este new initializeWith: self! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:51:19' prior: 50614723!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						(direction is:Norte) ifTrue: [self rotateRightFromNorth.]
							ifFalse: [ (direction is: Este) ifTrue:[ direction := Sur new initializeWith: self.]
								ifFalse:[ (direction is:Sur) ifTrue: [direction := Oeste new initializeWith: self] 
									ifFalse:[direction := Norte new initializeWith: self] ]]
						] 
				]
		]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:51:33'!
rotateRightFromEast

	^ direction := Sur new initializeWith: self! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:51:33' prior: 50614797!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						(direction is:Norte) ifTrue: [self rotateRightFromNorth.]
							ifFalse: [ (direction is: Este) ifTrue:[ self rotateRightFromEast.]
								ifFalse:[ (direction is:Sur) ifTrue: [direction := Oeste new initializeWith: self] 
									ifFalse:[direction := Norte new initializeWith: self] ]]
						] 
				]
		]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:51:46'!
rotateRigthFromSouth

	^ direction := Oeste new initializeWith: self! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:51:46' prior: 50614822!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						(direction is:Norte) ifTrue: [self rotateRightFromNorth.]
							ifFalse: [ (direction is: Este) ifTrue:[ self rotateRightFromEast.]
								ifFalse:[ (direction is:Sur) ifTrue: [self rotateRigthFromSouth] 
									ifFalse:[direction := Norte new initializeWith: self] ]]
						] 
				]
		]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:52:28'!
rotateRightFromWest

	^ direction := Norte new initializeWith: self! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:52:28' prior: 50614847!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						(direction is:Norte) ifTrue: [self rotateRightFromNorth.]
							ifFalse: [ (direction is: Este) ifTrue:[ self rotateRightFromEast.]
								ifFalse:[ (direction is:Sur) ifTrue: [self rotateRigthFromSouth] 
									ifFalse:[self rotateRightFromWest] ]]
						] 
				]
		]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:52:44' prior: 50614871!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						direction receiveRight
						] 
				]
		]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:52:47' prior: 50614890!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						direction receiveRight.
						] 
				]
		]! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:52:56'!
receiveRight! !
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:53:04' prior: 50614914!
receiveRight
	self subclassResponsibility ! !
!Este methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:53:33' overrides: 50614918!
receiveRight
	marsRover rotateRightFromEast .! !
!Este methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:53:36' prior: 50614923 overrides: 50614918!
receiveRight
	marsRover rotateRightFromEast.! !
!Norte methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:53:46' overrides: 50614918!
receiveRight
	marsRover rotateRightFromNorth .! !
!Oeste methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:54:03' overrides: 50614918!
receiveRight
	marsRover rotateRightFromWest.! !
!Sur methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:54:22' overrides: 50614918!
receiveRight
	marsRover rotateRigthFromSouth .! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:54:23'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:54:23'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:54:23'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:54:23'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:54:23'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:54:23'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:54:23'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:54:24'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:54:24'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:54:24'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:54:24'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 11:54:24'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 11:54:24'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 11:54:24'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:55:07'!
test15SabeRecivirUnComandoLMirandoHaciaElNorte

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Oeste)
	! !

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:55:09'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:56:39' prior: 50614902!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						aListOfCommands  = 'r' ifTrue: [
							direction receiveRight.
							]
						ifFalse:[
								
							]
						] 
				]
		]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:57:05' prior: 50615010!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						aListOfCommands  = 'r' ifTrue: [
							direction receiveRight.
							]
						ifFalse:[
								direction := Oeste new initializeWith: self.
							]
						] 
				]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:57:06'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:57:06'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:57:06'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:57:06'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:57:06'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:57:06'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:57:06'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:57:06'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:57:06'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:57:06'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:57:06'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 11:57:06'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 11:57:06'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 11:57:06'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:57:06'!
PASSED!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:58:03'!
rotateLeftFromTheNorth

	^ Oeste new initializeWith: self! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 11:58:03' prior: 50615025!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						aListOfCommands  = 'r' ifTrue: [
							direction receiveRight.
							]
						ifFalse:[
								direction := self rotateLeftFromTheNorth.
							]
						] 
				]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 11:58:06'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 11:58:06'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 11:58:06'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 11:58:06'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 11:58:06'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 11:58:06'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 11:58:07'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 11:58:07'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 11:58:07'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 11:58:07'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:58:07'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 11:58:07'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 11:58:07'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 11:58:07'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 11:58:07'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 11:59:02'!
test16SabeRecivirUnComandoLMirandoHaciaElEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Este .
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Norte)
	! !

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 11:59:03'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:00:13' prior: 50615098!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						aListOfCommands  = 'r' ifTrue: [
							direction receiveRight.
							]
						ifFalse:[
								(direction is:Norte) ifTrue:[direction := self rotateLeftFromTheNorth.]
								ifFalse: [direction := Norte new initializeWith: self]
								
								
							]
						] 
				]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 12:00:14'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 12:00:14'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:00:14'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 12:00:14'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 12:00:14'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 12:00:14'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 12:00:14'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 12:00:14'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 12:00:14'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 12:00:15'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:00:15'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:00:15'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:00:15'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:00:15'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:00:15'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:00:15'!
PASSED!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:01:01'!
rotateLeftFromTheEast

	^ Norte new initializeWith: self! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:01:01' prior: 50615180!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						aListOfCommands  = 'r' ifTrue: [
							direction receiveRight.
							]
						ifFalse:[
								(direction is:Norte) ifTrue:[direction := self rotateLeftFromTheNorth.]
								ifFalse: [direction := self rotateLeftFromTheEast]
								
								
							]
						] 
				]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 12:01:04'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 12:01:04'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:01:04'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 12:01:04'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 12:01:04'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 12:01:04'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 12:01:04'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 12:01:04'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 12:01:04'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 12:01:04'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:01:04'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:01:04'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:01:04'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:01:04'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:01:04'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:01:04'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:01:13'!
test17SabeRecivirUnComandoLMirandoHaciaElEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Este .
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Norte)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:01:22'!
test17SabeRecivirUnComandoLMirandoHaciaElSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Este .
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Norte)
	! !

!methodRemoval: MarsRoverTest #test17SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:01:22'!
test17SabeRecivirUnComandoLMirandoHaciaElEste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Este .
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Norte)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:01:32' prior: 50615345!
test17SabeRecivirUnComandoLMirandoHaciaElSur

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Sur .
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Este)
	! !

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoLMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:01:34'!
FAILURE!

----SNAPSHOT----(13 May 2023 12:01:38) CuisUniversity-5706.image priorSource: 8969841!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:02:37' prior: 50615260!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						aListOfCommands  = 'r' ifTrue: [
							direction receiveRight.
							]
						ifFalse:[
								(direction is:Norte) ifTrue:[direction := self rotateLeftFromTheNorth.]
								ifFalse: [(direction is:Este) ifTrue: [direction := self rotateLeftFromTheEast] 
									ifFalse: [direction := Este new initializeWith: self]
									]
								
								
							]
						] 
				]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 12:02:38'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 12:02:38'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:02:38'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 12:02:38'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 12:02:38'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 12:02:38'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 12:02:38'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 12:02:38'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 12:02:38'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 12:02:38'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:02:38'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:02:38'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:02:38'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:02:38'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:02:39'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:02:39'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoLMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:02:39'!
PASSED!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:03:03'!
rotateLeftFromTheSouth

	^ Este new initializeWith: self! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:03:03' prior: 50615382!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						aListOfCommands  = 'r' ifTrue: [
							direction receiveRight.
							]
						ifFalse:[
								(direction is:Norte) ifTrue:[direction := self rotateLeftFromTheNorth.]
								ifFalse: [(direction is:Este) ifTrue: [direction := self rotateLeftFromTheEast] 
									ifFalse: [direction := self rotateLeftFromTheSouth]
									]
								
								
							]
						] 
				]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoLMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:03:07'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:03:26'!
test18SabeRecivirUnComandoLMirandoHaciaElOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Sur .
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Este)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:03:32' prior: 50615550!
test18SabeRecivirUnComandoLMirandoHaciaElOeste

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Oeste .
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Sur)
	! !

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoLMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:03:33'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:04:28' prior: 50615468!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						aListOfCommands  = 'r' ifTrue: [
							direction receiveRight.
							]
						ifFalse:[
								(direction is:Norte) ifTrue:[direction := self rotateLeftFromTheNorth.]
								ifFalse: [(direction is:Este) ifTrue: [direction := self rotateLeftFromTheEast] 
									ifFalse: [ (direction is:Sur) ifTrue: [direction := self rotateLeftFromTheSouth]
										 ifFalse: [direction := Sur new initializeWith: self]
										]
									]
								
								
							]
						] 
				]
		]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoLMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoLMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:04:29'!
PASSED!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:04:54'!
rotateLeftFromTheWest

	^ Sur new initializeWith: self! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:04:54' prior: 50615574!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						aListOfCommands  = 'r' ifTrue: [
							direction receiveRight.
							]
						ifFalse:[
								(direction is:Norte) ifTrue:[direction := self rotateLeftFromTheNorth.]
								ifFalse: [(direction is:Este) ifTrue: [direction := self rotateLeftFromTheEast] 
									ifFalse: [ (direction is:Sur) ifTrue: [direction := self rotateLeftFromTheSouth]
										 ifFalse: [direction := self rotateLeftFromTheWest]
										]
									]
								
								
							]
						] 
				]
		]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:05:33' prior: 50615667!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						aListOfCommands  = 'r' ifTrue: [
							direction receiveRight.
							]
						ifFalse:[
								direction receiveLeft.
									]
								
								
							]
						] 
				]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 12:05:35'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 12:05:35'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:05:35'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 12:05:35'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 12:05:36'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 12:05:36'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 12:05:36'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 12:05:36'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 12:05:36'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 12:05:36'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:05:36'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:05:36'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:05:36'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:05:36'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:05:36'!
ERROR!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:05:36'!
ERROR!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoLMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:05:36'!
ERROR!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoLMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:05:36'!
ERROR!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:05:39'!
ERROR!
!Norte methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:05:49'!
receiveLeft
	self shouldBeImplemented.! !

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:05:53'!
ERROR!
!MarsRoverDirection methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:06:13'!
receiveLeft
	self subclassResponsibility ! !
!Este methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:06:36' overrides: 50615783!
receiveLeft
	marsRover rotateLeftFromTheEast .! !
!Norte methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:06:50' prior: 50615775 overrides: 50615783!
receiveLeft
	marsRover rotateLeftFromTheNorth .! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 12:06:51'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 12:06:51'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:06:51'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 12:06:51'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 12:06:51'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 12:06:51'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 12:06:51'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 12:06:51'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 12:06:51'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 12:06:51'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:06:51'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:06:52'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:06:52'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:06:52'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:06:52'!
FAILURE!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:06:52'!
FAILURE!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoLMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:06:52'!
ERROR!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoLMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:06:52'!
ERROR!
!Oeste methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:07:34' overrides: 50615783!
receiveLeft
	marsRover rotateLeftFromTheWest .! !
!Sur methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:07:44' overrides: 50615783!
receiveLeft
	marsRover rotateLeftFromTheSouth .! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 12:07:46'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 12:07:46'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:07:46'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 12:07:46'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 12:07:46'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 12:07:46'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 12:07:46'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 12:07:46'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 12:07:46'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 12:07:46'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:07:46'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:07:46'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:07:46'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:07:46'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:07:46'!
FAILURE!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:07:46'!
FAILURE!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoLMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:07:46'!
FAILURE!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoLMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:07:46'!
FAILURE!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:07:48'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:08:57' prior: 50615255!
rotateLeftFromTheEast

	direction := Norte new initializeWith: self! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:09:01' prior: 50615093!
rotateLeftFromTheNorth

	direction :=  Oeste new initializeWith: self! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:09:04' prior: 50615463!
rotateLeftFromTheSouth

	direction :=  Este new initializeWith: self! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:09:08' prior: 50615662!
rotateLeftFromTheWest

	direction :=  Sur new initializeWith: self! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 12:09:09'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 12:09:09'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:09:09'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 12:09:09'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 12:09:09'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 12:09:09'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 12:09:09'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 12:09:09'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 12:09:09'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 12:09:09'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:09:09'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:09:09'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:09:09'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:09:09'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:09:09'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:09:09'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoLMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:09:10'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoLMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:09:10'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:10:17'!
test19SabeRecivirDosComandosDiferentes

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Oeste .
	
	marsRover receiveCommand:'l'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Sur)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:10:23' prior: 50616020!
test19SabeRecivirDosComandosDiferentes

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Oeste .
	
	marsRover receiveCommand:'lf'.
	
	self assert: ( marsRover hasPosition: 0@0 andFacing:Sur)
	! !

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosDiferentes stamp: 'Lp 5/13/2023 12:10:23'!
PASSED!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 12:10:23'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 12:10:23'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoLMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoLMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosDiferentes stamp: 'Lp 5/13/2023 12:10:24'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:10:34' prior: 50616030!
test19SabeRecivirDosComandosDiferentes

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Oeste .
	
	marsRover receiveCommand:'lf'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:Sur)
	! !

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosDiferentes stamp: 'Lp 5/13/2023 12:10:35'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:12:02' prior: 50615693!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						aListOfCommands  = 'r' ifTrue: [
							direction receiveRight.
							]
						ifFalse:[
								direction receiveLeft.
									]
							]
						] 
				]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:12:40' prior: 50616123!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		
		aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						aListOfCommands  = 'r' ifTrue: [
							direction receiveRight.
							]
						ifFalse:[
								direction receiveLeft.
									]
							]
						] 
				]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:12:45'!
m1: aListOfCommands

	^ aListOfCommands = 'f' ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  ='b' ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						aListOfCommands  = 'r' ifTrue: [
							direction receiveRight.
							]
						ifFalse:[
								direction receiveLeft.
									]
							]
						]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:12:46' prior: 50616138!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		
		self m1: aListOfCommands 
				]! !
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:14:10' prior: 50616167!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		self m1: (aListOfCommands at:1). 
			aListOfCommands size = 2 ifTrue:[
				self m1: (aListOfCommands at:2)
				] 
			]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 12:14:11'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 12:14:11'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:14:11'!
FAILURE!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 12:14:11'!
FAILURE!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 12:14:11'!
FAILURE!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 12:14:11'!
FAILURE!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 12:14:11'!
FAILURE!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 12:14:11'!
FAILURE!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 12:14:11'!
FAILURE!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 12:14:11'!
FAILURE!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:14:11'!
FAILURE!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:14:11'!
FAILURE!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:14:11'!
FAILURE!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:14:11'!
FAILURE!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:14:11'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:14:11'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoLMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:14:11'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoLMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:14:12'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosDiferentes stamp: 'Lp 5/13/2023 12:14:12'!
FAILURE!

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 12:14:29'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 12:14:29'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:14:30'!
FAILURE!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 12:14:30'!
FAILURE!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 12:14:30'!
FAILURE!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 12:14:30'!
FAILURE!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 12:14:30'!
FAILURE!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 12:14:30'!
FAILURE!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 12:14:30'!
FAILURE!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 12:14:30'!
FAILURE!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:14:30'!
FAILURE!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:14:30'!
FAILURE!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:14:30'!
FAILURE!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:14:30'!
FAILURE!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:14:30'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:14:30'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoLMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:14:30'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoLMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:14:30'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosDiferentes stamp: 'Lp 5/13/2023 12:14:30'!
FAILURE!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:14:33'!
FAILURE!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:15:37'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:16:19' prior: 50616153!
m1: aListOfCommands

	^ aListOfCommands = $f ifTrue: [
			direction  receiveFoward ]
			ifFalse: [
				aListOfCommands  = $b ifTrue: [
					direction receiveBackward
					]
					ifFalse: [
						aListOfCommands  = $r ifTrue: [
							direction receiveRight.
							]
						ifFalse:[
								direction receiveLeft.
									]
							]
						]! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoLMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoLMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosDiferentes stamp: 'Lp 5/13/2023 12:16:31'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:16:46'!
test19SabeRecivirVariosComandosDiferentes

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Oeste .
	
	marsRover receiveCommand:'lf'.
	
	self assert: ( marsRover hasPosition: -1@0 andFacing:Sur)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:17:29' prior: 50616402!
test19SabeRecivirVariosComandosDiferentes

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'lffrllb'.
	
	self assert: ( marsRover hasPosition: 1@-2 andFacing:Sur)
	! !

!testRun: #MarsRoverTest #test19SabeRecivirVariosComandosDiferentes stamp: 'Lp 5/13/2023 12:17:31'!
FAILURE!
!MarsRover methodsFor: 'command' stamp: 'Lp 5/13/2023 12:18:40' prior: 50616173!
receiveCommand: aListOfCommands
	aListOfCommands isEmpty ifFalse:[
		aListOfCommands do:[:command| self m1:command]
		
		"self m1: (aListOfCommands at:1). 
			aListOfCommands size = 2 ifTrue:[
				self m1: (aListOfCommands at:2)"
				] ! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoLMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoLMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosDiferentes stamp: 'Lp 5/13/2023 12:18:41'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirVariosComandosDiferentes stamp: 'Lp 5/13/2023 12:18:41'!
FAILURE!

!testRun: #MarsRoverTest #test19SabeRecivirVariosComandosDiferentes stamp: 'Lp 5/13/2023 12:18:41'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:21:03'!
test20SabeRecivirVariosComandosDiferentes

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'lffrllb'.
	
	self assert: ( marsRover hasPosition: 1@-2 andFacing:Sur)
	! !

!methodRemoval: MarsRoverTest #test19SabeRecivirVariosComandosDiferentes stamp: 'Lp 5/13/2023 12:21:04'!
test19SabeRecivirVariosComandosDiferentes

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'lffrllb'.
	
	self assert: ( marsRover hasPosition: 1@-2 andFacing:Sur)
	!

----SNAPSHOT----(13 May 2023 12:21:52) CuisUniversity-5706.image priorSource: 9079307!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:22:44' prior: 50616508!
test20SabeRecivirVariosComandosDiferentes

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'ffff'.
	
	self assert: ( marsRover hasPosition: 1@-2 andFacing:Sur)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:22:51' prior: 50616532!
test20SabeRecivirVariosComandosDiferentes

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'ffff'.
	
	self assert: ( marsRover hasPosition: 1@-2 andFacing:Norte)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'Lp 5/13/2023 12:23:00' prior: 50616542!
test20SabeRecivirVariosComandosDiferentes

	| marsRover |
	marsRover := MarsRover new initializeIn: 0@0 facing:Norte .
	
	marsRover receiveCommand:'ffff'.
	
	self assert: ( marsRover hasPosition: 4@0 andFacing:Norte)
	! !

!testRun: #MarsRoverTest #test20SabeRecivirVariosComandosDiferentes stamp: 'Lp 5/13/2023 12:23:01'!
FAILURE!
!MarsRover methodsFor: 'move Foward' stamp: 'Lp 5/13/2023 12:23:45' prior: 50613296!
goFowardToTheEast
	position:= position +(0@1)! !
!MarsRover methodsFor: 'move Foward' stamp: 'Lp 5/13/2023 12:23:54' prior: 50613285!
goFowardToTheNorth
	position:= position +(1@0)! !
!MarsRover methodsFor: 'move Foward' stamp: 'Lp 5/13/2023 12:24:03' prior: 50613483!
goFowardToTheSouth
	position:= position +(-1@0)! !
!MarsRover methodsFor: 'move Foward' stamp: 'Lp 5/13/2023 12:24:11' prior: 50613378!
goFowardToTheWest
	position:= position +(0@-1)! !
!MarsRover methodsFor: 'move Backward' stamp: 'Lp 5/13/2023 12:24:23' prior: 50613990!
goBackwardToTheEast
	position := position + (0@-1)! !
!MarsRover methodsFor: 'move Backward' stamp: 'Lp 5/13/2023 12:24:30' prior: 50614037!
goBackwardToTheNorth
	position := position +(-1@0)! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoLMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoLMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:24:31'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosDiferentes stamp: 'Lp 5/13/2023 12:24:32'!
PASSED!

!testRun: #MarsRoverTest #test20SabeRecivirVariosComandosDiferentes stamp: 'Lp 5/13/2023 12:24:32'!
PASSED!
!MarsRover methodsFor: 'move Backward' stamp: 'Lp 5/13/2023 12:24:40' prior: 50614053!
goBackwardToTheSouth
	position := position +(1@0)! !
!MarsRover methodsFor: 'move Backward' stamp: 'Lp 5/13/2023 12:24:47' prior: 50614069!
goBackwardToTheWest
	position := position +(0@1)! !

!testRun: #MarsRoverTest #test01AlIniciarElRobotSabeDondeEsta stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test02SabeRecivirInstruccionVacia stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test03SabeRecivirUnComandoFAvanzandoAlEste stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test04SabeRecivirUnComandoFAvanzandoAlSur stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test05SabeRecivirUnComandoFAvanzandoAlOeste stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test06SabeRecivirUnComandoFAvanzandoAlNorte stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test07SabeRecivirUnComandoBRetrocediendoAlEste stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test08SabeRecivirUnComandoBRetrocediendoAlNorte stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test09SabeRecivirUnComandoBRetrocediendoAlSur stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test10SabeRecivirUnComandoBRetrocediendoAlOeste stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test11SabeRecivirUnComandoRMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test12SabeRecivirUnComandoRMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test13SabeRecivirUnComandoRMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test14SabeRecivirUnComandoRMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test15SabeRecivirUnComandoLMirandoHaciaElNorte stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test16SabeRecivirUnComandoLMirandoHaciaElEste stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test17SabeRecivirUnComandoLMirandoHaciaElSur stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test18SabeRecivirUnComandoLMirandoHaciaElOeste stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test19SabeRecivirDosComandosDiferentes stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

!testRun: #MarsRoverTest #test20SabeRecivirVariosComandosDiferentes stamp: 'Lp 5/13/2023 12:24:48'!
PASSED!

----SNAPSHOT----(13 May 2023 12:24:55) CuisUniversity-5706.image priorSource: 9116071!