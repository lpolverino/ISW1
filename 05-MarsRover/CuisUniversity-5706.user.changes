

----QUIT----(20 March 2023 11:15:29) CuisUniversity-5706.image priorSource: 4313282!

----STARTUP---- (20 March 2023 11:15:29) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5706.image!


----QUIT----(20 March 2023 11:15:30) CuisUniversity-5706.image priorSource: 8712809!

----STARTUP---- (15 May 2023 11:32:55) as /media/lorenz/64711b0a-ff0f-409d-96bb-a97d9ef48761/matienzos/isw1/imagen-cuis/primerParcial/linux64/CuisUniversity-5706.image!


TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #MarsRoverTest category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 11:35:12'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #MarsRover category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 11:37:31'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!MarsRoverTest methodsFor: 'no messages' stamp: 'lp 5/15/2023 11:37:43'!
test00MarsRoverIsInINicialPositionWhenDeployed

	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing:#North.
	self assert: (marsRover isInPosition: 0@0 andFacing: #North).! !

!classDefinition: 'MarsRover class' category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 11:38:38'!
MarsRover class
	instanceVariableNames: 'position'!

!classDefinition: 'MarsRover class' category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 11:38:39'!
MarsRover class
	instanceVariableNames: 'position direction'!
!MarsRover class methodsFor: 'no messages' stamp: 'lp 5/15/2023 11:38:36'!
inPosition: aPosition facing:aDirection
	position:= aPosition .
	direction := aDirection .! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:39:19' prior: 50603978!
inPosition: aPosition facing:aDirection
	self new deployIn: aPosition andFacing:aDirection .! !

!classDefinition: #MarsRover category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 11:40:01'!
Object subclass: #MarsRover
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #MarsRover category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 11:40:02'!
Object subclass: #MarsRover
	instanceVariableNames: 'position direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!MarsRover methodsFor: 'no messages' stamp: 'lp 5/15/2023 11:40:00'!
deployIn: aPosition andFacing:aDirection
	position:= aPosition.
	direction := aDirection .! !

MarsRover class
	instanceVariableNames: ''!

!classDefinition: 'MarsRover class' category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 11:40:19'!
MarsRover class
	instanceVariableNames: ''!

!testRun: #MarsRoverTest #test00MarsRoverIsInINicialPositionWhenDeployed stamp: 'lp 5/15/2023 11:40:40'!
ERROR!

!testRun: #MarsRoverTest #test00MarsRoverIsInINicialPositionWhenDeployed stamp: 'lp 5/15/2023 11:40:40'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:41:05'!
isInPosition: aPosition andFacing: aDirection
^true! !

!testRun: #MarsRoverTest #test00MarsRoverIsInINicialPositionWhenDeployed stamp: 'lp 5/15/2023 11:41:06'!
ERROR!

!testRun: #MarsRoverTest #test00MarsRoverIsInINicialPositionWhenDeployed stamp: 'lp 5/15/2023 11:41:06'!
ERROR!

!testRun: #MarsRoverTest #test00MarsRoverIsInINicialPositionWhenDeployed stamp: 'lp 5/15/2023 11:41:27'!
ERROR!

!testRun: #MarsRoverTest #test00MarsRoverIsInINicialPositionWhenDeployed stamp: 'lp 5/15/2023 11:41:27'!
ERROR!
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:41:48' prior: 50603985!
inPosition: aPosition facing:aDirection
	^self new deployIn: aPosition andFacing:aDirection .! !

!testRun: #MarsRoverTest #test00MarsRoverIsInINicialPositionWhenDeployed stamp: 'lp 5/15/2023 11:41:49'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:43:05'!
test00MarsRoverInitialDIrectionIsNorthWhenDeployedFacingNorth

	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing:#North.
	self assert: (marsRover isInPosition: 0@0 andFacing: #North).! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:43:12' prior: 50604054!
test00MarsRoverInitialDIrectionIsNorthWhenDeployedFacingNorth

	|marsRover|
	
	marsRover := MarsRover inPosition: 1@0 facing:#North.
	self assert: (marsRover isInPosition: 1@0 andFacing: #North).! !

!testRun: #MarsRoverTest #test00MarsRoverInitialDIrectionIsNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:43:13'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverInitialDIrectionIsNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:43:13'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverIsInINicialPositionWhenDeployed stamp: 'lp 5/15/2023 11:43:13'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:43:20'!
test01MarsRoverInitialDIrectionIsNorthWhenDeployedFacingNorth

	|marsRover|
	
	marsRover := MarsRover inPosition: 1@0 facing:#North.
	self assert: (marsRover isInPosition: 1@0 andFacing: #North).! !

!methodRemoval: MarsRoverTest #test00MarsRoverIsInINicialPositionWhenDeployed stamp: 'lp 5/15/2023 11:43:23'!
test00MarsRoverIsInINicialPositionWhenDeployed

	|marsRover|
	
	marsRover := MarsRover inPosition: 0@0 facing:#North.
	self assert: (marsRover isInPosition: 0@0 andFacing: #North).!

!methodRemoval: MarsRoverTest #test00MarsRoverInitialDIrectionIsNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:43:39'!
test00MarsRoverInitialDIrectionIsNorthWhenDeployedFacingNorth

	|marsRover|
	
	marsRover := MarsRover inPosition: 1@0 facing:#North.
	self assert: (marsRover isInPosition: 1@0 andFacing: #North).!

!methodRemoval: MarsRoverTest #test01MarsRoverInitialDIrectionIsNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:43:41'!
test01MarsRoverInitialDIrectionIsNorthWhenDeployedFacingNorth

	|marsRover|
	
	marsRover := MarsRover inPosition: 1@0 facing:#North.
	self assert: (marsRover isInPosition: 1@0 andFacing: #North).!
!MarsRoverTest methodsFor: 'no messages' stamp: 'lp 5/15/2023 11:44:39'!
test00MarsRoverIsInInitialPositionWhenDeployed

	| marsRover |
	marsRover = 	MarsRover inPosition: 0@0 facing:#North ! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:45:11' prior: 50604123!
test00MarsRoverIsInInitialPositionWhenDeployed

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 0@0 facing:#North .
	self assert:(marsRover isInPosition: 0@0 andFacing:#North )! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:45:20' prior: 50604025!
isInPosition: aPosition andFacing: aDirection
	^true! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:45:31' prior: 50604139!
isInPosition: aPosition andFacing: aDirection
	^aPosition = 0@0! !

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:45:32'!
ERROR!

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:45:32'!
ERROR!

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:45:43'!
ERROR!

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:45:43'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:45:54' prior: 50604144!
isInPosition: aPosition andFacing: aDirection
	^aPosition = (0@0)! !

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:45:55'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:47:27'!
test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 0@0 facing:#North .
	self assert:(marsRover isInPosition: 0@0 andFacing:#North )! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:47:30'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:47:30'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:47:30'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:47:36' prior: 50604173!
test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing:#North .
	self assert:(marsRover isInPosition: 1@0 andFacing:#North )! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:47:36'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:48:32' prior: 50604164!
isInPosition: aPosition andFacing: aDirection
	^ (aPosition = (0@0)) and: aDirection =#North! !

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:48:33'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:48:33'!
FAILURE!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:48:33'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:48:43' prior: 50604207!
isInPosition: aPosition andFacing: aDirection
	^ (aPosition = aPosition ) and: aDirection =#North! !

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:48:43'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:48:43'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:48:48' prior: 50604225!
isInPosition: aPosition andFacing: aDirection
	^ (aPosition = position ) and: aDirection =#North! !

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:48:49'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:48:49'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:49:19'!
createMarsRoverFacingNorth

	^ MarsRover inPosition: 1@0 facing:#North! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:49:19' prior: 50604194!
test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth

	| marsRover |
	
	marsRover := 	self createMarsRoverFacingNorth .
	self assert:(marsRover isInPosition: 1@0 andFacing:#North )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:49:31' prior: 50604130!
test00MarsRoverIsInInitialPositionWhenDeployed

	| marsRover |
	
	marsRover := self createMarsRoverFacingNorth .
	self assert:(marsRover isInPosition: 0@0 andFacing:#North )! !

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:49:32'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:49:43' prior: 50604259!
test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth

	| marsRover |
	
	marsRover := 	self createMarsRoverFacingNorth.
	self assert:(marsRover isInPosition: 1@0 andFacing:#North )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:49:48' prior: 50604253!
createMarsRoverFacingNorth

	^ MarsRover inPosition: 0@0 facing:#North! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:49:19' prior: 50604281!
test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth

	| marsRover |
	
	marsRover := 	self createMarsRoverFacingNorth .
	self assert:(marsRover isInPosition: 1@0 andFacing:#North )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:47:36' prior: 50604296!
test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing:#North .
	self assert:(marsRover isInPosition: 1@0 andFacing:#North )! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:50:11'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:50:11'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:50:11'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:50:35'!
test02MarsRoverDirectionIsEastWhenDeployedFacingEast

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing:#North .
	self assert:(marsRover isInPosition: 1@0 andFacing:#North )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:50:47' prior: 50604325!
test02MarsRoverDirectionIsEastWhenDeployedFacingEast

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing:#East.
	self assert:(marsRover isInPosition: 1@0 andFacing:#East )! !

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 11:50:48'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'lp 5/15/2023 11:51:42' prior: 50604239!
isInPosition: aPosition andFacing: aDirection
	^ (aPosition = position ) and: (aDirection =#North or: aDirection =#East)! !

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:51:43'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:51:43'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 11:51:43'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:52:16'!
test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing:#East.
	self assert:(marsRover isInPosition: 1@0 andFacing:#East )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:52:26' prior: 50604366!
test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing:#South.
	self assert:(marsRover isInPosition: 1@0 andFacing:#South )! !

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 11:52:27'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'lp 5/15/2023 11:52:48' prior: 50604348!
isInPosition: aPosition andFacing: aDirection
	^ (aPosition = position ) and: (aDirection =#North or: aDirection =#East or:aDirection =#South)! !

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:52:49'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:52:49'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 11:52:49'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 11:52:49'!
PASSED!
!MarsRover methodsFor: 'testing' stamp: 'lp 5/15/2023 11:52:55' prior: 50604388!
isInPosition: aPosition andFacing: aDirection
	^ (aPosition = position ) and: (aDirection =direction)! !

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:52:55'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:52:55'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 11:52:55'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 11:52:55'!
PASSED!
!MarsRover methodsFor: 'testing' stamp: 'lp 5/15/2023 11:52:48' prior: 50604411!
isInPosition: aPosition andFacing: aDirection
	^ (aPosition = position ) and: (aDirection =#North or: aDirection =#East or:aDirection =#South)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:53:44'!
test04MarsRoverDirectionIsWestWhenDeployedFacingWest

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing:#South.
	self assert:(marsRover isInPosition: 1@0 andFacing:#South )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:53:49' prior: 50604440!
test04MarsRoverDirectionIsWestWhenDeployedFacingWest

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing:#West.
	self assert:(marsRover isInPosition: 1@0 andFacing:#South )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 11:53:51' prior: 50604449!
test04MarsRoverDirectionIsWestWhenDeployedFacingWest

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing:#West.
	self assert:(marsRover isInPosition: 1@0 andFacing:#West )! !

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 11:53:52'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'lp 5/15/2023 11:54:03' prior: 50604432!
isInPosition: aPosition andFacing: aDirection
	^ (aPosition = position ) and: (aDirection =direction)! !

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:54:03'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:54:03'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 11:54:03'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 11:54:03'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 11:54:03'!
PASSED!
!MarsRoverTest methodsFor: 'testing empty instruction' stamp: 'lp 5/15/2023 11:56:56'!
test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing:#West.
	self assert:(marsRover isInPosition: 1@0 andFacing:#West )! !
!MarsRoverTest methodsFor: 'testing empty instruction' stamp: 'lp 5/15/2023 11:57:11' prior: 50604496!
test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing:#West.
	marsRover receiveCommands :''.
	self assert:(marsRover isInPosition: 1@0 andFacing:#West )! !

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 11:57:22'!
ERROR!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 11:57:22'!
ERROR!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 11:57:38'!
receiveCommands
	self shouldBeImplemented.! !

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:57:46'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:57:46'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 11:57:46'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 11:57:46'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 11:57:46'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 11:57:46'!
ERROR!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 11:57:46'!
ERROR!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 11:57:56' prior: 50604523!
receiveCommands
	^self! !

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:57:57'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:57:57'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 11:57:57'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 11:57:57'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 11:57:57'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 11:57:57'!
ERROR!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 11:57:57'!
ERROR!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 11:58:39'!
receiveCommands: aInstructionList
	^self! !

!methodRemoval: MarsRover #receiveCommands stamp: 'lp 5/15/2023 11:58:43'!
receiveCommands
	^self!
!MarsRoverTest methodsFor: 'testing empty instruction' stamp: 'lp 5/15/2023 11:58:51' prior: 50604506!
test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing:#West.
	marsRover receiveCommands: ''.
	self assert:(marsRover isInPosition: 1@0 andFacing:#West )! !

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 11:58:51'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:58:51'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 11:58:51'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 11:58:51'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 11:58:51'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 11:58:51'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 11:58:51'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 11:59:27' prior: 50604268!
test00MarsRoverIsInInitialPositionWhenDeployed

	| marsRover |
	
	marsRover := self createMarsRoverFacingNorth .
	self assert:(marsRover isInPosition: 0@0 andFacing:#North )! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 11:59:49' prior: 50604629!
test00MarsRoverIsInInitialPositionWhenDeployed

	| marsRover |
	
	marsRover := self createMarsRoverFacingNorth.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 0@0 andFacing:#North )! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 11:59:52' prior: 50604638!
test00MarsRoverIsInInitialPositionWhenDeployed

	| marsRover |
	
	marsRover := self createMarsRoverFacingNorth.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 1@0 andFacing:#North )! !

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 11:59:53'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:00:42' prior: 50604584!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		position:=1@0
		]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:00:43' prior: 50604661!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		position:=1@0.
		]! !

!testRun: #MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 12:00:44'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:00:44'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:00:44'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:00:44'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:00:44'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:00:44'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 12:01:01'!
test06MarsRoverIsInInitialPositionWhenDeployed

	| marsRover |
	
	marsRover := self createMarsRoverFacingNorth.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 1@0 andFacing:#North )! !

!methodRemoval: MarsRoverTest #test00MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 12:01:01'!
test00MarsRoverIsInInitialPositionWhenDeployed

	| marsRover |
	
	marsRover := self createMarsRoverFacingNorth.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 1@0 andFacing:#North )!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 12:01:51'!
test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self createMarsRoverFacingNorth.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 1@0 andFacing:#North )! !

!methodRemoval: MarsRoverTest #test06MarsRoverIsInInitialPositionWhenDeployed stamp: 'lp 5/15/2023 12:01:51'!
test06MarsRoverIsInInitialPositionWhenDeployed

	| marsRover |
	
	marsRover := self createMarsRoverFacingNorth.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 1@0 andFacing:#North )!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 12:02:09'!
test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self createMarsRoverFacingNorth.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 1@0 andFacing:#North )! !
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:02:44' prior: 50604335!
test02MarsRoverDirectionIsEastWhenDeployedFacingEast

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 0@0 facing:#East.
	self assert:(marsRover isInPosition: 1@0 andFacing:#East )! !
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:02:48' prior: 50604375!
test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 0@0 facing:#South.
	self assert:(marsRover isInPosition: 1@0 andFacing:#South )! !
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:02:50' prior: 50604458!
test04MarsRoverDirectionIsWestWhenDeployedFacingWest

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 0@0 facing:#West.
	self assert:(marsRover isInPosition: 1@0 andFacing:#West )! !
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:03:16'!
deployMarsRoverInTheCenterFacingSOuth

	^ MarsRover inPosition: 0@0 facing:#South! !
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:03:16' prior: 50604754!
test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth

	| marsRover |
	
	marsRover := 	self deployMarsRoverInTheCenterFacingSOuth.
	self assert:(marsRover isInPosition: 1@0 andFacing:#South )! !
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:03:34'!
deployMarsRoverInTheCenterFacingEast

	^ MarsRover inPosition: 0@0 facing:#East! !
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:03:34' prior: 50604744!
test02MarsRoverDirectionIsEastWhenDeployedFacingEast

	| marsRover |
	
	marsRover := 	self deployMarsRoverInTheCenterFacingEast.
	self assert:(marsRover isInPosition: 1@0 andFacing:#East )! !
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:04:02'!
deployMarsRoverInTheCenterFacingWest

	^ MarsRover inPosition: 0@0 facing:#West! !
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:04:02' prior: 50604764!
test04MarsRoverDirectionIsWestWhenDeployedFacingWest

	| marsRover |
	
	marsRover := 	self deployMarsRoverInTheCenterFacingWest.
	self assert:(marsRover isInPosition: 1@0 andFacing:#West )! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:04:13'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:04:13'!
FAILURE!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:04:13'!
FAILURE!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:04:13'!
FAILURE!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:04:13'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:04:13'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:04:13'!
PASSED!
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:04:18' prior: 50604794!
test02MarsRoverDirectionIsEastWhenDeployedFacingEast

	| marsRover |
	
	marsRover := 	self deployMarsRoverInTheCenterFacingEast.
	self assert:(marsRover isInPosition: 0@0 andFacing:#East )! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:04:19'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:04:19'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:04:19'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:04:19'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:04:19'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:04:19'!
FAILURE!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:04:19'!
FAILURE!
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:04:22' prior: 50604779!
test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth

	| marsRover |
	
	marsRover := 	self deployMarsRoverInTheCenterFacingSOuth.
	self assert:(marsRover isInPosition: 0@0 andFacing:#South )! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:04:24'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:04:24'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:04:24'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:04:24'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:04:24'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:04:24'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:04:24'!
FAILURE!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:04:24'!
FAILURE!
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:04:29' prior: 50604809!
test04MarsRoverDirectionIsWestWhenDeployedFacingWest

	| marsRover |
	
	marsRover := 	self deployMarsRoverInTheCenterFacingWest.
	self assert:(marsRover isInPosition: 0@0 andFacing:#West )! !

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:04:30'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:04:30'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:04:30'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:04:30'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:04:30'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:04:30'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:04:30'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:04:30'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 12:04:53' prior: 50604734!
test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self createMarsRoverFacingNorth .
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 1@0 andFacing:#South )! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 12:04:57' prior: 50604963!
test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self createMarsRoverFacingNorth .
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: -1@0 andFacing:#South )! !

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:04:58'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:06:02' prior: 50604667!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		direction = #North ifTrue:[
		position:=1@0.] ifFalse:[ position:= -1@0]
		]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:06:03'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:06:03'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:06:03'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:06:03'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:06:03'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:06:03'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:06:03'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:06:03'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:06:37' prior: 50604987!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		direction = #North ifTrue:[
			position:=1@0.
			]
			ifFalse:[ position:= -1@0]
		]! !

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:06:43'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:06:43'!
FAILURE!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 12:07:41' prior: 50604973!
test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self  deployMarsRoverInTheCenterFacingSOuth.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: -1@0 andFacing:#South )! !

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:07:42'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:07:42'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:07:42'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:07:42'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:07:42'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:07:42'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:07:42'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:07:42'!
PASSED!
!MarsRoverTest methodsFor: 'set-up creations' stamp: 'lp 5/15/2023 12:07:58'!
createMarsRoverInTheCenterFacingEast

	^ MarsRover inPosition: 0@0 facing:#East! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:07:58' prior: 50604846!
test02MarsRoverDirectionIsEastWhenDeployedFacingEast

	| marsRover |
	
	marsRover := 	self createMarsRoverInTheCenterFacingEast.
	self assert:(marsRover isInPosition: 0@0 andFacing:#East )! !

!methodRemoval: MarsRoverTest #deployMarsRoverInTheCenterFacingEast stamp: 'lp 5/15/2023 12:07:58'!
deployMarsRoverInTheCenterFacingEast

	^ MarsRover inPosition: 0@0 facing:#East!
!MarsRoverTest methodsFor: 'set-up creations' stamp: 'lp 5/15/2023 12:08:10'!
createMarsRoverInTheCenterFacingSOuth

	^ MarsRover inPosition: 0@0 facing:#South! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:08:10' prior: 50604883!
test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth

	| marsRover |
	
	marsRover := 	self createMarsRoverInTheCenterFacingSOuth.
	self assert:(marsRover isInPosition: 0@0 andFacing:#South )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:08:10' prior: 50605042!
test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingSOuth.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: -1@0 andFacing:#South )! !

!methodRemoval: MarsRoverTest #deployMarsRoverInTheCenterFacingSOuth stamp: 'lp 5/15/2023 12:08:10'!
deployMarsRoverInTheCenterFacingSOuth

	^ MarsRover inPosition: 0@0 facing:#South!
!MarsRoverTest methodsFor: 'set-up creations' stamp: 'lp 5/15/2023 12:08:20'!
createMarsRoverInTheCenterFacingWest

	^ MarsRover inPosition: 0@0 facing:#West! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:08:20' prior: 50604923!
test04MarsRoverDirectionIsWestWhenDeployedFacingWest

	| marsRover |
	
	marsRover := 	self createMarsRoverInTheCenterFacingWest.
	self assert:(marsRover isInPosition: 0@0 andFacing:#West )! !

!methodRemoval: MarsRoverTest #deployMarsRoverInTheCenterFacingWest stamp: 'lp 5/15/2023 12:08:20'!
deployMarsRoverInTheCenterFacingWest

	^ MarsRover inPosition: 0@0 facing:#West!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:08:21'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:08:21'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:08:21'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:08:21'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:08:21'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:08:21'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:08:21'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 12:08:35'!
test08MarsRovershouldMoveEastWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingSOuth.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: -1@0 andFacing:#South )! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 12:08:50' prior: 50605183!
test08MarsRovershouldMoveEastWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingEast .
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: -1@0 andFacing:#East )! !

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:08:53'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:08:53'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:08:53'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:08:53'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:08:53'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:08:53'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:08:53'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:08:53'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:08:53'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 12:08:59' prior: 50605194!
test08MarsRovershouldMoveEastWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingEast .
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 0@1 andFacing:#East )! !

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:09:00'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:09:38' prior: 50605026!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		direction = #North ifTrue:[
			position:=1@0.
			]
			ifFalse:[
				direction = #South ifTrue:[
					position:= -1@0]] 
				
		]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:10:18' prior: 50605253!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		direction = #North ifTrue:[
			position:=1@0.
			]
			ifFalse:[
				direction = #South ifTrue:[
					position:= -1@0]
				ifFalse:[
					position := 0@1
				] 
				
		]
	]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:10:19'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:10:19'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:10:19'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:10:19'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:10:19'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:10:19'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:10:19'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:10:19'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 12:10:34'!
test09MarsRovershouldMoveWestWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingEast .
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 0@1 andFacing:#East )! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 12:10:49' prior: 50605303!
test09MarsRovershouldMoveWestWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 0@1 andFacing:#West)! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 12:10:53' prior: 50605314!
test09MarsRovershouldMoveWestWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 0@-1 andFacing:#West)! !

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:10:54'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:11:51' prior: 50605262!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		direction = #North ifTrue:[
			position:=1@0.
			]
			ifFalse:[
				direction = #South ifTrue:[
					position:= -1@0]
				ifFalse:[
					direction = #East ifTrue:[
						position := 0@1
						]
					ifFalse: [
						direction = #West ifTrue:[
							position := 0@-1
							]
						]
					] 
				
		]
	]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:11:52'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:11:52'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:11:52'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:11:52'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:11:52'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:11:52'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:11:52'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:11:52'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:11:52'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:13:47' prior: 50605338!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		direction = #North ifTrue:[
			position:=1@0.
			]
			ifFalse:[
				direction = #South ifTrue:[
					position:= -1@0]
				ifFalse:[
					direction = #East ifTrue:[
						position := 0@1
						]
					ifFalse: [
						direction = #West ifTrue:[
							position := 0@-1
							]
						]
					] 
		]
	]! !

TestCase subclass: #CardinalDirections
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #CardinalDirections category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 12:19:33'!
TestCase subclass: #CardinalDirections
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

Object subclass: #CardinalDirections
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #CardinalDirections category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 12:19:39'!
Object subclass: #CardinalDirections
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

CardinalDirections subclass: #Sur
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #Sur category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 12:20:03'!
CardinalDirections subclass: #Sur
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

CardinalDirections subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #South category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 12:20:07'!
CardinalDirections subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

CardinalDirections subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #North category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 12:20:10'!
CardinalDirections subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

CardinalDirections subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #East category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 12:20:14'!
CardinalDirections subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

CardinalDirections subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #West category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 12:20:17'!
CardinalDirections subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classRemoval: #Sur stamp: 'lp 5/15/2023 12:20:21'!
CardinalDirections subclass: #Sur
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!MarsRoverTest methodsFor: 'set-up creations' stamp: 'lp 5/15/2023 12:25:11' prior: 50604290!
createMarsRoverFacingNorth

	^ MarsRover inPosition: 0@0 facing:North new! !
!MarsRoverTest methodsFor: 'set-up creations' stamp: 'lp 5/15/2023 12:25:18' prior: 50605083!
createMarsRoverInTheCenterFacingEast

	^ MarsRover inPosition: 0@0 facing:East new! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:25:19'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:25:19'!
FAILURE!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:25:19'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:25:19'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:25:19'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:25:19'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:25:19'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:25:19'!
FAILURE!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:25:19'!
PASSED!
!MarsRoverTest methodsFor: 'set-up creations' stamp: 'lp 5/15/2023 12:25:32' prior: 50605104!
createMarsRoverInTheCenterFacingSOuth

	^ MarsRover inPosition: 0@0 facing:South new! !
!MarsRoverTest methodsFor: 'set-up creations' stamp: 'lp 5/15/2023 12:25:38' prior: 50605136!
createMarsRoverInTheCenterFacingWest

	^ MarsRover inPosition: 0@0 facing:West new! !
!MarsRoverTest methodsFor: 'testing empty instruction' stamp: 'lp 5/15/2023 12:25:48' prior: 50604592!
test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing:West new.
	marsRover receiveCommands: ''.
	self assert:(marsRover isInPosition: 1@0 andFacing:#West )! !
!MarsRoverTest methodsFor: 'testing empty instruction' stamp: 'lp 5/15/2023 12:25:52' prior: 50605551!
test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing:West new.
	marsRover receiveCommands: ''.
	self assert:(marsRover isInPosition: 1@0 andFacing:West new )! !

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:25:53'!
FAILURE!
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:26:06' prior: 50604305!
test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing: North new.
	self assert:(marsRover isInPosition: 1@0 andFacing:#North )! !
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:26:10' prior: 50605577!
test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing: North new.
	self assert:(marsRover isInPosition: 1@0 andFacing:North new)! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:26:11'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'lp 5/15/2023 12:27:16' prior: 50604471!
isInPosition: aPosition andFacing: aDirection
	^ (aPosition = position ) and: (aDirection = direction)! !
!MarsRover methodsFor: 'testing' stamp: 'lp 5/15/2023 12:28:27' prior: 50605600!
isInPosition: aPosition andFacing: aDirection
	^ (aPosition = position ) and: (aDirection isKindOf: direction)! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:28:28'!
FAILURE!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:28:28'!
FAILURE!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:28:28'!
FAILURE!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:28:28'!
FAILURE!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:28:28'!
FAILURE!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:28:28'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:28:28'!
FAILURE!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:28:28'!
FAILURE!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:28:28'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'lp 5/15/2023 12:29:55' prior: 50605606!
isInPosition: aPosition andFacing: aDirection
	^ (aPosition = position ) and: (direction isKindOf: aDirection )! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:29:56'!
FAILURE!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:29:56'!
FAILURE!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:29:56'!
FAILURE!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:29:56'!
FAILURE!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:29:56'!
FAILURE!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:29:56'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:29:56'!
FAILURE!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:29:56'!
FAILURE!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:29:56'!
FAILURE!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:30:00'!
FAILURE!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:30:22'!
FAILURE!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:30:22'!
FAILURE!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:30:22'!
FAILURE!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:30:22'!
FAILURE!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:30:22'!
FAILURE!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:30:22'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:30:22'!
FAILURE!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:30:22'!
FAILURE!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:30:22'!
FAILURE!

a North!

direction isKindOf: aDirection !
!MarsRover methodsFor: 'testing' stamp: 'lp 5/15/2023 12:30:50' prior: 50605648!
isInPosition: aPosition andFacing: aDirection
	^ (aPosition = position ) and: (direction isKindOf: aDirection)! !
!MarsRover methodsFor: 'testing' stamp: 'lp 5/15/2023 12:31:17' prior: 50605730!
isInPosition: aPosition andFacing: aDirection
	^ (aPosition = position ) and: (direction = aDirection)! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:31:18'!
FAILURE!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:31:18'!
FAILURE!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:31:18'!
FAILURE!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:31:18'!
FAILURE!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:31:18'!
FAILURE!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:31:18'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:31:18'!
FAILURE!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:31:18'!
FAILURE!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:31:18'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'lp 5/15/2023 12:32:27' prior: 50605737!
isInPosition: aPosition andFacing: aDirection
	^ (aPosition = position ) and: (direction isKindOf: (aDirection))! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:32:27'!
FAILURE!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:32:27'!
FAILURE!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:32:27'!
FAILURE!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:32:27'!
FAILURE!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:32:27'!
FAILURE!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:32:27'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:32:27'!
FAILURE!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:32:27'!
FAILURE!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:32:27'!
FAILURE!
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:32:54' prior: 50605587!
test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing: North new.
	self assert:(marsRover isInPosition: 1@0 andFacing:North )! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:33:00'!
PASSED!
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:33:09' prior: 50605089!
test02MarsRoverDirectionIsEastWhenDeployedFacingEast

	| marsRover |
	
	marsRover := 	self createMarsRoverInTheCenterFacingEast.
	self assert:(marsRover isInPosition: 0@0 andFacing:East )! !
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:33:13' prior: 50605110!
test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth

	| marsRover |
	
	marsRover := 	self createMarsRoverInTheCenterFacingSOuth.
	self assert:(marsRover isInPosition: 0@0 andFacing:South )! !
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 12:33:16' prior: 50605142!
test04MarsRoverDirectionIsWestWhenDeployedFacingWest

	| marsRover |
	
	marsRover := 	self createMarsRoverInTheCenterFacingWest.
	self assert:(marsRover isInPosition: 0@0 andFacing:West )! !

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:33:17'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:33:17'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:33:17'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:33:17'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:33:17'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:33:17'!
FAILURE!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:33:17'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:33:17'!
FAILURE!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:33:17'!
FAILURE!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:33:17'!
FAILURE!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 12:33:24' prior: 50604714!
test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self createMarsRoverFacingNorth.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 1@0 andFacing:North )! !

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:33:25'!
FAILURE!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 12:33:34' prior: 50605120!
test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingSOuth.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: -1@0 andFacing:South )! !

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:33:35'!
FAILURE!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 12:33:39' prior: 50605239!
test08MarsRovershouldMoveEastWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingEast .
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 0@1 andFacing:East )! !

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:33:40'!
FAILURE!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 12:33:44' prior: 50605324!
test09MarsRovershouldMoveWestWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 0@-1 andFacing:West)! !

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:33:45'!
FAILURE!
!MarsRoverTest methodsFor: 'testing empty instruction' stamp: 'lp 5/15/2023 12:33:53' prior: 50605562!
test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing:West new.
	marsRover receiveCommands: ''.
	self assert:(marsRover isInPosition: 1@0 andFacing:West )! !

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:33:54'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:33:54'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:33:54'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:33:54'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:33:54'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:33:54'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:33:54'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:33:54'!
FAILURE!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:33:54'!
FAILURE!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:33:54'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:35:04' prior: 50605388!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		
		position := position + direction getAxis.
		
		"direction = #North ifTrue:[
			position:=1@0.
			]
			ifFalse:[
				direction = #South ifTrue:[
					position:= -1@0]
				ifFalse:[
					direction = #East ifTrue:[
						position := 0@1
						]
					ifFalse: [
						direction = #West ifTrue:[
							position := 0@-1
							]
						]
					] 
		]"
]! !
!CardinalDirections methodsFor: 'no messages' stamp: 'lp 5/15/2023 12:35:24'!
getAxis
	self subclassResponsibility ! !
!East methodsFor: 'nil' stamp: 'lp 5/15/2023 12:35:40' overrides: 50606025!
getAxis
	^ 0@1! !
!North methodsFor: 'no messages' stamp: 'lp 5/15/2023 12:35:53' overrides: 50606025!
getAxis
	^ 1@0! !
!South methodsFor: 'no messages' stamp: 'lp 5/15/2023 12:36:02' overrides: 50606025!
getAxis
	^ 0@-1! !
!West methodsFor: 'no messages' stamp: 'lp 5/15/2023 12:36:13' overrides: 50606025!
getAxis
	^ 0@-1! !
!South methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:36:21' prior: 50606037 overrides: 50606025!
getAxis
	^ -1@0! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:36:22'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:36:22'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:36:22'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:36:22'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:36:22'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:36:22'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:36:22'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:36:22'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:36:22'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:36:41' prior: 50606009!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		position := position + direction getAxis.
]! !
!MarsRoverTest methodsFor: 'testing backward' stamp: 'lp 5/15/2023 12:37:40'!
test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth

	| marsRover |
	
	marsRover := self createMarsRoverFacingNorth.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 1@0 andFacing:North )! !
!MarsRoverTest methodsFor: 'testing backward' stamp: 'lp 5/15/2023 12:37:44' prior: 50606090!
test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth

	| marsRover |
	
	marsRover := self createMarsRoverFacingNorth.
	marsRover receiveCommands: 'b'.
	self assert:(marsRover isInPosition: 1@0 andFacing:North )! !
!MarsRoverTest methodsFor: 'testing backward' stamp: 'lp 5/15/2023 12:37:49' prior: 50606101!
test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth

	| marsRover |
	
	marsRover := self createMarsRoverFacingNorth.
	marsRover receiveCommands: 'b'.
	self assert:(marsRover isInPosition: -1@0 andFacing:North)! !

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:37:52'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:38:54' prior: 50606083!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		aInstructionList  =$f ifTrue:[
			position := position + direction getAxis.
			]
			ifFalse:[
				position := -1@0.
				]
]! !

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:39:00'!
PASSED!
!MarsRoverTest methodsFor: 'testing backward' stamp: 'lp 5/15/2023 12:39:38'!
test10MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingEast .
	marsRover receiveCommands: 'b'.
	self assert:(marsRover isInPosition: -1@0 andFacing:East)! !
!MarsRoverTest methodsFor: 'set-up creations' stamp: 'lp 5/15/2023 12:40:07'!
createMarsRoverInTheCenterFacingNorth

	^ MarsRover inPosition: 0@0 facing:North new! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:40:07' prior: 50605902!
test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingNorth.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 1@0 andFacing:North )! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:40:07' prior: 50606112!
test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingNorth.
	marsRover receiveCommands: 'b'.
	self assert:(marsRover isInPosition: -1@0 andFacing:North)! !

!methodRemoval: MarsRoverTest #createMarsRoverFacingNorth stamp: 'lp 5/15/2023 12:40:07'!
createMarsRoverFacingNorth

	^ MarsRover inPosition: 0@0 facing:North new!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:40:10'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:40:10'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:40:10'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:40:10'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:40:10'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:40:10'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:40:10'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:40:10'!
FAILURE!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:40:10'!
FAILURE!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:40:10'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:40:10'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:40:50'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:40:50'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:40:50'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:40:50'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:40:52'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:40:52'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:40:52'!
FAILURE!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:40:52'!
FAILURE!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:40:56'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:41:29' prior: 50606127!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		aInstructionList  ='f' ifTrue:[
			position := position + direction getAxis.
			]
			ifFalse:[
				position := -1@0.
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:41:31'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:41:31'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:41:31'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:41:31'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:41:31'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:41:31'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:41:31'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:41:31'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:41:31'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:41:31'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:41:31'!
PASSED!
!MarsRoverTest methodsFor: 'testing backward' stamp: 'lp 5/15/2023 12:41:47' prior: 50606140!
test10MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingEast .
	marsRover receiveCommands: 'b'.
	self assert:(marsRover isInPosition: 0@-1 andFacing:East)! !

!testRun: #MarsRoverTest #test10MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:41:48'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:43:39' prior: 50606261!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		aInstructionList  ='f' ifTrue:[
			position := position + direction getAxis.
			]
			ifFalse:[
				position := position - direction getAxis.
				]
]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:44:33' prior: 50606329!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		aInstructionList  ='f' ifTrue:[
			position := position + direction getAxis.
			]
			ifFalse:[
				position := position + direction getInverseAxis.
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:44:39'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:44:39'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:44:39'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:44:39'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:44:39'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:44:39'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:44:39'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:44:39'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:44:39'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:44:39'!
ERROR!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:44:39'!
ERROR!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:44:55'!
ERROR!
!North methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:45:08'!
getInverseAxis
	self shouldBeImplemented.! !
!North methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:45:22' prior: 50606397!
getInverseAxis
	^ -1@0! !

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:45:26'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:45:30'!
ERROR!
!East methodsFor: 'category-name' stamp: 'lp 5/15/2023 12:45:38'!
getInverseAxis
	self shouldBeImplemented.! !
!East methodsFor: 'category-name' stamp: 'lp 5/15/2023 12:45:46' prior: 50606414!
getInverseAxis
	^ 0@-1! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:45:47'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:45:47'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:45:47'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:45:47'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:45:47'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:45:47'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:45:47'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:45:47'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:45:47'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:45:47'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:45:47'!
PASSED!
!MarsRoverTest methodsFor: 'testing backward' stamp: 'lp 5/15/2023 12:46:13'!
test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingEast .
	marsRover receiveCommands: 'b'.
	self assert:(marsRover isInPosition: 0@-1 andFacing:East)! !

!methodRemoval: MarsRoverTest #test10MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:46:13'!
test10MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingEast .
	marsRover receiveCommands: 'b'.
	self assert:(marsRover isInPosition: 0@-1 andFacing:East)!
!MarsRoverTest methodsFor: 'testing backward' stamp: 'lp 5/15/2023 12:46:33'!
test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingNorth

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingEast .
	marsRover receiveCommands: 'b'.
	self assert:(marsRover isInPosition: 0@-1 andFacing:East)! !
!MarsRoverTest methodsFor: 'testing backward' stamp: 'lp 5/15/2023 12:47:04' prior: 50606487!
test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingNorth

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingSOuth .
	marsRover receiveCommands: 'b'.
	self assert:(marsRover isInPosition: 0@-1 andFacing:East)! !
!MarsRoverTest methodsFor: 'testing backward' stamp: 'lp 5/15/2023 12:47:16'!
test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingSOuth .
	marsRover receiveCommands: 'b'.
	self assert:(marsRover isInPosition: 0@-1 andFacing:East)! !

!methodRemoval: MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:47:16'!
test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingNorth

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingSOuth .
	marsRover receiveCommands: 'b'.
	self assert:(marsRover isInPosition: 0@-1 andFacing:East)!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:47:20'!
ERROR!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:47:20'!
ERROR!
!South methodsFor: 'category-name' stamp: 'lp 5/15/2023 12:47:27'!
getInverseAxis
	self shouldBeImplemented.! !
!South methodsFor: 'category-name' stamp: 'lp 5/15/2023 12:47:35' prior: 50606540!
getInverseAxis
	^ 1@0! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:47:36'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:47:36'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:47:36'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:47:36'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:47:36'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:47:36'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:47:36'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:47:36'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:47:36'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:47:36'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:47:36'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:47:36'!
FAILURE!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:47:36'!
FAILURE!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:47:39'!
FAILURE!
!MarsRoverTest methodsFor: 'testing backward' stamp: 'lp 5/15/2023 12:47:56' prior: 50606509!
test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingSOuth .
	marsRover receiveCommands: 'b'.
	self assert:(marsRover isInPosition: 1@0 andFacing:South )! !

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:47:57'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:47:57'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:47:57'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:47:57'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:47:57'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:47:57'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:47:57'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:47:57'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:47:57'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:47:57'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:47:57'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:47:57'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:47:57'!
PASSED!
!MarsRoverTest methodsFor: 'testing backward' stamp: 'lp 5/15/2023 12:48:28'!
test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingSOuth .
	marsRover receiveCommands: 'b'.
	self assert:(marsRover isInPosition: 1@0 andFacing:South )! !
!MarsRoverTest methodsFor: 'testing backward' stamp: 'lp 5/15/2023 12:48:43' prior: 50606668!
test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingWest .
	marsRover receiveCommands: 'b'.
	self assert:(marsRover isInPosition: 0@1 andFacing:West )! !

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 12:48:44'!
ERROR!
!West methodsFor: 'category-name' stamp: 'lp 5/15/2023 12:48:51'!
getInverseAxis
	self shouldBeImplemented.! !
!West methodsFor: 'category-name' stamp: 'lp 5/15/2023 12:49:01' prior: 50606693!
getInverseAxis
	^ 0@1! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:49:02'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:49:02'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:49:02'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:49:02'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:49:02'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:49:02'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:49:02'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:49:02'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:49:02'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:49:02'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:49:02'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:49:02'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 12:49:02'!
PASSED!
!MarsRoverTest methodsFor: 'testing Right Rotation' stamp: 'lp 5/15/2023 12:50:05'!
test14MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingWest .
	marsRover receiveCommands: 'b'.
	self assert:(marsRover isInPosition: 0@1 andFacing:West )! !
!MarsRoverTest methodsFor: 'testing Right Rotation' stamp: 'lp 5/15/2023 12:50:52'!
test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingNorth .
	marsRover receiveCommands: 'r'.
	self assert:(marsRover isInPosition: 0@0 andFacing:East )! !

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:50:53'!
FAILURE!

!methodRemoval: MarsRoverTest #test14MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 12:51:01'!
test14MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingWest .
	marsRover receiveCommands: 'b'.
	self assert:(marsRover isInPosition: 0@1 andFacing:West )!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:52:31' prior: 50606339!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		aInstructionList  ='f' ifTrue:[
			position := position + direction getAxis.
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						direction := direction turnRight.
						]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:52:35'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:52:35'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:52:35'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:52:35'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:52:35'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:52:35'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:52:35'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:52:35'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:52:35'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:52:35'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:52:35'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:52:35'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 12:52:35'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:52:35'!
ERROR!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:52:35'!
ERROR!
!North methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:52:48'!
turnRight
	self shouldBeImplemented.! !
!North methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:52:56' prior: 50606865!
turnRight
	^ East new! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:53:07'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:53:07'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:53:07'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:53:07'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:53:07'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:53:07'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:53:07'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:53:07'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:53:07'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:53:07'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:53:07'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:53:07'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 12:53:07'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:53:07'!
PASSED!
!MarsRoverTest methodsFor: 'testing Right Rotation' stamp: 'lp 5/15/2023 12:53:44'!
test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingEast .
	marsRover receiveCommands: 'r'.
	self assert:(marsRover isInPosition: 0@0 andFacing:South )! !

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 12:53:45'!
ERROR!
!East methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:53:51'!
turnRight
	self shouldBeImplemented.! !
!East methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:54:04' prior: 50606945!
turnRight
	^ South  new! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:54:05'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:54:05'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:54:05'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:54:05'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:54:05'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:54:05'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:54:05'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:54:05'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:54:05'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:54:05'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:54:05'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:54:05'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 12:54:05'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:54:05'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 12:54:05'!
PASSED!
!MarsRoverTest methodsFor: 'testing Right Rotation' stamp: 'lp 5/15/2023 12:54:23'!
test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingEast .
	marsRover receiveCommands: 'r'.
	self assert:(marsRover isInPosition: 0@0 andFacing:South )! !
!MarsRoverTest methodsFor: 'testing Right Rotation' stamp: 'lp 5/15/2023 12:54:34' prior: 50607014!
test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingSOuth .
	marsRover receiveCommands: 'r'.
	self assert:(marsRover isInPosition: 0@0 andFacing:West)! !

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:54:35'!
ERROR!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:54:39'!
ERROR!
!South methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:54:43'!
turnRight
	self shouldBeImplemented.! !
!South methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:54:52' prior: 50607045!
turnRight
	^ West new! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:54:52'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:54:52'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:54:52'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:54:52'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:54:52'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:54:52'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:54:52'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:54:52'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:54:52'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:54:52'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:54:52'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:54:52'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 12:54:52'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:54:52'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 12:54:52'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:54:52'!
PASSED!
!MarsRoverTest methodsFor: 'testing Right Rotation' stamp: 'lp 5/15/2023 12:55:25'!
test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingWest .
	marsRover receiveCommands: 'r'.
	self assert:(marsRover isInPosition: 0@0 andFacing:North)! !

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 12:55:26'!
ERROR!
!West methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:55:30'!
turnRight
	self shouldBeImplemented.! !
!West methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:55:40' prior: 50607134!
turnRight
	^ North new! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:55:41'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:55:41'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:55:41'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:55:41'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:55:41'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:55:41'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:55:41'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:55:41'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:55:41'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:55:41'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:55:41'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:55:41'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 12:55:41'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:55:41'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 12:55:41'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:55:41'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 12:55:41'!
PASSED!
!MarsRoverTest methodsFor: 'testing Left Rotation' stamp: 'lp 5/15/2023 12:56:56'!
test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingWest .
	marsRover receiveCommands: 'r'.
	self assert:(marsRover isInPosition: 0@0 andFacing:North)! !
!MarsRoverTest methodsFor: 'testing Left Rotation' stamp: 'lp 5/15/2023 12:57:07' prior: 50607212!
test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingNorth .
	marsRover receiveCommands: 'l'.
	self assert:(marsRover isInPosition: 0@0 andFacing:North)! !
!MarsRoverTest methodsFor: 'testing Left Rotation' stamp: 'lp 5/15/2023 12:57:11' prior: 50607223!
test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingNorth .
	marsRover receiveCommands: 'l'.
	self assert:(marsRover isInPosition: 0@0 andFacing:West)! !

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:57:14'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:57:55' prior: 50606791!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		aInstructionList  ='f' ifTrue:[
			position := position + direction getAxis.
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							direction := direction turnLeft
							]
					]
				]
]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 12:57:58' prior: 50607249!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		aInstructionList  ='f' ifTrue:[
			position := position + direction getAxis.
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							direction := direction turnLeft.
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 12:57:58'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:57:58'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:57:58'!
ERROR!
!North methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:58:04'!
turnLeft
	self shouldBeImplemented.! !
!North methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:58:11' prior: 50607362!
turnLeft
	^ West new.! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:58:12'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 12:58:40'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:58:40'!
PASSED!
!MarsRoverTest methodsFor: 'testing Left Rotation' stamp: 'lp 5/15/2023 12:59:15'!
test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingNorth .
	marsRover receiveCommands: 'l'.
	self assert:(marsRover isInPosition: 0@0 andFacing:West)! !
!MarsRoverTest methodsFor: 'testing Left Rotation' stamp: 'lp 5/15/2023 12:59:30' prior: 50607519!
test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingWest .
	marsRover receiveCommands: 'l'.
	self assert:(marsRover isInPosition: 0@0 andFacing:South)! !

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 12:59:31'!
ERROR!
!West methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:59:35'!
turnLeft
	self shouldBeImplemented.! !
!West methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 12:59:48' prior: 50607545!
turnLeft
	^ South new! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 12:59:49'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 12:59:49'!
PASSED!
!MarsRoverTest methodsFor: 'testing Left Rotation' stamp: 'lp 5/15/2023 13:00:14'!
test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingSOuth .
	marsRover receiveCommands: 'l'.
	self assert:(marsRover isInPosition: 0@0 andFacing:East)! !

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 13:00:14'!
ERROR!
!South methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 13:00:19'!
turnLeft
	self shouldBeImplemented.! !
!South methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 13:00:27' prior: 50607647!
turnLeft
	^ East new! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 13:00:28'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 13:00:28'!
PASSED!
!MarsRoverTest methodsFor: 'testing Left Rotation' stamp: 'lp 5/15/2023 13:00:51'!
test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingEast .
	marsRover receiveCommands: 'l'.
	self assert:(marsRover isInPosition: 0@0 andFacing:North)! !

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 13:00:51'!
ERROR!
!East methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 13:00:55'!
turnLeft
	self shouldBeImplemented.! !
!East methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 13:01:10' prior: 50607753!
turnLeft
	^ North new.! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 13:01:10'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 13:01:10'!
PASSED!
!MarsRoverTest methodsFor: 'testing error' stamp: 'lp 5/15/2023 13:02:07'!
test17marsRoverShouldFailWhenStartWithSomeUnknowInstruction

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingWest .
	marsRover receiveCommands: 'ñ'.
	self assert:(marsRover isInPosition: 0@0 andFacing:North)! !

!testRun: #MarsRoverTest #test17marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 13:02:10'!
FAILURE!
!MarsRoverTest methodsFor: 'testing error' stamp: 'lp 5/15/2023 13:02:43'!
test23marsRoverShouldFailWhenStartWithSomeUnknowInstruction

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingWest .
	marsRover receiveCommands: 'ñ'.
	self assert:(marsRover isInPosition: 0@0 andFacing:North)! !

!methodRemoval: MarsRoverTest #test17marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 13:02:43'!
test17marsRoverShouldFailWhenStartWithSomeUnknowInstruction

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingWest .
	marsRover receiveCommands: 'ñ'.
	self assert:(marsRover isInPosition: 0@0 andFacing:North)!
!MarsRoverTest methodsFor: 'testing error' stamp: 'lp 5/15/2023 13:02:52'!
test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingWest .
	marsRover receiveCommands: 'ñ'.
	self assert:(marsRover isInPosition: 0@0 andFacing:North)! !

!methodRemoval: MarsRoverTest #test23marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 13:02:52'!
test23marsRoverShouldFailWhenStartWithSomeUnknowInstruction

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingWest .
	marsRover receiveCommands: 'ñ'.
	self assert:(marsRover isInPosition: 0@0 andFacing:North)!
!MarsRoverTest methodsFor: 'testing error' stamp: 'lp 5/15/2023 13:03:57' prior: 50607884!
test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingNorth .
	
	self should: [
		marsRover receiveCommands: 'ñ'
		] raise:  Error 
	withExceptionDo: [:error|
			self assert:( MarsRover  wrongInstructionErrorMessage  ) equals: (error  messageText ).
			self assert:( marsRover isInPosition: 0@0 andFacing:North ).
	]
	! !

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 13:04:00'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 13:04:36' prior: 50607266!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		aInstructionList  ='f' ifTrue:[
			position := position + direction getAxis.
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							]
					]
				]
]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 13:05:16' prior: 50607925!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		aInstructionList  ='f' ifTrue:[
			position := position + direction getAxis.
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 13:05:27'!
unknowCommandErrorDescription! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 13:05:39' prior: 50607966!
unknowCommandErrorDescription
	'comando no reconocido'! !

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 13:05:52'!
ERROR!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 13:05:52'!
ERROR!
!MarsRoverTest methodsFor: 'testing error' stamp: 'lp 5/15/2023 13:06:12' prior: 50607906!
test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction

	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingNorth .
	
	self should: [
		marsRover receiveCommands: 'ñ'
		] raise:  Error 
	withExceptionDo: [:error|
			self assert:( MarsRover  unknowCommandErrorDescription  ) equals: (error  messageText ).
			self assert:( marsRover isInPosition: 0@0 andFacing:North ).
	]
	! !

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 13:06:13'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 13:06:13'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 13:52:39'!
test23MarsRovershouldMoveWestWhenReceivedTwoFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'f'.
	self assert:(marsRover isInPosition: 0@-1 andFacing:West)! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 13:52:51' prior: 50608095!
test23MarsRovershouldMoveWestWhenReceivedTwoFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'fff'.
	self assert:(marsRover isInPosition: 0@-3 andFacing:West)! !

!testRun: #MarsRoverTest #test23MarsRovershouldMoveWestWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 13:52:52'!
ERROR!

!testRun: #MarsRoverTest #test23MarsRovershouldMoveWestWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 13:52:52'!
ERROR!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 13:53:05' prior: 50608105!
test23MarsRovershouldMoveWestWhenReceivedTwoFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ff'.
	self assert:(marsRover isInPosition: 0@-2 andFacing:West)! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 13:53:57'!
test23MarsRovershouldMoveTwoTimesWhenRecivingTwoFCommands

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ff'.
	self assert:(marsRover isInPosition: 0@-2 andFacing:West)! !

!methodRemoval: MarsRoverTest #test23MarsRovershouldMoveWestWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 13:53:57'!
test23MarsRovershouldMoveWestWhenReceivedTwoFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ff'.
	self assert:(marsRover isInPosition: 0@-2 andFacing:West)!

!testRun: #MarsRoverTest #test23MarsRovershouldMoveTwoTimesWhenRecivingTwoFCommands stamp: 'lp 5/15/2023 13:54:00'!
ERROR!

!testRun: #MarsRoverTest #test23MarsRovershouldMoveTwoTimesWhenRecivingTwoFCommands stamp: 'lp 5/15/2023 13:54:00'!
ERROR!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 13:54:42' prior: 50607944!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		aInstructionList  ='f' ifTrue:[
			position := position + direction getAxis.
			aInstructionList size =2 ifTrue:[
				position := position + direction getAxis .
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 13:54:46' prior: 50608162!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		aInstructionList  ='f' ifTrue:[
			position := position + direction getAxis.
			aInstructionList size =2 ifTrue:[
				position := position + direction getAxis.
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 13:54:46'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRovershouldMoveTwoTimesWhenRecivingTwoFCommands stamp: 'lp 5/15/2023 13:54:46'!
ERROR!

!testRun: #MarsRoverTest #test23MarsRovershouldMoveTwoTimesWhenRecivingTwoFCommands stamp: 'lp 5/15/2023 13:54:46'!
ERROR!

!testRun: #MarsRoverTest #test23MarsRovershouldMoveTwoTimesWhenRecivingTwoFCommands stamp: 'lp 5/15/2023 13:54:46'!
ERROR!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 13:54:57'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRovershouldMoveTwoTimesWhenRecivingTwoFCommands stamp: 'lp 5/15/2023 13:54:57'!
ERROR!

!testRun: #MarsRoverTest #test23MarsRovershouldMoveTwoTimesWhenRecivingTwoFCommands stamp: 'lp 5/15/2023 13:54:57'!
ERROR!

!testRun: #MarsRoverTest #test23MarsRovershouldMoveTwoTimesWhenRecivingTwoFCommands stamp: 'lp 5/15/2023 13:54:57'!
ERROR!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 13:55:24' prior: 50608186!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		aInstructionList  ='f' ifTrue:[
			position := position + direction getAxis.
			aInstructionList size = 2 ifTrue:[
				position := position + direction getAxis.
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test23MarsRovershouldMoveTwoTimesWhenRecivingTwoFCommands stamp: 'lp 5/15/2023 13:55:34'!
ERROR!

!testRun: #MarsRoverTest #test23MarsRovershouldMoveTwoTimesWhenRecivingTwoFCommands stamp: 'lp 5/15/2023 13:55:34'!
ERROR!

!testRun: #MarsRoverTest #test23MarsRovershouldMoveTwoTimesWhenRecivingTwoFCommands stamp: 'lp 5/15/2023 13:55:34'!
ERROR!

!methodRemoval: MarsRoverTest #test23MarsRovershouldMoveTwoTimesWhenRecivingTwoFCommands stamp: 'lp 5/15/2023 13:55:46'!
test23MarsRovershouldMoveTwoTimesWhenRecivingTwoFCommands

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ff'.
	self assert:(marsRover isInPosition: 0@-2 andFacing:West)!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:56:02'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 13:56:05'!
PASSED!

----SNAPSHOT----(15 May 2023 13:56:19) CuisUniversity-5706.image priorSource: 8713034!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 13:56:54'!
test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ff'.
	self assert:(marsRover isInPosition: 0@-2 andFacing:West)! !

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 13:56:55'!
ERROR!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 13:56:55'!
ERROR!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 13:58:17' prior: 50608418!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
			position := position + direction getAxis.
			aInstructionList size = 2 ifTrue:[
				position := position + direction getAxis.
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 13:58:18'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 13:58:18'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 13:58:45'!
test24marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ff'.
	self assert:(marsRover isInPosition: 0@-2 andFacing:West)! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 13:58:48' prior: 50608701!
test24marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'fff'.
	self assert:(marsRover isInPosition: 0@-2 andFacing:West)! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 13:58:52' prior: 50608712!
test24marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'fff'.
	self assert:(marsRover isInPosition: 0@-3 andFacing:West)! !

!testRun: #MarsRoverTest #test24marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 13:58:53'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 13:59:17' prior: 50608581!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
			position := position + direction getAxis.
			aInstructionList size = 2 ifTrue:[
				position := position + direction getAxis.
				].
			aInstructionList size = 3 ifTrue:[
				position := position + direction getAxis.
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 13:59:19'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 13:59:19'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 13:59:19'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 13:59:20'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 13:59:20'!
FAILURE!

!testRun: #MarsRoverTest #test24marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 13:59:20'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 13:59:45' prior: 50608738!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
			position := position + direction getAxis.
			aInstructionList size = 2 ifTrue:[
				position := position + direction getAxis.
				].
			aInstructionList size = 3 ifTrue:[
				position := position + direction getAxis.
				position := position + direction getAxis.
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 13:59:46'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 13:59:46'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:01:15' prior: 50608870!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
			aInstructionList do:[:aCharInstructions| 
				position := position + direction getInverseAxis ]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:01:18'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:01:18'!
FAILURE!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:01:18'!
FAILURE!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:01:18'!
FAILURE!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:01:18'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:01:18'!
FAILURE!

!testRun: #MarsRoverTest #test24marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:01:18'!
FAILURE!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:01:37'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:01:37'!
FAILURE!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:01:37'!
FAILURE!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:01:37'!
FAILURE!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:01:37'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:01:37'!
FAILURE!

!testRun: #MarsRoverTest #test24marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:01:37'!
FAILURE!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:01:38'!
FAILURE!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:02:10'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:02:10'!
FAILURE!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:02:10'!
FAILURE!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:02:10'!
FAILURE!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:02:10'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:02:10'!
FAILURE!

!testRun: #MarsRoverTest #test24marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:02:10'!
FAILURE!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:02:12'!
FAILURE!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:03:18'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:03:43' prior: 50608999!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
			aInstructionList do:[:aCharInstructions| 
				position := position + direction getAxis ]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:03:44'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:03:44'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:25:17'!
testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'fff'.
	self assert:(marsRover isInPosition: 0@-3 andFacing:West)! !

!methodRemoval: MarsRoverTest #test24marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:25:24'!
test24marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'fff'.
	self assert:(marsRover isInPosition: 0@-3 andFacing:West)!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:27:13'!
testxxmarsRoverShouldNotMOveAFterGoingFowardAndBackwards

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingNorth.
	marsRover receiveCommands: 'fb'.
	self assert:(marsRover isInPosition: 0@0 andFacing:North)! !

!testRun: #MarsRoverTest #testxxmarsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:27:14'!
FAILURE!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:27:21'!
test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingNorth.
	marsRover receiveCommands: 'fb'.
	self assert:(marsRover isInPosition: 0@0 andFacing:North)! !

!methodRemoval: MarsRoverTest #testxxmarsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:27:21'!
testxxmarsRoverShouldNotMOveAFterGoingFowardAndBackwards

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingNorth.
	marsRover receiveCommands: 'fb'.
	self assert:(marsRover isInPosition: 0@0 andFacing:North)!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:28:19' prior: 50609336!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
			position := position + direction getAxis .
				(aInstructionList at:2) = $f ifTrue:[
				position := position + direction getAxis 
				] ifFalse:[
				position := position + direction getInverseAxis ]
		
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:28:21'!
ERROR!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:28:21'!
ERROR!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:28:21'!
ERROR!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:28:21'!
ERROR!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:28:21'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:28:21'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:28:27' prior: 50609516!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
			position := position + direction getAxis .
				(aInstructionList at:2) = $f ifTrue:[
				position := position + direction getAxis 
				] ifFalse:[
				position := position + direction getInverseAxis ]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:28:32'!
ERROR!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:28:32'!
ERROR!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:28:32'!
ERROR!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:28:32'!
ERROR!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:28:32'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:28:32'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:29:33' prior: 50609647!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size = 2 ifTrue:[
					(aInstructionList at:2) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					position := position + direction getInverseAxis ]
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:29:33'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:29:33'!
FAILURE!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:29:33'!
FAILURE!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:29:52' prior: 50609459!
testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction

	"| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'fff'.
	self assert:(marsRover isInPosition: 0@-3 andFacing:West)"! !

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:29:53'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:29:53'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:30:47'!
test25marsRoverShouldFaceEasteAFterGoingFowardAndAndTurnLeft

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingNorth.
	marsRover receiveCommands: 'fl'.
	self assert:(marsRover isInPosition: 0@0 andFacing:East)! !

!testRun: #MarsRoverTest #test25marsRoverShouldFaceEasteAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:30:47'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:31:43' prior: 50609778!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size = 2 ifTrue:[
					(aInstructionList at:2) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:2 )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						direction := direction turnLeft.
						]
					 ]
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceEasteAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:31:44'!
FAILURE!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:31:44'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceEasteAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:31:44'!
FAILURE!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:32:01' prior: 50610034!
test25marsRoverShouldFaceEasteAFterGoingFowardAndAndTurnLeft

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingNorth.
	marsRover receiveCommands: 'fl'.
	self assert:(marsRover isInPosition: 0@0 andFacing:West)! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:32:20'!
test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingNorth.
	marsRover receiveCommands: 'fl'.
	self assert:(marsRover isInPosition: 0@0 andFacing:West)! !

!methodRemoval: MarsRoverTest #test25marsRoverShouldFaceEasteAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:32:20'!
test25marsRoverShouldFaceEasteAFterGoingFowardAndAndTurnLeft

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingNorth.
	marsRover receiveCommands: 'fl'.
	self assert:(marsRover isInPosition: 0@0 andFacing:West)!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:32:22'!
FAILURE!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:32:52' prior: 50610203!
test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingNorth.
	marsRover receiveCommands: 'fl'.
	self assert:(marsRover isInPosition: 1@0 andFacing:West)! !

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:32:55'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:32:55'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:33:23'!
test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingNorth.
	marsRover receiveCommands: 'fr'.
	self assert:(marsRover isInPosition: 1@0 andFacing:East)! !

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:33:24'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:34:06' prior: 50610048!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size = 2 ifTrue:[
					(aInstructionList at:2) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:2 )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionList at:2) = $l ifTrue:[
							direction := direction turnLeft.
							]
						
						]
					 ]
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:34:35' prior: 50610365!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size = 2 ifTrue:[
					(aInstructionList at:2) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:2 )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionList at:2) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionList at:2) = $l ifTrue:[
							direction := direction turnLeft.
							]
						]

						]
					 ]
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:34:36'!
FAILURE!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:34:36'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:34:36'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:34:43' prior: 50610399!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size = 2 ifTrue:[
					(aInstructionList at:2) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:2 )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionList at:2) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionList at:2) = $l ifTrue:[
							direction := direction turnRight.
							]
						]

						]
					 ]
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:34:43'!
FAILURE!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:34:43'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:34:43'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:34:56' prior: 50610553!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size = 2 ifTrue:[
					(aInstructionList at:2) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:2 )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionList at:2) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionList at:2) = $r ifTrue:[
							direction := direction turnRight.
							]
						]

						]
					 ]
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:34:56'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:34:57'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:34:57'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:34:57'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:34:57'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:34:57'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:34:57'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:34:57'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:36:21'!
test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingNorth.
	marsRover receiveCommands: 'fr'.
	self assert:(marsRover isInPosition: 1@0 andFacing:East)! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:36:24' prior: 50610856!
test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingNorth.
	marsRover receiveCommands: 'fñ'.
	self assert:(marsRover isInPosition: 1@0 andFacing:East)! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:36:36' prior: 50610867!
test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingNorth.
	marsRover receiveCommands: 'fñ'.
	self assert:(marsRover isInPosition: 1@0 andFacing:North)! !

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 14:36:36'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:36:36'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:37:44' prior: 50610878!
test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF
	| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingNorth .
	
	self should: [
		marsRover receiveCommands: 'fñ'
		] raise:  Error 
	withExceptionDo: [:error|
			self assert:( MarsRover  unknowCommandErrorDescription  ) equals: (error  messageText ).
			self assert:( marsRover isInPosition: 1@0 andFacing:North ).
	]! !

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 14:37:45'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:38:10' prior: 50610707!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size = 2 ifTrue:[
					(aInstructionList at:2) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:2 )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionList at:2) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionList at:2) = $r ifTrue:[
							direction := direction turnRight.
							]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
						]

						]
					 ]
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:38:11'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:39:02'!
test28marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction

	"| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'fff'.
	self assert:(marsRover isInPosition: 0@-3 andFacing:West)"! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:41:39'!
m1: aInstructionList

	^ aInstructionList size = 2 ifTrue:[
					(aInstructionList at:2) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:2 )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionList at:2) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionList at:2) = $r ifTrue:[
							direction := direction turnRight.
							]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
						]

						]
					 ]
				]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:41:39' prior: 50611030!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				self m1: aInstructionList
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:41:56'!
executeCOmmand: aInstructionList

	^ aInstructionList size = 2 ifTrue:[
					(aInstructionList at:2) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:2 )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionList at:2) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionList at:2) = $r ifTrue:[
							direction := direction turnRight.
							]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
						]

						]
					 ]
				]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 14:41:56' prior: 50611219!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				self executeCOmmand: aInstructionList
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!methodRemoval: MarsRover #m1: stamp: 'lp 5/15/2023 14:41:56'!
m1: aInstructionList

	^ aInstructionList size = 2 ifTrue:[
					(aInstructionList at:2) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:2 )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionList at:2) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionList at:2) = $r ifTrue:[
							direction := direction turnRight.
							]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
						]

						]
					 ]
				]!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:41:58'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:41:58'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:42:25' prior: 50611187!
test28marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'fff'.
	self assert:(marsRover isInPosition: 0@-3 andFacing:West)! !

!testRun: #MarsRoverTest #test28marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:42:35'!
FAILURE!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:42:50'!
test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'fff'.
	self assert:(marsRover isInPosition: 0@-3 andFacing:West)! !

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 14:42:53'!
FAILURE!

!methodRemoval: MarsRoverTest #test28marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:42:58'!
test28marsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'fff'.
	self assert:(marsRover isInPosition: 0@-3 andFacing:West)!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:43:28' prior: 50611264!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				self executeCommand: aInstructionList
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:43:35'!
executeCommand: aInstructionList

	^ aInstructionList size = 2 ifTrue:[
					(aInstructionList at:2) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:2 )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionList at:2) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionList at:2) = $r ifTrue:[
							direction := direction turnRight.
							]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
						]

						]
					 ]
				]! !

!methodRemoval: MarsRover #executeCOmmand: stamp: 'lp 5/15/2023 14:43:35'!
executeCOmmand: aInstructionList

	^ aInstructionList size = 2 ifTrue:[
					(aInstructionList at:2) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:2 )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionList at:2) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionList at:2) = $r ifTrue:[
							direction := direction turnRight.
							]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
						]

						]
					 ]
				]!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:44:01' prior: 50611494!
executeCommand: aInstructionList

	^ 
					(aInstructionList at:2) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:2 )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionList at:2) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionList at:2) = $r ifTrue:[
							direction := direction turnRight.
							]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
						]

						]
					 ]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:46:18' prior: 50611471!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size = 2 ifTrue:[self executeCommand: aInstructionList] ifFalse:[
					position := position + direction getAxis. 
					position := position + direction getAxis.
					]
				
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:46:22'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:46:22'!
FAILURE!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:46:22'!
FAILURE!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:46:22'!
FAILURE!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 14:46:22'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:46:22'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:46:51' prior: 50611559!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size = 2 ifTrue:[self executeCommand: aInstructionList] ifFalse:[
					aInstructionList size = 3 ifTrue:[
						position := position + direction getAxis. 
						position := position + direction getAxis.
						]
					]
				
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:46:51'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:46:51'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:46:51'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:46:51'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 14:46:52'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:46:52'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:49:55' prior: 50611708!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size >= 2 ifTrue:[self executeCommand: aInstructionList.
					position := position + direction getAxis.] 
				
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:51:33' prior: 50611444!
test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ffb'.
	self assert:(marsRover isInPosition: 0@-3 andFacing:West)! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:51:48'!
test29marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ffb'.
	self assert:(marsRover isInPosition: 0@-3 andFacing:West)! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:51:54' prior: 50611894!
test29marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ffb'.
	self assert:(marsRover isInPosition: 0@-2 andFacing:West)! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:53:10'!
test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ffb'.
	self assert:(marsRover isInPosition: 0@-2 andFacing:West)! !

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 14:53:11'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:53:54' prior: 50611858!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size >= 2 ifTrue:[self executeCommand: aInstructionList.
					(aInstructionList at:3) =$f ifTrue:[
						position := position + direction getAxis.
						]
					] 
				
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:54:12' prior: 50611930!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size >= 2 ifTrue:[self executeCommand: aInstructionList.
					(aInstructionList at:3) =$f ifTrue:[
						position := position + direction getAxis.
						] ifFalse:[
						position:= position + direction getInverseAxis .
						]
					] 
				
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:54:13'!
ERROR!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:54:13'!
ERROR!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:54:13'!
ERROR!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:54:13'!
ERROR!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 14:54:13'!
FAILURE!

!testRun: #MarsRoverTest #test29marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 14:54:13'!
FAILURE!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 14:54:13'!
FAILURE!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:54:13'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:54:19'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:54:20'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:54:20'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:54:20'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:54:20'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:54:20'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:54:20'!
ERROR!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:54:20'!
ERROR!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:54:20'!
ERROR!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:54:20'!
ERROR!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 14:54:20'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 14:54:20'!
FAILURE!

!testRun: #MarsRoverTest #test29marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 14:54:20'!
FAILURE!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 14:54:20'!
FAILURE!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:54:20'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:54:33'!
ERROR!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:54:33'!
ERROR!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:54:33'!
ERROR!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:54:33'!
ERROR!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 14:54:33'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 14:54:33'!
FAILURE!

!testRun: #MarsRoverTest #test29marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 14:54:33'!
FAILURE!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 14:54:33'!
FAILURE!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:54:33'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:55:11' prior: 50611958!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size >= 2 ifTrue:[self executeCommand: aInstructionList.
					aInstructionList  size =3 ifTrue:[
						(aInstructionList at:3) =$f ifTrue:[
							position := position + direction getAxis.
							] ifFalse:[
								position:= position + direction getInverseAxis .
						]
					] 
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 14:55:12'!
FAILURE!

!testRun: #MarsRoverTest #test29marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 14:55:12'!
FAILURE!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 14:55:12'!
FAILURE!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:55:12'!
PASSED!

!methodRemoval: MarsRoverTest #test29marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 14:55:37'!
test29marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ffb'.
	self assert:(marsRover isInPosition: 0@-2 andFacing:West)!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:55:48' prior: 50611884!
test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'fff'.
	self assert:(marsRover isInPosition: 0@-3 andFacing:West)! !

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 14:55:53'!
FAILURE!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 14:55:53'!
FAILURE!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 14:56:13'!
FAILURE!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 14:56:13'!
FAILURE!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:56:47' prior: 50611915!
test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ffb'.
	self assert:(marsRover isInPosition: 0@-1 andFacing:West)! !

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 14:56:48'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:56:48'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:58:17'!
test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ffl'.
	self assert:(marsRover isInPosition: 0@-2 andFacing:South)! !

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 14:58:18'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:59:10' prior: 50612377!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size >= 2 ifTrue:[self executeCommand: aInstructionList.
					aInstructionList  size =3 ifTrue:[
						(aInstructionList at:3) =$f ifTrue:[
							position := position + direction getAxis.
							] ifFalse:[
								(aInstructionList at:3) =$b ifTrue:[
								position:= position + direction getInverseAxis .]
								ifFalse:[
									direction := direction turnLeft ]
						]
					] 
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 14:59:11'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 14:59:11'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:59:33'!
test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ffl'.
	self assert:(marsRover isInPosition: 0@-2 andFacing:South)! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 14:59:42' prior: 50612898!
test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ffr'.
	self assert:(marsRover isInPosition: 0@-2 andFacing:North)! !

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 14:59:43'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:00:28' prior: 50612734!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size >= 2 ifTrue:[self executeCommand: aInstructionList.
					aInstructionList  size =3 ifTrue:[
						(aInstructionList at:3) =$f ifTrue:[
							position := position + direction getAxis.
							] ifFalse:[
								(aInstructionList at:3) =$b ifTrue:[
								position:= position + direction getInverseAxis .]
								ifFalse:[
									(aInstructionList at:3) =$l ifTrue:[ 
									direction := direction turnLeft ]
									ifFalse:[
										direction := direction turnRight .
										]
									]
						]
					] 
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:00:30'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 15:00:30'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 15:01:22'!
test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ffr'.
	self assert:(marsRover isInPosition: 0@-2 andFacing:North)! !
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 15:01:25' prior: 50613096!
test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands

	| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'ffñ'.
	self assert:(marsRover isInPosition: 0@-2 andFacing:North)! !

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:01:26'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 15:01:26'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 15:01:42' prior: 50613107!
test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands

		| marsRover |
	
	marsRover := self createMarsRoverInTheCenterFacingNorth .
	
	self should: [
		marsRover receiveCommands: 'ffñ'
		] raise:  Error 
	withExceptionDo: [:error|
			self assert:( MarsRover  unknowCommandErrorDescription  ) equals: (error  messageText ).
			self assert:( marsRover isInPosition: 2@0 andFacing:North ).
	]! !

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:01:43'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:02:38' prior: 50612924!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size >= 2 ifTrue:[self executeCommand: aInstructionList.
					aInstructionList  size =3 ifTrue:[
						(aInstructionList at:3) =$f ifTrue:[
							position := position + direction getAxis.
							] ifFalse:[
								(aInstructionList at:3) =$b ifTrue:[
								position:= position + direction getInverseAxis .]
								ifFalse:[
									(aInstructionList at:3) =$l ifTrue:[ 
									direction := direction turnLeft ]
									ifFalse:[
										(aInstructionList at:3) =$r ifTrue:[
											direction := direction turnRight .
										]
										ifFalse:[
									self error:  self class unknowCommandErrorDescription.
										]
									]
								]
						]
					] 
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:02:39'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 15:02:39'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:03:44' prior: 50613278!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size >= 2 ifTrue:[self executeCommand:( aInstructionList at:2).
					aInstructionList  size =3 ifTrue:[
					self executeCommand: aInstructionList 
					] 
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:03:45'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:03:45'!
ERROR!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:03:45'!
ERROR!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:03:45'!
ERROR!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:03:45'!
ERROR!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:03:46'!
FAILURE!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:03:46'!
ERROR!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:03:46'!
ERROR!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:03:46'!
ERROR!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:03:46'!
ERROR!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:03:46'!
FAILURE!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 15:03:46'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:04:13' prior: 50613459!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size >= 2 ifTrue:[self executeCommand: aInstructionList.
					aInstructionList  size =3 ifTrue:[
					self executeCommand: aInstructionList 
					] 
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:04:50' prior: 50611538!
executeCommand: aInstructionChar  

	^ 
					(aInstructionChar at:2) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionChar at:2 )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionChar at:2) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionChar at:2) = $r ifTrue:[
							direction := direction turnRight.
							]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
						]

						]
					 ]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:05:23' prior: 50613651!
executeCommand: aInstructionChar  

	^ 
					(aInstructionChar) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionChar )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionChar) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionChar ) = $r ifTrue:[
							direction := direction turnRight.
							]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
						]

						]
					 ]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:05:24'!
ERROR!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:05:24'!
ERROR!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:05:24'!
ERROR!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:05:24'!
ERROR!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:05:24'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:05:24'!
ERROR!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:05:24'!
ERROR!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:05:24'!
ERROR!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:05:24'!
ERROR!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:05:24'!
FAILURE!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 15:05:24'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:05:48' prior: 50613624!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size >= 2 ifTrue:[self executeCommand: (aInstructionList at:2).
					aInstructionList  size =3 ifTrue:[
					self executeCommand: (aInstructionList  at:3)
					] 
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:05:49'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 15:05:49'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:06:45' prior: 50613830!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				aInstructionList do:[:aInstructionChar | self executeCommand: aInstructionChar ]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!testRun: #MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 15:06:46'!
PASSED!

!methodRemoval: MarsRoverTest #testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction stamp: 'lp 5/15/2023 15:08:39'!
testxxmarsRoverShouldMoveManyTimesWhenReceivedManyTImesFInstruction

	"| marsRover |
	
	marsRover := self  createMarsRoverInTheCenterFacingWest.
	marsRover receiveCommands: 'fff'.
	self assert:(marsRover isInPosition: 0@-3 andFacing:West)"!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 14:38:10' prior: 50613995!
receiveCommands: aInstructionList
	aInstructionList isEmpty ifFalse:[
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
				aInstructionList size = 2 ifTrue:[
					(aInstructionList at:2) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:2 )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionList at:2) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionList at:2) = $r ifTrue:[
							direction := direction turnRight.
							]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
						]

						]
					 ]
				]
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				]
]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:15:21' prior: 50614167!
receiveCommands: aInstructionList
	
	aInstructionList size >=1  ifTrue: [
		(aInstructionList at:1) = $f ifTrue:[
				position := position + direction getAxis .
			]
			ifFalse:[
				aInstructionList  = 'b' ifTrue:[
					position := position + direction getInverseAxis.
					]
					ifFalse:[
						aInstructionList  = 'r' ifTrue:[
							direction := direction turnRight.
						]
						ifFalse:[
							aInstructionList = 'l' ifTrue:[
								direction := direction turnLeft.
								]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
					]
				].
			aInstructionList size =2 ifTrue:[	aInstructionList size = 2 ifTrue:[
					(aInstructionList at:2) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:2 )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionList at:2) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionList at:2) = $r ifTrue:[
							direction := direction turnRight.
							]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
						]

						]
					 ]
				]
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:15:21'!
FAILURE!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:15:21'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:15:21'!
FAILURE!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:15:21'!
FAILURE!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:15:21'!
FAILURE!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:15:39'!
FAILURE!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:15:39'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:15:39'!
FAILURE!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:15:39'!
FAILURE!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:15:39'!
FAILURE!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:15:52'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:17:51' prior: 50614207!
receiveCommands: aInstructionList
	
	aInstructionList size >=1  ifTrue: [
		self executeCommand: (aInstructionList at:1).
				].
			aInstructionList size =2 ifTrue:[	aInstructionList size = 2 ifTrue:[
					self executeCommand: (aInstructionList at:3)
				]
]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:17:54' prior: 50614520!
receiveCommands: aInstructionList
	
	aInstructionList size >=1  ifTrue: [
		self executeCommand: (aInstructionList at:1).
				].
			aInstructionList size =2 ifTrue:[	aInstructionList size = 2 ifTrue:[
					self executeCommand: (aInstructionList at:2)
				]
]! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:17:54'!
FAILURE!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:17:54'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:17:54'!
FAILURE!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:17:54'!
FAILURE!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:17:54'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:19:07' prior: 50614531!
receiveCommands: aInstructionList
	
	aInstructionList size >=1  ifTrue: [
			self executeCommand: (aInstructionList at:1).

			aInstructionList size =2 ifTrue:[	aInstructionList size = 2 ifTrue:[
					self executeCommand: (aInstructionList at:2)
				]
			]
		]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:19:25' prior: 50614676!
receiveCommands: aInstructionList
	
	aInstructionList size >=1  ifTrue: [
			self executeCommand: (aInstructionList at:1).

			aInstructionList size =2 ifTrue:[	
					self executeCommand: (aInstructionList at:2)
				]
			]
		! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:19:25'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:19:25'!
FAILURE!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:19:26'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:19:26'!
FAILURE!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:19:26'!
FAILURE!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:19:26'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:20:21' prior: 50614687!
receiveCommands: aInstructionList
	
	aInstructionList size >=1  ifTrue: [
			self executeCommand: (aInstructionList at:1).

			aInstructionList size >=2 ifTrue:[	
					self executeCommand: (aInstructionList at:2)
				].
			aInstructionList size =3 ifTrue:[
				]
			]
		! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:21:01' prior: 50614831!
receiveCommands: aInstructionList
	
	aInstructionList size >=1  ifTrue: [
			self executeCommand: (aInstructionList at:1).

			aInstructionList size >=2 ifTrue:[	
					self executeCommand: (aInstructionList at:2)
				].
			aInstructionList size =3 ifTrue:[
				(aInstructionList at:3) = $f ifTrue:[
					position := position + direction getAxis 
					]
				]
			]
		! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:21:02'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:21:03'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:21:03'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:21:03'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:21:03'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:21:03'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:21:03'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:21:03'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:21:03'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:21:03'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:21:03'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:21:03'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:21:03'!
FAILURE!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:21:03'!
FAILURE!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:21:03'!
FAILURE!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:21:03'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:22:19' prior: 50614843!
receiveCommands: aInstructionList
	
	aInstructionList size >=1  ifTrue: [
			self executeCommand: (aInstructionList at:1).

			aInstructionList size >=2 ifTrue:[	
					self executeCommand: (aInstructionList at:2)
				].
			aInstructionList size =3 ifTrue:[
				(aInstructionList at:3) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:3) =$b ifTrue:[
						position := position +direction getInverseAxis .
						]
					]
				]
			]
		! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:22:21'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:22:21'!
FAILURE!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:22:21'!
FAILURE!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:22:21'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:23:10' prior: 50614991!
receiveCommands: aInstructionList
	
	aInstructionList size >=1  ifTrue: [
			self executeCommand: (aInstructionList at:1).

			aInstructionList size >=2 ifTrue:[	
					self executeCommand: (aInstructionList at:2)
				].
			aInstructionList size =3 ifTrue:[
				(aInstructionList at:3) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:3) =$b ifTrue:[
						position := position +direction getInverseAxis .
						] ifFalse:[
						(aInstructionList at:3) =$r ifTrue:[
							direction := direction turnRight .
							]
						]
					]
				]
			]
		! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:23:25' prior: 50615143!
receiveCommands: aInstructionList
	
	aInstructionList size >=1  ifTrue: [
			self executeCommand: (aInstructionList at:1).

			aInstructionList size >=2 ifTrue:[	
					self executeCommand: (aInstructionList at:2)
				].
			aInstructionList size =3 ifTrue:[
				(aInstructionList at:3) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:3) =$b ifTrue:[
						position := position +direction getInverseAxis .
						] ifFalse:[
						(aInstructionList at:3) =$r ifTrue:[
							direction := direction turnRight.
							]
						]
					]
				]
			]
		! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:23:25'!
FAILURE!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:23:25'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:23:25'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:23:55' prior: 50615165!
receiveCommands: aInstructionList
	
	aInstructionList size >=1  ifTrue: [
			self executeCommand: (aInstructionList at:1).

			aInstructionList size >=2 ifTrue:[	
					self executeCommand: (aInstructionList at:2)
				].
			aInstructionList size =3 ifTrue:[
				(aInstructionList at:3) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:3) =$b ifTrue:[
						position := position +direction getInverseAxis .
						] ifFalse:[
						(aInstructionList at:3) =$r ifTrue:[
							direction := direction turnRight.
							] ifFalse:[
								(aInstructionList at:3) =$l ifTrue:[
									direction := direction turnLeft.
								]
							]
						]
					]
				]
			]
		! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:23:56'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:23:56'!
FAILURE!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:23:56'!
FAILURE!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:24:18' prior: 50615320!
receiveCommands: aInstructionList
	
	aInstructionList size >=1  ifTrue: [
			self executeCommand: (aInstructionList at:1).

			aInstructionList size >=2 ifTrue:[	
					self executeCommand: (aInstructionList at:2)
				].
			aInstructionList size =3 ifTrue:[
				(aInstructionList at:3) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:3) =$b ifTrue:[
						position := position +direction getInverseAxis .
						] ifFalse:[
						(aInstructionList at:3) =$r ifTrue:[
							direction := direction turnRight.
							] ifFalse:[
								(aInstructionList at:3) =$l ifTrue:[
									direction := direction turnLeft.
								] ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
							]
						]
					]
				]
			]
		! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:24:20' prior: 50615483!
receiveCommands: aInstructionList
	
	aInstructionList size >=1  ifTrue: [
			self executeCommand: (aInstructionList at:1).

			aInstructionList size >=2 ifTrue:[	
					self executeCommand: (aInstructionList at:2)
				].
			aInstructionList size =3 ifTrue:[
				(aInstructionList at:3) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionList at:3) =$b ifTrue:[
						position := position +direction getInverseAxis .
						] ifFalse:[
						(aInstructionList at:3) =$r ifTrue:[
							direction := direction turnRight.
							] ifFalse:[
								(aInstructionList at:3) =$l ifTrue:[
									direction := direction turnLeft.
								] ifFalse:[
									self error:  self class unknowCommandErrorDescription.
								]
							]
						]
					]
				]
			]
		! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:24:21'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:24:21'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:24:54' prior: 50615511!
receiveCommands: aInstructionList
	
	aInstructionList size >=1  ifTrue: [
			self executeCommand: (aInstructionList at:1).

			aInstructionList size >=2 ifTrue:[	
					self executeCommand: (aInstructionList at:2)
				].
			aInstructionList size =3 ifTrue:[
				self executeCommand: (aInstructionList at:3)
					]
				]
		! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:24:55'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:24:55'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:25:52' prior: 50615672!
receiveCommands: aInstructionList
	
	aInstructionList do:[:aCharInstruction| self executeCommand: aCharInstruction ]
		! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:25:52'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:25:52'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:26:03' prior: 50613672!
executeCommand: aInstructionChar  
	^ 
					(aInstructionChar) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionChar )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionChar) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionChar ) = $r ifTrue:[
							direction := direction turnRight.
							]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
						]

						]
					 ]! !

Object subclass: #InstructionHandler
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #InstructionHandler category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 15:26:37'!
Object subclass: #InstructionHandler
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!InstructionHandler class methodsFor: 'no messages' stamp: 'lp 5/15/2023 15:26:58'!
for:aMarsRover
	^self new initializeFor: aMarsRover ! !

!classDefinition: #MarsRover category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 15:27:37'!
Object subclass: #MarsRover
	instanceVariableNames: 'position direction instructionHandler'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #InstructionsHandler category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 15:27:46'!
Object subclass: #InstructionsHandler
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!MarsRover methodsFor: 'initialization' stamp: 'lp 5/15/2023 15:27:35' prior: 50604006!
deployIn: aPosition andFacing:aDirection
	position:= aPosition.
	direction := aDirection .
	instructionHandler  := InstructionsHandler for:self.! !

!classRemoval: #InstructionHandler stamp: 'lp 5/15/2023 15:27:53'!
Object subclass: #InstructionHandler
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!InstructionsHandler class methodsFor: 'no messages' stamp: 'lp 5/15/2023 15:28:21'!
for:aMarsRover
	^self new initializeFor: aMarsRover ! !

!classDefinition: #InstructionsHandler category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 15:28:37'!
Object subclass: #InstructionsHandler
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #InstructionsHandler category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 15:28:38'!
Object subclass: #InstructionsHandler
	instanceVariableNames: 'marsRover intructions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!InstructionsHandler methodsFor: 'no messages' stamp: 'lp 5/15/2023 15:28:47'!
initializeFor: aMarsRover

	marsRover := aMarsRover.
	intructions := Dictionary new.
	intructions  at: $f put:[marsRover executeFoward.].
	intructions  at:$b put:[marsRover executeBackwards].
	intructions  at:$r put:[marsRover executeRotateRight].
	intructions  at:$l put:[marsRover executeRotateLeft].! !
!InstructionsHandler methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 15:29:34'!
executeAndFailIfItsUknown: aCharCommand

	^ (intructions at:aCharCommand ifAbsent:[marsRover canNotHandleInstruction]) value! !
!InstructionsHandler methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 15:29:58'!
handleCommand: aCharCommand

	self executeAndFailIfItsUknown: aCharCommand
	! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:30:28'!
canNotHandleInstruction

	^ self error: self class  unknowCommandErrorDescription ! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:31:03' prior: 50615958!
executeCommand: aInstructionChar  
	^ instructionHandler handleCommand: aInstructionChar .
					"(aInstructionChar) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionChar )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionChar) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionChar ) = $r ifTrue:[
							direction := direction turnRight.
							]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
						]

						]
					 ]"! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:31:50' prior: 50616078!
executeCommand: aInstructionChar  
	^ "instructionHandler handleCommand: aInstructionChar ."
					(aInstructionChar) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionChar )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionChar) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionChar ) = $r ifTrue:[
							direction := direction turnRight.
							]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
						]

						]
					 ]! !
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:32:09' prior: 50616100!
executeCommand: aInstructionChar  
	^ instructionHandler handleCommand: aInstructionChar .
				"	(aInstructionChar) = $f ifTrue:[
					position := position + direction getAxis 
					] ifFalse:[
					(aInstructionChar )=$b ifTrue:[
						position := position + direction getInverseAxis
						]
					ifFalse:[
						(aInstructionChar) = $l ifTrue:[
							direction := direction turnLeft.
							]
						ifFalse:[
							(aInstructionChar ) = $r ifTrue:[
							direction := direction turnRight.
							]
							ifFalse:[
								self error:  self class unknowCommandErrorDescription.
								]
						]

						]
					 ]"! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:32:10'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:32:10'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:32:10'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:32:10'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:32:10'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:32:10'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:32:10'!
FAILURE!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:32:10'!
ERROR!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:32:10'!
FAILURE!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:32:13'!
ERROR!
!MarsRover methodsFor: 'execute Command' stamp: 'lp 5/15/2023 15:32:29'!
executeFoward
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'execute Command' stamp: 'lp 5/15/2023 15:32:47' prior: 50616281!
executeFoward
	position := position + direction getAxis .! !

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:32:49'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:32:51'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:32:53'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:32:53'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:32:54'!
ERROR!
!MarsRover methodsFor: 'execute Command' stamp: 'lp 5/15/2023 15:33:02'!
executeBackwards
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'execute Command' stamp: 'lp 5/15/2023 15:33:16' prior: 50616311!
executeBackwards
	position := position + direction getInverseAxis ! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:33:17'!
ERROR!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:33:17'!
ERROR!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:33:17'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:33:17'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:33:17'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:33:17'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:33:17'!
ERROR!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:33:17'!
ERROR!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:33:17'!
ERROR!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:33:17'!
ERROR!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:33:17'!
ERROR!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:33:17'!
ERROR!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:33:17'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:33:20'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:33:20'!
ERROR!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:33:20'!
ERROR!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:33:20'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:33:20'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:33:20'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:33:20'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:33:20'!
ERROR!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:33:20'!
ERROR!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:33:20'!
ERROR!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:33:20'!
ERROR!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:33:20'!
ERROR!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:33:20'!
ERROR!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:33:22'!
ERROR!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:33:30'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:33:30'!
ERROR!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:33:30'!
ERROR!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:33:30'!
ERROR!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:33:30'!
ERROR!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:33:30'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:33:30'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:33:30'!
ERROR!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:33:30'!
ERROR!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:33:30'!
ERROR!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:33:30'!
ERROR!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:33:30'!
ERROR!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:33:30'!
ERROR!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:33:32'!
ERROR!
!MarsRover methodsFor: 'execute Command' stamp: 'lp 5/15/2023 15:33:37'!
executeRotateRight
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'execute Command' stamp: 'lp 5/15/2023 15:33:49' prior: 50616728!
executeRotateRight
	direction := direction turnRight .! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:33:50'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:33:50'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:33:50'!
ERROR!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:33:50'!
ERROR!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:33:50'!
ERROR!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:33:50'!
ERROR!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:33:50'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:33:55'!
ERROR!
!MarsRover methodsFor: 'execute Command' stamp: 'lp 5/15/2023 15:33:59'!
executeRotateLeft
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'execute Command' stamp: 'lp 5/15/2023 15:34:11' prior: 50616875!
executeRotateLeft
	direction := direction turnLeft ! !

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:34:12'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:34:14'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:34:14'!
PASSED!
!MarsRover methodsFor: 'commands' stamp: 'lp 5/15/2023 15:34:24' prior: 50616122!
executeCommand: aInstructionChar  
	^ instructionHandler handleCommand: aInstructionChar .
! !
!CardinalDirections methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 15:34:50'!
getInverseAxis
	self subclassResponsibility ! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:35:00'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:35:00'!
PASSED!
!CardinalDirections methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 15:35:21'!
turnLeft
	self subclassResponsibility ! !
!CardinalDirections methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 15:35:27'!
turnRight
	self subclassResponsibility ! !

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:35:33'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:35:33'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:35:33'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:35:33'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:35:33'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:35:34'!
PASSED!

----SNAPSHOT----(15 May 2023 15:38:40) CuisUniversity-5706.image priorSource: 8861114!

!classDefinition: #MarsRoverTest category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 15:44:25'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'marsRoverDeployedFacingNorth'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #MarsRoverTest category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 15:44:26'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'marsRoverDeployedFacingNorth marsRoverDeployedFacingSouth'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #MarsRoverTest category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 15:44:27'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'marsRoverDeployedFacingNorth marsRoverDeployedFacingSouth marsRoverDeployedFacingEast'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!

!classDefinition: #MarsRoverTest category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 15:44:28'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'marsRoverDeployedFacingNorth marsRoverDeployedFacingSouth marsRoverDeployedFacingEast marsRoverDeployedFacingWest'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!MarsRoverTest methodsFor: 'testing many' stamp: 'lp 5/15/2023 15:44:23' overrides: 16961394!
setUp
	
	marsRoverDeployedFacingNorth := self createMarsRoverInTheCenterFacingNorth.
	marsRoverDeployedFacingSouth := self createMarsRoverInTheCenterFacingSOuth .
	marsRoverDeployedFacingEast := self createMarsRoverInTheCenterFacingEast .
	marsRoverDeployedFacingWest := self createMarsRoverInTheCenterFacingWest .! !
!MarsRoverTest methodsFor: 'testing many' stamp: 'lp 5/15/2023 15:44:31' prior: 50617350 overrides: 16961394!
setUp
	
	marsRoverDeployedFacingNorth := self createMarsRoverInTheCenterFacingNorth.
	marsRoverDeployedFacingSouth := self createMarsRoverInTheCenterFacingSOuth.
	marsRoverDeployedFacingEast := self createMarsRoverInTheCenterFacingEast .
	marsRoverDeployedFacingWest := self createMarsRoverInTheCenterFacingWest .! !

!classDefinition: #MarsRoverTest category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 15:45:09'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'marsRoverDeployedInCenterFacingNorth marsRoverDeployedFacingSouth marsRoverDeployedFacingEast marsRoverDeployedFacingWest'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 15:45:09' prior: 50617364 overrides: 16961394!
setUp
	
	marsRoverDeployedInCenterFacingNorth := self createMarsRoverInTheCenterFacingNorth.
	marsRoverDeployedFacingSouth := self createMarsRoverInTheCenterFacingSOuth.
	marsRoverDeployedFacingEast := self createMarsRoverInTheCenterFacingEast .
	marsRoverDeployedFacingWest := self createMarsRoverInTheCenterFacingWest .! !

!classDefinition: #MarsRoverTest category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 15:45:16'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'marsRoverDeployedInCenterFacingNorth marsRoverDeployedInCenterFacingSouth marsRoverDeployedFacingEast marsRoverDeployedFacingWest'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 15:45:16' prior: 50617389 overrides: 16961394!
setUp
	
	marsRoverDeployedInCenterFacingNorth := self createMarsRoverInTheCenterFacingNorth.
	marsRoverDeployedInCenterFacingSouth := self createMarsRoverInTheCenterFacingSOuth.
	marsRoverDeployedFacingEast := self createMarsRoverInTheCenterFacingEast .
	marsRoverDeployedFacingWest := self createMarsRoverInTheCenterFacingWest .! !

!classDefinition: #MarsRoverTest category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 15:45:24'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'marsRoverDeployedInCenterFacingNorth marsRoverDeployedInCenterFacingSouth marsRoverDeployedInCenterFacingEast marsRoverDeployedFacingWest'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 15:45:24' prior: 50617415 overrides: 16961394!
setUp
	
	marsRoverDeployedInCenterFacingNorth := self createMarsRoverInTheCenterFacingNorth.
	marsRoverDeployedInCenterFacingSouth := self createMarsRoverInTheCenterFacingSOuth.
	marsRoverDeployedInCenterFacingEast := self createMarsRoverInTheCenterFacingEast .
	marsRoverDeployedFacingWest := self createMarsRoverInTheCenterFacingWest .! !

!classDefinition: #MarsRoverTest category: 'MarsRover-Exercise' stamp: 'lp 5/15/2023 15:45:33'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'marsRoverDeployedInCenterFacingNorth marsRoverDeployedInCenterFacingSouth marsRoverDeployedInCenterFacingEast marsRoverDeployedInCenterFacingWest'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-Exercise'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'lp 5/15/2023 15:45:33' prior: 50617441 overrides: 16961394!
setUp
	
	marsRoverDeployedInCenterFacingNorth := self createMarsRoverInTheCenterFacingNorth.
	marsRoverDeployedInCenterFacingSouth := self createMarsRoverInTheCenterFacingSOuth.
	marsRoverDeployedInCenterFacingEast := self createMarsRoverInTheCenterFacingEast .
	marsRoverDeployedInCenterFacingWest := self createMarsRoverInTheCenterFacingWest .! !
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 15:46:23'!
test00MarsRoverStartInTheInitialPosition

	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing: North new.
	self assert:(marsRover isInPosition: 1@0 andFacing:North )! !
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 15:46:38' prior: 50617482!
test00MarsRoverStartInTheInitialPosition

		
	| marsRover |
	
	marsRover := 	MarsRover inPosition: 1@0 facing: North new.
	self assert:(marsRover isInPosition: 1@0 andFacing:North )! !
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 15:46:50' prior: 50617491!
test00MarsRoverStartInTheInitialPosition

		
	self assert:(marsRoverDeployedInCenterFacingNorth isInPosition: 1@0 andFacing:North )! !
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 15:46:55' prior: 50617500!
test00MarsRoverStartInTheInitialPosition

		
	self assert:(marsRoverDeployedInCenterFacingNorth isInPosition: 0@0 andFacing:North )! !

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:46:56'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:46:56'!
PASSED!
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 15:47:14' prior: 50605834!
test02MarsRoverDirectionIsEastWhenDeployedFacingEast

	self assert:(marsRoverDeployedInCenterFacingEast isInPosition: 0@0 andFacing:East )! !

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:47:15'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:47:15'!
PASSED!
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 15:47:25' prior: 50605844!
test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth

	self assert:(marsRoverDeployedInCenterFacingSouth isInPosition: 0@0 andFacing:South )! !

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:47:26'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:47:26'!
PASSED!
!MarsRoverTest methodsFor: 'testing initialization' stamp: 'lp 5/15/2023 15:47:34' prior: 50605854!
test04MarsRoverDirectionIsWestWhenDeployedFacingWest

	self assert:(marsRoverDeployedInCenterFacingWest isInPosition: 0@0 andFacing:West )! !

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:47:36'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:47:36'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 15:48:17' prior: 50606156!
test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction

		
	marsRoverDeployedInCenterFacingNorth receiveCommands: 'f'.
	self assert:(marsRoverDeployedInCenterFacingNorth isInPosition: 1@0 andFacing:North )! !

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:48:21'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:48:21'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 15:48:31' prior: 50605916!
test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction

	marsRoverDeployedInCenterFacingSouth receiveCommands: 'f'.
	self assert:(marsRoverDeployedInCenterFacingSouth isInPosition: -1@0 andFacing:South )! !

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:48:33'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:48:33'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 15:48:40' prior: 50605931!
test08MarsRovershouldMoveEastWhenReceivedOneFInstruction

	marsRoverDeployedInCenterFacingEast receiveCommands: 'f'.
	self assert:(marsRoverDeployedInCenterFacingEast isInPosition: 0@1 andFacing:East )! !

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:48:43'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:48:43'!
PASSED!
!MarsRoverTest methodsFor: 'testing foward' stamp: 'lp 5/15/2023 15:48:49' prior: 50605945!
test09MarsRovershouldMoveWestWhenReceivedOneFInstruction

	marsRoverDeployedInCenterFacingWest receiveCommands: 'f'.
	self assert:(marsRoverDeployedInCenterFacingWest isInPosition: 0@-1 andFacing:West)! !

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:48:54'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:48:55'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:48:55'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:48:55'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:48:55'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:48:55'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:48:55'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:48:55'!
PASSED!
!MarsRoverTest methodsFor: 'testing backward' stamp: 'lp 5/15/2023 15:49:04' prior: 50606167!
test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth


	marsRoverDeployedInCenterFacingNorth receiveCommands: 'b'.
	self assert:(marsRoverDeployedInCenterFacingNorth isInPosition: -1@0 andFacing:North)! !

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:49:10'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:49:10'!
PASSED!
!MarsRoverTest methodsFor: 'testing backward' stamp: 'lp 5/15/2023 15:49:16' prior: 50606465!
test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast

	marsRoverDeployedInCenterFacingEast receiveCommands: 'b'.
	self assert:(marsRoverDeployedInCenterFacingEast isInPosition: 0@-1 andFacing:East)! !

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:49:19'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:49:20'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:49:20'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:49:20'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:49:20'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:49:20'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:49:20'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:49:20'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:49:20'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:49:20'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:49:20'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:49:20'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:49:20'!
PASSED!
!MarsRoverTest methodsFor: 'testing backward' stamp: 'lp 5/15/2023 15:49:26' prior: 50606605!
test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth

	marsRoverDeployedInCenterFacingSouth receiveCommands: 'b'.
	self assert:(marsRoverDeployedInCenterFacingSouth isInPosition: 1@0 andFacing:South )! !

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:49:28'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:49:28'!
PASSED!
!MarsRoverTest methodsFor: 'testing backward' stamp: 'lp 5/15/2023 15:49:36' prior: 50606679!
test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest


	marsRoverDeployedInCenterFacingWest receiveCommands: 'b'.
	self assert:(marsRoverDeployedInCenterFacingWest isInPosition: 0@1 andFacing:West )! !

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:49:39'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:49:39'!
PASSED!
!MarsRoverTest methodsFor: 'testing Left Rotation' stamp: 'lp 5/15/2023 15:49:46' prior: 50607234!
test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth


	marsRoverDeployedInCenterFacingNorth receiveCommands: 'l'.
	self assert:(marsRoverDeployedInCenterFacingNorth isInPosition: 0@0 andFacing:West)! !

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:49:52'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:49:52'!
PASSED!
!MarsRoverTest methodsFor: 'testing Left Rotation' stamp: 'lp 5/15/2023 15:49:57' prior: 50607530!
test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest

	
	marsRoverDeployedInCenterFacingWest receiveCommands: 'l'.
	self assert:(marsRoverDeployedInCenterFacingWest isInPosition: 0@0 andFacing:South)! !

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:50:01'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:50:01'!
PASSED!
!MarsRoverTest methodsFor: 'testing Left Rotation' stamp: 'lp 5/15/2023 15:50:05' prior: 50607632!
test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth

	marsRoverDeployedInCenterFacingSouth receiveCommands: 'l'.
	self assert:(marsRoverDeployedInCenterFacingSouth isInPosition: 0@0 andFacing:East)! !

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:50:09'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:50:09'!
PASSED!
!MarsRoverTest methodsFor: 'testing Left Rotation' stamp: 'lp 5/15/2023 15:50:15' prior: 50607738!
test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast

	marsRoverDeployedInCenterFacingEast receiveCommands: 'l'.
	self assert:(marsRoverDeployedInCenterFacingEast isInPosition: 0@0 andFacing:North)! !

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:50:18'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:50:18'!
PASSED!
!MarsRoverTest methodsFor: 'testing Right Rotation' stamp: 'lp 5/15/2023 15:50:24' prior: 50606764!
test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth

	
	marsRoverDeployedInCenterFacingNorth receiveCommands: 'r'.
	self assert:(marsRoverDeployedInCenterFacingNorth isInPosition: 0@0 andFacing:East )! !
!MarsRoverTest methodsFor: 'testing Right Rotation' stamp: 'lp 5/15/2023 15:50:40' prior: 50606930!
test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast

	
	marsRoverDeployedInCenterFacingEast receiveCommands: 'r'.
	self assert:(marsRoverDeployedInCenterFacingEast isInPosition: 0@0 andFacing:South )! !

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:50:44'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:50:44'!
PASSED!
!MarsRoverTest methodsFor: 'testing Right Rotation' stamp: 'lp 5/15/2023 15:50:49' prior: 50607025!
test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth

	
	marsRoverDeployedInCenterFacingSouth receiveCommands: 'r'.
	self assert:(marsRoverDeployedInCenterFacingSouth isInPosition: 0@0 andFacing:West)! !

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:50:54'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:50:54'!
PASSED!
!MarsRoverTest methodsFor: 'testing Right Rotation' stamp: 'lp 5/15/2023 15:50:58' prior: 50607119!
test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest


	marsRoverDeployedInCenterFacingWest receiveCommands: 'r'.
	self assert:(marsRoverDeployedInCenterFacingWest isInPosition: 0@0 andFacing:North)! !

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:51:02'!
PASSED!
!MarsRoverTest methodsFor: 'testing error' stamp: 'lp 5/15/2023 15:51:13' prior: 50607984!
test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction

	
	
	self should: [
		marsRoverDeployedInCenterFacingNorth receiveCommands: 'ñ'
		] raise:  Error 
	withExceptionDo: [:error|
			self assert:( MarsRover  unknowCommandErrorDescription  ) equals: (error  messageText ).
			self assert:( marsRoverDeployedInCenterFacingNorth isInPosition: 0@0 andFacing:North ).
	]
	! !

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:51:18'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:51:18'!
PASSED!
!MarsRoverTest methodsFor: 'testing empty instruction' stamp: 'lp 5/15/2023 15:51:34' prior: 50605960!
test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList

	
	marsRoverDeployedInCenterFacingWest receiveCommands: ''.
	self assert:(marsRoverDeployedInCenterFacingWest isInPosition: 1@0 andFacing:West )! !
!MarsRoverTest methodsFor: 'testing empty instruction' stamp: 'lp 5/15/2023 15:51:40' prior: 50620536!
test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList

	
	marsRoverDeployedInCenterFacingWest receiveCommands: ''.
	self assert:(marsRoverDeployedInCenterFacingWest isInPosition: 0@0 andFacing:West )! !

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:51:41'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:51:41'!
PASSED!
!MarsRoverTest methodsFor: 'testing many' stamp: 'lp 5/15/2023 15:51:57' prior: 50608563!
test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction

	
	marsRoverDeployedInCenterFacingWest receiveCommands: 'ff'.
	self assert:(marsRoverDeployedInCenterFacingWest isInPosition: 0@-2 andFacing:West)! !

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:52:01'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:52:01'!
PASSED!
!MarsRoverTest methodsFor: 'testing many' stamp: 'lp 5/15/2023 15:52:06' prior: 50609495!
test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards

	
	marsRoverDeployedInCenterFacingNorth receiveCommands: 'fb'.
	self assert:(marsRoverDeployedInCenterFacingNorth isInPosition: 0@0 andFacing:North)! !
!MarsRoverTest methodsFor: 'testing many' stamp: 'lp 5/15/2023 15:52:13' prior: 50610229!
test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft

	
	marsRoverDeployedInCenterFacingNorth receiveCommands: 'fl'.
	self assert:(marsRoverDeployedInCenterFacingNorth isInPosition: 1@0 andFacing:West)! !

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:52:18'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:52:18'!
PASSED!
!MarsRoverTest methodsFor: 'testing many' stamp: 'lp 5/15/2023 15:52:22' prior: 50610351!
test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight

	
	marsRoverDeployedInCenterFacingNorth receiveCommands: 'fr'.
	self assert:(marsRoverDeployedInCenterFacingNorth isInPosition: 1@0 andFacing:East)! !

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:52:27'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:52:27'!
PASSED!
!MarsRoverTest methodsFor: 'testing many' stamp: 'lp 5/15/2023 15:52:36' prior: 50611010!
test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF
	
	
	self should: [
		marsRoverDeployedInCenterFacingNorth receiveCommands: 'fñ'
		] raise:  Error 
	withExceptionDo: [:error|
			self assert:( MarsRover  unknowCommandErrorDescription  ) equals: (error  messageText ).
			self assert:( marsRoverDeployedInCenterFacingNorth isInPosition: 1@0 andFacing:North ).
	]! !

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:52:41'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:52:41'!
PASSED!
!MarsRoverTest methodsFor: 'testing many' stamp: 'lp 5/15/2023 15:52:46' prior: 50612550!
test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction

	
	marsRoverDeployedInCenterFacingWest receiveCommands: 'fff'.
	self assert:(marsRoverDeployedInCenterFacingWest isInPosition: 0@-3 andFacing:West)! !

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:52:49'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:52:49'!
PASSED!
!MarsRoverTest methodsFor: 'testing many' stamp: 'lp 5/15/2023 15:52:54' prior: 50612579!
test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards

	
	marsRoverDeployedInCenterFacingWest receiveCommands: 'ffb'.
	self assert:(marsRoverDeployedInCenterFacingWest isInPosition: 0@-1 andFacing:West)! !
!MarsRoverTest methodsFor: 'testing many' stamp: 'lp 5/15/2023 15:53:01' prior: 50612719!
test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions

	
	marsRoverDeployedInCenterFacingWest receiveCommands: 'ffl'.
	self assert:(marsRoverDeployedInCenterFacingWest isInPosition: 0@-2 andFacing:South)! !

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:53:06'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:53:06'!
PASSED!
!MarsRoverTest methodsFor: 'testing many' stamp: 'lp 5/15/2023 15:53:11' prior: 50612909!
test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions

	
	marsRoverDeployedInCenterFacingWest receiveCommands: 'ffr'.
	self assert:(marsRoverDeployedInCenterFacingWest isInPosition: 0@-2 andFacing:North)! !

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test00MarsRoverStartInTheInitialPosition stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDirectionIsnNorthWhenDeployedFacingNorth stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test02MarsRoverDirectionIsEastWhenDeployedFacingEast stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverDirectionIsSouthWhenDeployedFacingSouth stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test04MarsRoverDirectionIsWestWhenDeployedFacingWest stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverDoesNothingWhenReceivedEmptyInstructionList stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRovershouldMoveNorthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRovershouldMoveSOuthWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRovershouldMoveEastWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRovershouldMoveWestWhenReceivedOneFInstruction stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRovershouldMoveSouthWhenReceivedOneBInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRovershouldMoveWestWhenReceivedOneBInstructionAndFacingEast stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRovershouldMoveNorthWhenReceivedOneBInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRovershouldMoveEastWhenReceivedOneBInstructionAndFacingWest stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRovershouldRotateToTheEastWhenReceivedOneRInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRovershouldRotateToTheSouthWhenReceivedOneRInstructionAndFacingEast stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRovershouldRotateToTheWestWhenReceivedOneRInstructionAndFacingSOuth stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRovershouldRotateToTheNorthWhenReceivedOneRInstructionAndFacingWest stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRovershouldRotateToTheWestWhenReceivedOneLInstructionAndFacingNorth stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRovershouldRotateToTheSouthWhenReceivedOneLInstructionAndFacingWest stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRovershouldRotateToTheEastWhenReceivedOneLInstructionAndFacingSouth stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRovershouldRotateToTheNOrthWhenReceivedOneLInstructionAndFacingEast stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test22marsRoverShouldFailWhenStartWithSomeUnknowInstruction stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test23marsRoverShouldMoveTwoTimesWhenReceivedTwoFInstruction stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test24marsRoverShouldNotMOveAFterGoingFowardAndBackwards stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test25marsRoverShouldFaceWestAFterGoingFowardAndAndTurnLeft stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test26marsRoverShouldFaceEastAFterGoingFowardAndAndTurnRight stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test27marsRoverShouldBeOnePlaceFowardAndHaltWhenReceivedUknowCOmmandAFterF stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test28marsRoverShouldMoveThreeTimesWhenReceivedThreeTImesFInstruction stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test29marsRoverShouldbeTwoPOsitionFowardAfterGoingBackwardAfterTwoFowards stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test30marsRoverShouldTurnLeftAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test31marsRoverShouldTurnRightAfterExcecutedTwoOtherInstructions stamp: 'lp 5/15/2023 15:53:16'!
PASSED!

!testRun: #MarsRoverTest #test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands stamp: 'lp 5/15/2023 15:53:16'!
PASSED!
!MarsRoverTest methodsFor: 'testing many' stamp: 'lp 5/15/2023 15:53:24' prior: 50613259!
test32marsRoverShouldHaltAfterExecutedTwoPreviousCommands

		
	
	self should: [
		marsRoverDeployedInCenterFacingNorth receiveCommands: 'ffñ'
		] raise:  Error 
	withExceptionDo: [:error|
			self assert:( MarsRover  unknowCommandErrorDescription  ) equals: (error  messageText ).
			self assert:( marsRoverDeployedInCenterFacingNorth isInPosition: 2@0 andFacing:North ).
	]! !

----SNAPSHOT----(15 May 2023 15:53:30) CuisUniversity-5706.image priorSource: 9141041!